{"ID":"20231108154423-w9bqc6h","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f4bf","id":"20231108154423-w9bqc6h","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231108154423-w9bqc6h\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231108154423-faag6uq\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231108164014-rr5nklj\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20231108154423-faag6uq\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;","title":"用户态线程、内核态线程","updated":"20231109194226"},"Children":[{"ID":"20231108154423-faag6uq","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231108154423-faag6uq","updated":"20231108154458"},"Children":[{"Type":"NodeText","Data":"用户态和内核态是什么"}]},{"ID":"20231108154459-oylxsdv","Type":"NodeParagraph","Properties":{"id":"20231108154459-oylxsdv","updated":"20231108154505"},"Children":[{"Type":"NodeText","Data":"大家在学习 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"操作系统原理、多线程"},{"Type":"NodeText","Data":" 时肯定听说过这个："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"系统中断会造成 CPU 从用户态 --\u0026gt; 内核态 的切换"},{"Type":"NodeText","Data":"​ ，虽然也会有一些解释，但是我想应该有很多人其实不明白 用户态、内核态到底是个什么东东"}]},{"ID":"20231108154510-bpqa4ux","Type":"NodeParagraph","Properties":{"id":"20231108154510-bpqa4ux","updated":"20231108154544"},"Children":[{"Type":"NodeText","Data":"用户态、内核态是什么呢？其实不是多复杂。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"用户态、内核态的概念就是指 CPU 指令权限的区别，你要在应用程序中读写 IO，那么就必然会用到 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"ring 0"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 级别的 CPU 指令，而应用程序的 CPU 指令权限只有 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"ring 3"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"，那么就必须到拥有 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"ring0 权限的系统内核"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 中去执行这行代码，必然会造成 CPU 从 用户态到内核态 的切换。其表现形式是：代码会从应用程序所在的 用户线程 切换到 内核中的 内核线程 去执行"},{"Type":"NodeText","Data":"，恩，就是这么回事"}]},{"ID":"20231108154546-z33yqem","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231108154546-z33yqem","updated":"20231108154606"},"Children":[{"Type":"NodeText","Data":"用户态、内核态在资源上的区别"}]},{"ID":"20231108154606-09ovsn0","Type":"NodeBlockquote","Properties":{"id":"20231108154606-09ovsn0","updated":"20231108154613"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231108154612-br5r6g6","Type":"NodeParagraph","Properties":{"id":"20231108154612-br5r6g6","updated":"20231108154613"},"Children":[{"Type":"NodeText","Data":"CPU 指令权限的高低，一样会反映在对资源的操作上，区别就是高 CPU 指令权限可以操作更多、更核心的资源，典型的就是内存和硬件资源"}]}]},{"ID":"20231108154614-7dn3g30","Type":"NodeParagraph","Properties":{"id":"20231108154614-7dn3g30","updated":"20231108154620"},"Children":[{"Type":"NodeText","Data":"虽然从概念上说："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"用户态、内核态 只是 CPU 指令权限的区别"},{"Type":"NodeText","Data":"​，但是在 程序、系统内核设计上，必然会有相对应的运行机制来支持的，这体现在2个显著的区别上："}]},{"ID":"20231108154622-j5h71re","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231108154622-j5h71re","updated":"20231108154727"},"Children":[{"ID":"20231108154701-596rjul","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231108154701-596rjul","updated":"20231108154724"},"Children":[{"ID":"20231108154701-fwwdhof","Type":"NodeParagraph","Properties":{"id":"20231108154701-fwwdhof","updated":"20231108154713"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"用户态的代码必须由 用户线程 去执行、内核态的代码必须由 内核线程 去执行"}]}]},{"ID":"20231108154714-3ohvlz8","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231108154714-3ohvlz8","updated":"20231108154727"},"Children":[{"ID":"20231108154714-28eslhm","Type":"NodeParagraph","Properties":{"id":"20231108154714-28eslhm","updated":"20231108154727"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"用户态、内核态 或者说 用户线程、内核线程 可以使用的资源是不同的，尤体现在内存资源上。Linux 内核对每一个进程都会分配 4G 虚拟内存空间地址"}]}]}]},{"ID":"20231108154742-0m8vgg3","Type":"NodeList","ListData":{},"Properties":{"id":"20231108154742-0m8vgg3","updated":"20231108154806"},"Children":[{"ID":"20231108154744-jkkzl01","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231108154744-jkkzl01","updated":"20231108154744"},"Children":[{"ID":"20231108154744-4cmajx0","Type":"NodeParagraph","Properties":{"id":"20231108154744-4cmajx0","updated":"20231108154751"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"用户态："},{"Type":"NodeText","Data":"​ --\u003e 只能操作 0-3G 的内存地址"}]}]},{"ID":"20231108154752-znlndba","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231108154752-znlndba","updated":"20231108154806"},"Children":[{"ID":"20231108154752-ehmls3b","Type":"NodeParagraph","Properties":{"id":"20231108154752-ehmls3b","updated":"20231108154806"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"内核态："},{"Type":"NodeText","Data":"​ --\u003e 0-4G 的内存地址都可以操作，尤其是对 3-4G 的高位地址必须由内核态去操作，因为所有进程的 3-4G 的高位地址使用的都是同一块、专门留给 系统内核 使用的 1G 物理内存"}]}]}]},{"ID":"20231108154806-2p91fuo","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231108154806-2p91fuo","updated":"20231108154815"},"Children":[{"ID":"20231108154815-v72pnqp","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20231108154815-v72pnqp","updated":"20231108154815"},"Children":[{"ID":"20231108154815-ca62odt","Type":"NodeParagraph","Properties":{"id":"20231108154815-ca62odt","updated":"20231108154816"},"Children":[{"Type":"NodeText","Data":"所有对 硬件资源、系统内核数据 的访问都必须由内核态去执行"}]}]}]},{"ID":"20231108154817-6sltr7g","Type":"NodeBlockquote","Properties":{"id":"20231108154817-6sltr7g","updated":"20231108154831"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231108154824-tw5m53b","Type":"NodeParagraph","Properties":{"id":"20231108154824-tw5m53b","updated":"20231108154831"},"Children":[{"Type":"NodeText","Data":"Linux 进程的 4GB 地址空间，3G-4G 部分大家是共享的("},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"指所有进程的内核态逻辑地址是共享同一块物理内存地址"},{"Type":"NodeText","Data":"​)，是内核态的地址空间，这里存放在整个内核的代码和所有的内核模块，以及内核所维护的数据"}]}]},{"ID":"20231108154843-ny8m6wi","Type":"NodeParagraph","Properties":{"id":"20231108154843-ny8m6wi","updated":"20231108154843"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231108154843-xpus32k.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231108163909-lk5c7el","Type":"NodeParagraph","Properties":{"id":"20231108163909-lk5c7el","updated":"20231108163909"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231108163909-uhwezql.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231108163911-6ld7oui","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231108163911-6ld7oui","updated":"20231108163934"},"Children":[{"Type":"NodeText","Data":"系统调用"}]},{"ID":"20231108163935-3dm8vbt","Type":"NodeParagraph","Properties":{"id":"20231108163935-3dm8vbt","updated":"20231108163942"},"Children":[{"Type":"NodeText","Data":"上面说了："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"硬件资源、系统内核数据 的访问都必须由内核态去执行"},{"Type":"NodeText","Data":"​，这就涉及到一个从用户态到内核态的切换的问题，具体的需要在详细了解 用户线程、内核线程 之后才能理解的清楚"}]},{"ID":"20231108163949-xncngqp","Type":"NodeParagraph","Properties":{"id":"20231108163949-xncngqp","updated":"20231108163949"},"Children":[{"Type":"NodeText","Data":"从 用户态到内核态 的切换有3种方式："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"系统调用、中断、异常"},{"Type":"NodeText","Data":"​，其中系统调用也是使用 中断 实现的，这里主要说下系统调用，下面的操作都需要系统调用到 内核态 中去执行："}]},{"ID":"20231108163949-32yx5uc","Type":"NodeList","ListData":{},"Properties":{"id":"20231108163949-32yx5uc","updated":"20231108163949"},"Children":[{"ID":"20231108163949-9yz1zbl","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231108163949-9yz1zbl","updated":"20231108163949"},"Children":[{"ID":"20231108163949-lx0gid2","Type":"NodeParagraph","Properties":{"id":"20231108163949-lx0gid2","updated":"20231108163949"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"进程操作、获取进程信息"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20231108163949-bigdsu0","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231108163949-bigdsu0","updated":"20231108163949"},"Children":[{"ID":"20231108163949-oi9lhqt","Type":"NodeParagraph","Properties":{"id":"20231108163949-oi9lhqt","updated":"20231108163949"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"文件操作"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20231108163949-iuoc4pd","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231108163949-iuoc4pd","updated":"20231108163949"},"Children":[{"ID":"20231108163949-1usgwqo","Type":"NodeParagraph","Properties":{"id":"20231108163949-1usgwqo","updated":"20231108163949"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"硬件设备操作"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20231108163949-1d7c9ml","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231108163949-1d7c9ml","updated":"20231108163949"},"Children":[{"ID":"20231108163949-49rxnrw","Type":"NodeParagraph","Properties":{"id":"20231108163949-49rxnrw","updated":"20231108163949"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"系统内核信息查询、硬件信息查询"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20231108163949-ovkmd06","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231108163949-ovkmd06","updated":"20231108163949"},"Children":[{"ID":"20231108163949-bu5bpmb","Type":"NodeParagraph","Properties":{"id":"20231108163949-bu5bpmb","updated":"20231108163949"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"通信，进程通信、malloc 申请内存，pipe 开辟管道都是"},{"Type":"NodeText","Data":"​"}]}]}]},{"ID":"20231108163950-xwv0ybm","Type":"NodeParagraph","Properties":{"id":"20231108163950-xwv0ybm","updated":"20231108163954"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"man syscalls"},{"Type":"NodeText","Data":"​ 指令可以看到所有的 Linux 系统内核调用方法"}]},{"ID":"20231108163954-9qo1ofy","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231108163954-9qo1ofy","updated":"20231108164014"},"Children":[{"Type":"NodeText","Data":"用户线程和内核线程"}]},{"ID":"20231108164014-rr5nklj","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231108164014-rr5nklj","updated":"20231108164022"},"Children":[{"Type":"NodeText","Data":"什么是进程"}]},{"ID":"20231109191118-g2awvsn","Type":"NodeBlockquote","Properties":{"id":"20231109191118-g2awvsn","updated":"20231109191140"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231109191119-2k1se1b","Type":"NodeParagraph","Properties":{"id":"20231109191119-2k1se1b","updated":"20231109191140"},"Children":[{"Type":"NodeText","Data":"进程：系统调度资源的最小或基本单位"}]}]},{"ID":"20231109191143-xxyaoeh","Type":"NodeParagraph","Properties":{"id":"20231109191143-xxyaoeh","updated":"20231109191324"},"Children":[{"Type":"NodeText","Data":"系统内核中 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"进程 "},{"Type":"NodeText","Data":"就是：一段记录专有资源和状态的 task_struct 结构体， 就是一个数据结构或者理解为一个存储资源信息的对象，task_struct 结构体。"}]},{"ID":"20231109191326-lfqab21","Type":"NodeParagraph","Properties":{"id":"20231109191326-lfqab21","updated":"20231109191338"},"Children":[{"Type":"NodeText","Data":"其存储的信息就是这些："}]},{"ID":"20231109191355-os4kqkt","Type":"NodeBlockquote","Properties":{"id":"20231109191355-os4kqkt","updated":"20231109192500"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231109191355-9mf5w24","Type":"NodeList","ListData":{},"Properties":{"id":"20231109191355-9mf5w24","updated":"20231109192500"},"Children":[{"ID":"20231109191358-3zpxkn4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231109191358-3zpxkn4","updated":"20231109191358"},"Children":[{"ID":"20231109191358-bkzvhyu","Type":"NodeParagraph","Properties":{"id":"20231109191358-bkzvhyu","updated":"20231109191647"},"Children":[{"Type":"NodeText","Data":"标识符： 与进程相关的唯一标识符，用来区别正在执行的进程和其他进程"}]}]},{"ID":"20231109191647-krw7gqv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231109191647-krw7gqv"},"Children":[{"ID":"20231109191647-kuodlvy","Type":"NodeParagraph","Properties":{"id":"20231109191647-kuodlvy","updated":"20231109191929"},"Children":[{"Type":"NodeText","Data":"状态：描述进程的状态，因为进程有挂起，阻塞，运行等好几个状态，所以都有个标识符来记录进程的执行状态"}]}]},{"ID":"20231109191929-bkdoxrc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231109191929-bkdoxrc"},"Children":[{"ID":"20231109191929-yzhbtop","Type":"NodeParagraph","Properties":{"id":"20231109191929-yzhbtop","updated":"20231109192204"},"Children":[{"Type":"NodeText","Data":"优先级：如果有好几个进程正在执行，就涉及到进程被执行的先后顺序问题，这和进程优先级这个标识符有关"}]}]},{"ID":"20231109192204-8zj8k70","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231109192204-8zj8k70"},"Children":[{"ID":"20231109192204-m0tg2us","Type":"NodeParagraph","Properties":{"id":"20231109192204-m0tg2us","updated":"20231109192232"},"Children":[{"Type":"NodeText","Data":"程序计数器：程序中即将被执行的下一条指令的地址"}]}]},{"ID":"20231109192233-b5700e4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231109192233-b5700e4"},"Children":[{"ID":"20231109192233-mvk3laq","Type":"NodeParagraph","Properties":{"id":"20231109192233-mvk3laq","updated":"20231109192259"},"Children":[{"Type":"NodeText","Data":"内存指针：程序代码和进程相关数据的指针"}]}]},{"ID":"20231109192259-f0xhhse","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231109192259-f0xhhse"},"Children":[{"ID":"20231109192259-0yuow44","Type":"NodeParagraph","Properties":{"id":"20231109192259-0yuow44","updated":"20231109192326"},"Children":[{"Type":"NodeText","Data":"上下文数据：进程执行时处理器的寄存器中的数据"}]}]},{"ID":"20231109192326-b0j7zoj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231109192326-b0j7zoj"},"Children":[{"ID":"20231109192326-b5o6d2k","Type":"NodeParagraph","Properties":{"id":"20231109192326-b5o6d2k","updated":"20231109192428"},"Children":[{"Type":"NodeText","Data":"I/O 状态信息： 包括显示的I/O请求，分配给进程的I/O设备和被进程使用的文件列表等"}]}]},{"ID":"20231109192429-3cv3qpb","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231109192429-3cv3qpb","updated":"20231109192500"},"Children":[{"ID":"20231109192429-7hkt4ud","Type":"NodeParagraph","Properties":{"id":"20231109192429-7hkt4ud","updated":"20231109192500"},"Children":[{"Type":"NodeText","Data":"记账信息： 包括处理器的时间总和，记帐号等等。"}]}]}]}]},{"ID":"20231109191314-3yfi3m0","Type":"NodeParagraph","Properties":{"id":"20231109191314-3yfi3m0","updated":"20231109192746"},"Children":[{"Type":"NodeText","Data":"这个 task_struct 结构体有个专门的名字："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"PCB"},{"Type":"NodeText","Data":"​--\u003ePROCESS control block，也叫进程控制块，PCB 数据保存在进程4G内存虚拟地址中的内核态中，也就是 3-4G内存这一段内，显然用户态时是无法访问的，想要访问就必须从用户态切换到内核态，而且这么核心的数据直接暴露给用户程序也是很危险的。"}]},{"ID":"20231109192747-zk92efk","Type":"NodeParagraph","Properties":{"id":"20231109192747-zk92efk","updated":"20231109192853"},"Children":[{"Type":"NodeText","Data":"进程在内核中就是这么个东西，就是一个叫 PCB 的task_struct 结构体，系统内核中有一个 PCB TABLE 用来存储，调度进程。"}]},{"ID":"20231109192903-u6mir0p","Type":"NodeParagraph","Properties":{"id":"20231109192903-u6mir0p","updated":"20231109192903"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231109192903-mm5d8bq.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231109193537-fan8b3l","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231109193537-fan8b3l","updated":"20231109193543"},"Children":[{"Type":"NodeText","Data":"什么是线程"}]},{"ID":"20231109193543-wor3i0g","Type":"NodeParagraph","Properties":{"id":"20231109193543-wor3i0g","updated":"20231109193943"},"Children":[{"Type":"NodeText","Data":"线程在内核中同进程一样，也是一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"task——struct"},{"Type":"NodeText","Data":"​结构体，线程在 new出来之后就是把进程的PCB复制一份给自己，然后再加上 PCB 没有的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"PC程序计数器，SP堆栈，State 状态，寄存器"},{"Type":"NodeText","Data":"​这些信息。线程的 task_struct 结构体 叫做："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"TCB"},{"Type":"NodeText","Data":"​ --\u003e thread control block。"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"线程本质上就是多了一个任务列表，就是 "},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"code strong text","TextMarkTextContent":"栈帧"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":" 这个东西"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"}]},{"ID":"20231109193936-fegvzvt","Type":"NodeParagraph","Properties":{"id":"20231109193936-fegvzvt","updated":"20231109194012"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"线程为什么能共享堆内存资源呢，怎么做到的呢"},{"Type":"NodeText","Data":"，真的很简单，把 进程资源信息 PCB 复制一份给 自己的 TCB 就行了，所以这里大家体会下。"}]},{"ID":"20231109194012-681fs06","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231109194012-681fs06","updated":"20231109194028"},"Children":[{"Type":"NodeText","Data":"换个角度理解进程、线程"}]},{"ID":"20231109194028-ml3sxnq","Type":"NodeList","ListData":{},"Properties":{"id":"20231109194028-ml3sxnq","updated":"20231109194031"},"Children":[{"ID":"20231109194031-hwqja6f","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231109194031-hwqja6f","updated":"20231109194031"},"Children":[{"ID":"20231109194031-2w42xxf","Type":"NodeParagraph","Properties":{"id":"20231109194031-2w42xxf","updated":"20231109194109"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"进程"},{"Type":"NodeText","Data":"​--\u003e 是向系统内核申请资源的最小、基本单位"}]}]},{"ID":"20231109194109-w0kdtki","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231109194109-w0kdtki"},"Children":[{"ID":"20231109194109-8wgj2mu","Type":"NodeParagraph","Properties":{"id":"20231109194109-8wgj2mu","updated":"20231109194140"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"线程"},{"Type":"NodeText","Data":"​--\u003e 是竞争CPU资源的最小、基本单位"}]}]}]},{"ID":"20231109194141-o2cbh5v","Type":"NodeParagraph","Properties":{"id":"20231109194141-o2cbh5v","updated":"20231109194226"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color11);"},"TextMarkType":"strong text","TextMarkTextContent":"进程申请的是内存资源，线程竞争的是CPU资源。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color11);\"}"}]},{"ID":"20231109194218-byx8ajx","Type":"NodeParagraph","Properties":{"id":"20231109194218-byx8ajx"}}]}