{"ID":"20230811142333-scjxi1d","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230811142333-scjxi1d","title":"大模型启动脚本","updated":"20230811150137"},"Children":[{"ID":"20230811142827-sfdkk83","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230811142827-sfdkk83","updated":"20230811142831"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"def update_source(sample, metedata):\n    metedatas[\"source\"] = sample[\"source\"]\n    return metedata\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230811142827-c4cj6gi","Type":"NodeParagraph","Properties":{"id":"20230811142827-c4cj6gi","updated":"20230811143810"},"Children":[{"Type":"NodeText","Data":"这段代码定义了一个函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"update_source"},{"Type":"NodeText","Data":"​的函数，该函数接受两个参数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"sample"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"metadata"},{"Type":"NodeText","Data":"​。函数的目的是将 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"sample"},{"Type":"NodeText","Data":"​ 中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"\u0026quot;source\u0026quot;"},{"Type":"NodeText","Data":"​值更新到 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"metadata"},{"Type":"NodeText","Data":"​ 中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"\u0026quot;source\u0026quot;"},{"Type":"NodeText","Data":"​字段，并返回更新后的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"metadata"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20230811142333-4of91kv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230811142333-4of91kv","updated":"20230811143140"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"def load_file(filepath, sentence_size=SENTENCE_SIZE):\n        if filepath.lower().endswith(\".md\"):\n        loader = UnstructuredFileLoader(filepath, mode=\"elements\")\n        docs = loader.load()\n    elif filepath.lower().endswith(\".json\"):\n        loader = JSONLoader(filepath, jq_schema=\".[]\", content_key=\"knowledge\", metadata_func=update_source)\n        textsplitter = ChineseTextSplitter(pdf=False, sentence_size=sentence_size)\n        docs = loader.load_and_split(textsplitter)\n    elif filepath.lower().endswith(\".txt\"):\n        loader = TextLoader(filepath, autodetect_encoding=True)\n        textsplitter = ChineseTextSplitter(pdf=False, sentence_size=sentence_size)\n        docs = loader.load_and_split(textsplitter)\n    elif filepath.lower().endswith(\".pdf\"):\n        loader = UnstructuredPaddlePDFLoader(filepath)\n        textsplitter = ChineseTextSplitter(pdf=True, sentence_size=sentence_size)\n        docs = loader.load_and_split(textsplitter)\n    elif filepath.lower().endswith(\".jpg\") or filepath.lower().endswith(\".png\"):\n        loader = UnstructuredPaddleImageLoader(filepath, mode=\"elements\")\n        textsplitter = ChineseTextSplitter(pdf=False, sentence_size=sentence_size)\n        docs = loader.load_and_split(text_splitter=textsplitter)\n    else:\n        loader = UnstructuredFileLoader(filepath, mode=\"elements\")\n        textsplitter = ChineseTextSplitter(pdf=False, sentence_size=sentence_size)\n        docs = loader.load_and_split(text_splitter=textsplitter)\n    write_check_file(filepath, docs)\n    return docs\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230811142639-kgc2gmw","Type":"NodeParagraph","Properties":{"id":"20230811142639-kgc2gmw","updated":"20230811142639"},"Children":[{"Type":"NodeText","Data":"这段代码定义了一个函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"load_file"},{"Type":"NodeText","Data":"​，它接受一个参数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"filepath"},{"Type":"NodeText","Data":"​ 和一个可选参数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"sentence_size"},{"Type":"NodeText","Data":"​，并返回一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"docs"},{"Type":"NodeText","Data":"​ 列表。"}]},{"ID":"20230811142639-yvf6uf8","Type":"NodeParagraph","Properties":{"id":"20230811142639-yvf6uf8","updated":"20230811142639"},"Children":[{"Type":"NodeText","Data":"该函数根据 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"filepath"},{"Type":"NodeText","Data":"​ 的扩展名来确定如何加载文件并创建适当的加载器。根据不同的扩展名，函数采用不同的加载器来处理文件。以下是对不同扩展名的处理逻辑："}]},{"ID":"20230811142639-cjcq9fj","Type":"NodeList","ListData":{},"Properties":{"id":"20230811142639-cjcq9fj","updated":"20230811142639"},"Children":[{"ID":"20230811142639-gsh3ml4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230811142639-gsh3ml4","updated":"20230811142639"},"Children":[{"ID":"20230811142639-ondr44u","Type":"NodeParagraph","Properties":{"id":"20230811142639-ondr44u","updated":"20230811142639"},"Children":[{"Type":"NodeText","Data":"如果文件扩展名为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".md"},{"Type":"NodeText","Data":"​，则使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"UnstructuredFileLoader"},{"Type":"NodeText","Data":"​ 加载器以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"\u0026quot;elements\u0026quot;"},{"Type":"NodeText","Data":"​ 模式加载文件，并将结果存储在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"docs"},{"Type":"NodeText","Data":"​ 中。"}]}]},{"ID":"20230811142639-wro6z9e","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230811142639-wro6z9e","updated":"20230811142639"},"Children":[{"ID":"20230811142639-6rx4zaf","Type":"NodeParagraph","Properties":{"id":"20230811142639-6rx4zaf","updated":"20230811142639"},"Children":[{"Type":"NodeText","Data":"如果文件扩展名为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".json"},{"Type":"NodeText","Data":"​，则使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"JSONLoader"},{"Type":"NodeText","Data":"​ 加载器来加载文件，并结合 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ChineseTextSplitter"},{"Type":"NodeText","Data":"​ 对文本进行分割，最后将结果存储在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"docs"},{"Type":"NodeText","Data":"​ 中。"}]}]},{"ID":"20230811142639-ia9mg11","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230811142639-ia9mg11","updated":"20230811142639"},"Children":[{"ID":"20230811142639-qs7cago","Type":"NodeParagraph","Properties":{"id":"20230811142639-qs7cago","updated":"20230811142639"},"Children":[{"Type":"NodeText","Data":"如果文件扩展名为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".txt"},{"Type":"NodeText","Data":"​，则使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"TextLoader"},{"Type":"NodeText","Data":"​ 加载器来加载文件，并结合 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ChineseTextSplitter"},{"Type":"NodeText","Data":"​ 对文本进行分割，最后将结果存储在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"docs"},{"Type":"NodeText","Data":"​ 中。"}]}]},{"ID":"20230811142639-b5q0ckb","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230811142639-b5q0ckb","updated":"20230811142639"},"Children":[{"ID":"20230811142639-xbxve5c","Type":"NodeParagraph","Properties":{"id":"20230811142639-xbxve5c","updated":"20230811142639"},"Children":[{"Type":"NodeText","Data":"如果文件扩展名为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".pdf"},{"Type":"NodeText","Data":"​，则使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"UnstructuredPaddlePDFLoader"},{"Type":"NodeText","Data":"​ 加载器来加载文件，并结合 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ChineseTextSplitter"},{"Type":"NodeText","Data":"​ 对文本进行分割，最后将结果存储在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"docs"},{"Type":"NodeText","Data":"​ 中。"}]}]},{"ID":"20230811142639-uave9lb","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230811142639-uave9lb","updated":"20230811142639"},"Children":[{"ID":"20230811142639-fo0hgsa","Type":"NodeParagraph","Properties":{"id":"20230811142639-fo0hgsa","updated":"20230811142639"},"Children":[{"Type":"NodeText","Data":"如果文件扩展名为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".jpg"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".png"},{"Type":"NodeText","Data":"​，则使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"UnstructuredPaddleImageLoader"},{"Type":"NodeText","Data":"​ 加载器以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"\u0026quot;elements\u0026quot;"},{"Type":"NodeText","Data":"​ 模式加载文件，并结合 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ChineseTextSplitter"},{"Type":"NodeText","Data":"​ 对文本进行分割，最后将结果存储在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"docs"},{"Type":"NodeText","Data":"​ 中。"}]}]},{"ID":"20230811142639-g4mx2nw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230811142639-g4mx2nw","updated":"20230811142639"},"Children":[{"ID":"20230811142639-6sdeiyj","Type":"NodeParagraph","Properties":{"id":"20230811142639-6sdeiyj","updated":"20230811142639"},"Children":[{"Type":"NodeText","Data":"如果以上条件都不满足，则使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"UnstructuredFileLoader"},{"Type":"NodeText","Data":"​ 加载器以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"\u0026quot;elements\u0026quot;"},{"Type":"NodeText","Data":"​ 模式加载文件，并结合 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ChineseTextSplitter"},{"Type":"NodeText","Data":"​ 对文本进行分割，最后将结果存储在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"docs"},{"Type":"NodeText","Data":"​ 中。"}]}]}]},{"ID":"20230811142639-jbqz1d9","Type":"NodeParagraph","Properties":{"id":"20230811142639-jbqz1d9","updated":"20230811142639"},"Children":[{"Type":"NodeText","Data":"最后，函数调用了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"write_check_file(filepath, docs)"},{"Type":"NodeText","Data":"​ 来写入检查文件，然后返回 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"docs"},{"Type":"NodeText","Data":"​ 列表作为结果。"}]},{"ID":"20230811142639-011zkhi","Type":"NodeParagraph","Properties":{"id":"20230811142639-011zkhi","updated":"20230811142650"},"Children":[{"Type":"NodeText","Data":"这段代码的作用是根据给定的文件路径加载文件内容，并根据文件的类型和规则进行解析和处理。"}]},{"ID":"20230811142642-badxd8z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230811142642-badxd8z","updated":"20230811144135"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"def write_check_file(filepath, docs):\n  folder_path = os.path.join(os.path.dirname(filepath), \"tmp_files\")\n  if not os.path.exists(floder_path):\n    os.makedirs(folder_path)\n  fp = os.path.join(folder_path, 'load_file.txt')\n  with open(fp, 'a+', encoding='utf-8') as fout:\n    fout.write(\"filepath=%s,len=%s\" % (filepath, len(docs)))\n    fout.write('\\n')\n    for i in docs:\n      fout.write(str(i))\n      fout.write('\\n')\n    fout.close()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230811144244-dard34s","Type":"NodeParagraph","Properties":{"id":"20230811144244-dard34s","updated":"20230811144244"},"Children":[{"Type":"NodeText","Data":"这段代码定义了一个名为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"write_check_file"},{"Type":"NodeText","Data":"​ 的函数，它接受两个参数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"filepath"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"docs"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20230811144244-p3ufewr","Type":"NodeParagraph","Properties":{"id":"20230811144244-p3ufewr","updated":"20230811144244"},"Children":[{"Type":"NodeText","Data":"函数的主要目的是将文件路径和文档内容写入到一个检查文件中。首先，函数创建了一个名为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tmp_files"},{"Type":"NodeText","Data":"​ 的文件夹路径，用于存放检查文件。如果该文件夹路径不存在，则创建它。"}]},{"ID":"20230811144244-pfkujp2","Type":"NodeParagraph","Properties":{"id":"20230811144244-pfkujp2","updated":"20230811144244"},"Children":[{"Type":"NodeText","Data":"然后，函数打开一个名为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"load_file.txt"},{"Type":"NodeText","Data":"​ 的文件对象，并以追加模式打开。接下来，函数逐行将文件路径和文档内容写入文件中。首先写入文件路径和文档数量的信息，然后写入每个文档的内容。"}]},{"ID":"20230811144244-nc8xezi","Type":"NodeParagraph","Properties":{"id":"20230811144244-nc8xezi","updated":"20230811144244"},"Children":[{"Type":"NodeText","Data":"最后，函数关闭文件对象。"}]},{"ID":"20230811144244-f5atncd","Type":"NodeParagraph","Properties":{"id":"20230811144244-f5atncd","updated":"20230811144248"},"Children":[{"Type":"NodeText","Data":"总体来说，这段代码的作用是将文件路径和文档内容写入到一个检查文件中，用于记录加载文件的过程和结果。"}]},{"ID":"20230811145534-mdewey9","Type":"NodeParagraph","Properties":{"id":"20230811145534-mdewey9"}},{"ID":"20230811145535-lkkp0xv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230811145535-lkkp0xv","updated":"20230811145536"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"def seperate_list(ls: List[int]) -\u003e List[List[int]]:\n    lists = []\n    ls1 = [ls[0]]\n    for i in range(1, len(ls)):\n        if ls[i - 1] + 1 == ls[i]:\n            ls1.append(ls[i])\n        else:\n            lists.append(ls1)\n            ls1 = [ls[i]]\n    lists.append(ls1)\n    return lists\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230811150133-wswzvn6","Type":"NodeParagraph","Properties":{"id":"20230811150133-wswzvn6","updated":"20230811150133"},"Children":[{"Type":"NodeText","Data":"这段代码定义了一个名为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"separate_list"},{"Type":"NodeText","Data":"​ 的函数，该函数接受一个整数列表 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls"},{"Type":"NodeText","Data":"​，并返回一个整数列表的列表。"}]},{"ID":"20230811150133-hxw6cmv","Type":"NodeParagraph","Properties":{"id":"20230811150133-hxw6cmv","updated":"20230811150133"},"Children":[{"Type":"NodeText","Data":"函数的主要目的是将连续递增的整数子序列划分为多个子列表。首先，函数创建一个空列表 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"lists"},{"Type":"NodeText","Data":"​ 用于存储结果子列表。"}]},{"ID":"20230811150133-nndwlaf","Type":"NodeParagraph","Properties":{"id":"20230811150133-nndwlaf","updated":"20230811150133"},"Children":[{"Type":"NodeText","Data":"接下来，函数初始化一个临时列表 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls1"},{"Type":"NodeText","Data":"​，并将 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls"},{"Type":"NodeText","Data":"​ 中的第一个元素添加到其中。"}]},{"ID":"20230811150133-ociuh5t","Type":"NodeParagraph","Properties":{"id":"20230811150133-ociuh5t","updated":"20230811150133"},"Children":[{"Type":"NodeText","Data":"然后，函数通过遍历 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls"},{"Type":"NodeText","Data":"​ 的索引从 1 到 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls"},{"Type":"NodeText","Data":"​ 的长度减一，进行以下操作："}]},{"ID":"20230811150133-d4nj6nv","Type":"NodeList","ListData":{},"Properties":{"id":"20230811150133-d4nj6nv","updated":"20230811150133"},"Children":[{"ID":"20230811150133-ymtdfj4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230811150133-ymtdfj4","updated":"20230811150133"},"Children":[{"ID":"20230811150133-7572z5l","Type":"NodeParagraph","Properties":{"id":"20230811150133-7572z5l","updated":"20230811150133"},"Children":[{"Type":"NodeText","Data":"如果当前元素 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls[i]"},{"Type":"NodeText","Data":"​ 是前一个元素 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls[i - 1]"},{"Type":"NodeText","Data":"​ 加 1，则说明它们属于同一个递增子序列，将 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls[i]"},{"Type":"NodeText","Data":"​ 添加到临时列表 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls1"},{"Type":"NodeText","Data":"​ 中。"}]}]},{"ID":"20230811150133-0hixx7t","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230811150133-0hixx7t","updated":"20230811150133"},"Children":[{"ID":"20230811150133-hrctia9","Type":"NodeParagraph","Properties":{"id":"20230811150133-hrctia9","updated":"20230811150133"},"Children":[{"Type":"NodeText","Data":"否则，将临时列表 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls1"},{"Type":"NodeText","Data":"​ 添加到结果列表 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"lists"},{"Type":"NodeText","Data":"​ 中，并重新初始化 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls1"},{"Type":"NodeText","Data":"​ 为只包含当前元素 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls[i]"},{"Type":"NodeText","Data":"​ 的列表。"}]}]}]},{"ID":"20230811150133-5trbvy5","Type":"NodeParagraph","Properties":{"id":"20230811150133-5trbvy5","updated":"20230811150133"},"Children":[{"Type":"NodeText","Data":"最后，循环结束后，将最后的临时列表 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ls1"},{"Type":"NodeText","Data":"​ 添加到结果列表 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"lists"},{"Type":"NodeText","Data":"​ 中，并返回结果列表作为函数的输出。"}]},{"ID":"20230811150133-zgbplhb","Type":"NodeParagraph","Properties":{"id":"20230811150133-zgbplhb","updated":"20230811150137"},"Children":[{"Type":"NodeText","Data":"总体而言，这段代码的作用是将给定的整数列表按照连续递增的子序列进行划分，并返回划分后的整数列表的列表。"}]}]}