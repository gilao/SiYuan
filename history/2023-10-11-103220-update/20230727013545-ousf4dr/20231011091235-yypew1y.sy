{"ID":"20231011091235-yypew1y","Spec":"1","Type":"NodeDocument","Properties":{"id":"20231011091235-yypew1y","tags":"未完成,楼仔公众号,苏三说技术公众号","title":"如何设计一个高并发系统？","updated":"20231011102431"},"Children":[{"ID":"20231011094242-x52l676","Type":"NodeParagraph","Properties":{"id":"20231011094242-x52l676","updated":"20231011094242"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"如何设计一个高并发系统"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/如何设计一个高并发系统-20231011094242-5b2mucg.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011094102-3fuql5s","Type":"NodeParagraph","Properties":{"id":"20231011094102-3fuql5s","updated":"20231011094111"},"Children":[{"Type":"NodeText","Data":"​​"}]},{"ID":"20231011091235-v5ujl4j","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011091235-v5ujl4j","updated":"20231011094059"},"Children":[{"Type":"NodeText","Data":"页面静态化"}]},{"ID":"20231011094034-h005c32","Type":"NodeParagraph","Properties":{"id":"20231011094034-h005c32","updated":"20231011094034"},"Children":[{"Type":"NodeText","Data":"对于高并发系统的页面功能，我们必须要做"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"静态化"},{"Type":"NodeText","Data":"​设计。"}]},{"ID":"20231011094034-fchd0s5","Type":"NodeParagraph","Properties":{"id":"20231011094034-fchd0s5","updated":"20231011094034"},"Children":[{"Type":"NodeText","Data":"如果并发访问系统的用户非常多，每次用户访问页面的时候，都通过服务器动态渲染，会导致服务端承受过大的压力，而导致页面无法正常加载的情况发生。"}]},{"ID":"20231011094043-bzuumec","Type":"NodeParagraph","Properties":{"id":"20231011094043-bzuumec","updated":"20231011094043"},"Children":[{"Type":"NodeText","Data":"我们可以使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Freemarker"},{"Type":"NodeText","Data":"​或"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Velocity"},{"Type":"NodeText","Data":"​模板引擎，实现页面静态化功能。"}]},{"ID":"20231011094043-4u4tecr","Type":"NodeParagraph","Properties":{"id":"20231011094043-4u4tecr","updated":"20231011094043"},"Children":[{"Type":"NodeText","Data":"以商城官网首页为例，我们可以在"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Job"},{"Type":"NodeText","Data":"​中，每隔一段时间，查询出所有需要在首页展示的数据，汇总到一起，使用模板引擎生成到html文件当中。"}]},{"ID":"20231011094043-5se6jg7","Type":"NodeParagraph","Properties":{"id":"20231011094043-5se6jg7","updated":"20231011094043"},"Children":[{"Type":"NodeText","Data":"然后将该"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"html"},{"Type":"NodeText","Data":"​文件，通过"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"shell"},{"Type":"NodeText","Data":"​脚本，自动同步到前端页面相关的服务器上。"}]},{"ID":"20231011094045-i0rzhc3","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011094045-i0rzhc3","updated":"20231011094053"},"Children":[{"Type":"NodeText","Data":"CDN加速"}]},{"ID":"20231011094255-e7zy6ln","Type":"NodeParagraph","Properties":{"id":"20231011094255-e7zy6ln","updated":"20231011094255"},"Children":[{"Type":"NodeText","Data":"虽说页面静态化可以提升网站网页的访问速度，但还不够，因为用户分布在全国各地，有些人在北京，有些人在成都，有些人在深圳，地域相差很远，他们访问网站的网速各不相同。"}]},{"ID":"20231011094255-nkfrohi","Type":"NodeParagraph","Properties":{"id":"20231011094255-nkfrohi","updated":"20231011094255"},"Children":[{"Type":"NodeText","Data":"如何才能让用户最快访问到活动页面呢？"}]},{"ID":"20231011094255-1oabx5x","Type":"NodeParagraph","Properties":{"id":"20231011094255-1oabx5x","updated":"20231011094255"},"Children":[{"Type":"NodeText","Data":"这就需要使用CDN，它的全称是Content Delivery Network，即内容分发网络。"}]},{"ID":"20231011094304-b5fqu5w","Type":"NodeParagraph","Properties":{"id":"20231011094304-b5fqu5w","updated":"20231011094304"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011094304-blmzdkj.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011094313-tinr9zu","Type":"NodeParagraph","Properties":{"id":"20231011094313-tinr9zu","updated":"20231011094313"},"Children":[{"Type":"NodeText","Data":"使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。"}]},{"ID":"20231011094313-8ywx93u","Type":"NodeParagraph","Properties":{"id":"20231011094313-8ywx93u","updated":"20231011094313"},"Children":[{"Type":"NodeText","Data":"CDN加速的基本原理是：将网站的静态内容（如图片、CSS、JavaScript文件等）复制并存储到分布在全球各地的服务器节点上。"}]},{"ID":"20231011094313-n789y7o","Type":"NodeParagraph","Properties":{"id":"20231011094313-n789y7o","updated":"20231011094313"},"Children":[{"Type":"NodeText","Data":"当用户请求访问网站时，CDN系统会根据用户的地理位置，自动将内容分发给离用户最近的服务器，从而实现快速访问。"}]},{"ID":"20231011094313-n2lntck","Type":"NodeParagraph","Properties":{"id":"20231011094313-n2lntck","updated":"20231011094313"},"Children":[{"Type":"NodeText","Data":"国内常见的CDN提供商有阿里云CDN、腾讯云CDN、百度云加速等，它们提供了全球分布的节点服务器，为全球范围内的网站加速服务。"}]},{"ID":"20231011094607-yn7jlrd","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011094607-yn7jlrd","updated":"20231011094612"},"Children":[{"Type":"NodeText","Data":"缓存"}]},{"ID":"20231011094618-ofp01zt","Type":"NodeParagraph","Properties":{"id":"20231011094618-ofp01zt","updated":"20231011094618"},"Children":[{"Type":"NodeText","Data":"在高并发的系统中，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"缓存"},{"Type":"NodeText","Data":"​可以说是必不可少的技术之一。"}]},{"ID":"20231011094618-po7p5l4","Type":"NodeParagraph","Properties":{"id":"20231011094618-po7p5l4","updated":"20231011094618"},"Children":[{"Type":"NodeText","Data":"目前缓存有两种："}]},{"ID":"20231011094618-pgjqoa8","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231011094618-pgjqoa8","updated":"20231011094618"},"Children":[{"ID":"20231011094618-7c4n6pv","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231011094618-7c4n6pv","updated":"20231011094618"},"Children":[{"ID":"20231011094618-o679832","Type":"NodeParagraph","Properties":{"id":"20231011094618-o679832","updated":"20231011094618"},"Children":[{"Type":"NodeText","Data":"基于应用服务器的内存缓存，也就是我们说的二级缓存。"}]}]},{"ID":"20231011094618-vuf27xq","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231011094618-vuf27xq","updated":"20231011094618"},"Children":[{"ID":"20231011094618-yf0x226","Type":"NodeParagraph","Properties":{"id":"20231011094618-yf0x226","updated":"20231011094618"},"Children":[{"Type":"NodeText","Data":"使用缓存中间件，比如：Redis、Memcached等，这种是分布式缓存。"}]}]}]},{"ID":"20231011094627-1s2gl0v","Type":"NodeParagraph","Properties":{"id":"20231011094627-1s2gl0v","updated":"20231011094627"},"Children":[{"Type":"NodeText","Data":"这两种缓存各有优缺点。"}]},{"ID":"20231011094627-xc4ljmg","Type":"NodeParagraph","Properties":{"id":"20231011094627-xc4ljmg","updated":"20231011094627"},"Children":[{"Type":"NodeText","Data":"二级缓存的性能更好，但因为是基于应用服务器内存的缓存，如果系统部署到了多个服务器节点，可能会存在数据不一致的情况。"}]},{"ID":"20231011094627-x211755","Type":"NodeParagraph","Properties":{"id":"20231011094627-x211755","updated":"20231011094627"},"Children":[{"Type":"NodeText","Data":"而Redis或Memcached虽说性能上比不上二级缓存，但它们是分布式缓存，避免多个服务器节点数据不一致的问题。"}]},{"ID":"20231011094627-ltgouea","Type":"NodeParagraph","Properties":{"id":"20231011094627-ltgouea","updated":"20231011094627"},"Children":[{"Type":"NodeText","Data":"缓存的用法一般是这样的："}]},{"ID":"20231011094641-vaelna8","Type":"NodeParagraph","Properties":{"id":"20231011094641-vaelna8","updated":"20231011094641"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011094641-xhkl3zo.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011094658-5o1z3w3","Type":"NodeParagraph","Properties":{"id":"20231011094658-5o1z3w3","updated":"20231011094658"},"Children":[{"Type":"NodeText","Data":"使用缓存之后，可以减轻访问数据库的压力，显著的提升系统的性能。"}]},{"ID":"20231011094658-kl4t92h","Type":"NodeParagraph","Properties":{"id":"20231011094658-kl4t92h","updated":"20231011094658"},"Children":[{"Type":"NodeText","Data":"有些业务场景，甚至会分布式缓存和二级缓存一起使用。"}]},{"ID":"20231011094658-egl79u4","Type":"NodeParagraph","Properties":{"id":"20231011094658-egl79u4","updated":"20231011094658"},"Children":[{"Type":"NodeText","Data":"比如获取商品分类数据，流程如下："}]},{"ID":"20231011094724-ih7y601","Type":"NodeParagraph","Properties":{"id":"20231011094724-ih7y601","updated":"20231011094724"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011094724-v8n6w6k.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011094735-snn0t6h","Type":"NodeParagraph","Properties":{"id":"20231011094735-snn0t6h","updated":"20231011094736"},"Children":[{"Type":"NodeText","Data":"不过引入缓存，虽说给我们的系统性能带来了提升，但同时也给我们带来了一些新的问题，比如：《"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==\u0026amp;mid=2247493521\u0026amp;idx=1\u0026amp;sn=bff84e7a819d79e4b8eb7e722e96ddfc\u0026amp;chksm=c0e83f79f79fb66f2e7bf03a104580b404ea0a3c977846e428f13c1f12fbad46d4d778b2da14\u0026amp;token=902535653\u0026amp;lang=zh_CN\u0026amp;scene=21#wechat_redirect","TextMarkTextContent":"数据库和缓存双向数据库一致性问题"},{"Type":"NodeText","Data":"》、《"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==\u0026amp;mid=2247491225\u0026amp;idx=1\u0026amp;sn=bfb14f28911efaa6e3a615870fff9a5c\u0026amp;chksm=c0ebc671f79c4f6718a63bbec91d79a4b05e1dd2a7c00ed9bf6a9f582abd4c6e5c870148ff89\u0026amp;token=902535653\u0026amp;lang=zh_CN\u0026amp;scene=21#wechat_redirect","TextMarkTextContent":"缓存穿透、击穿和雪崩问题"},{"Type":"NodeText","Data":"》等。"}]},{"ID":"20231011094750-9dnorb5","Type":"NodeParagraph","Properties":{"id":"20231011094750-9dnorb5","updated":"20231011094750"},"Children":[{"Type":"NodeText","Data":"我们在使用缓存时，一定要结合实际业务场景，切记不要为了缓存而缓存。"}]},{"ID":"20231011095134-krrjq8l","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011095134-krrjq8l","updated":"20231011095139"},"Children":[{"Type":"NodeText","Data":"异步"}]},{"ID":"20231011095147-2xi6r5t","Type":"NodeParagraph","Properties":{"id":"20231011095147-2xi6r5t","updated":"20231011095147"},"Children":[{"Type":"NodeText","Data":"有时候，我们在高并发系统当中，某些接口的业务逻辑，没必要都同步执行。"}]},{"ID":"20231011095147-0j5pl1z","Type":"NodeParagraph","Properties":{"id":"20231011095147-0j5pl1z","updated":"20231011095147"},"Children":[{"Type":"NodeText","Data":"比如有个用户请求接口中，需要做业务操作，发站内通知，和记录操作日志。为了实现起来比较方便，通常我们会将这些逻辑放在接口中同步执行，势必会对接口性能造成一定的影响。"}]},{"ID":"20231011095151-x0hq0ru","Type":"NodeParagraph","Properties":{"id":"20231011095151-x0hq0ru","updated":"20231011095152"},"Children":[{"Type":"NodeText","Data":"接口内部流程图如下："}]},{"ID":"20231011095201-nxzjz4a","Type":"NodeParagraph","Properties":{"id":"20231011095201-nxzjz4a","updated":"20231011095201"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011095201-bagmzyq.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011095208-lxn2bxn","Type":"NodeParagraph","Properties":{"id":"20231011095208-lxn2bxn","updated":"20231011095208"},"Children":[{"Type":"NodeText","Data":"这个接口表面上看起来没有问题，但如果你仔细梳理一下业务逻辑，会发现只有业务操作才是核心逻辑，其他的功能都是非核心逻辑。"}]},{"ID":"20231011095208-evgyqvj","Type":"NodeParagraph","Properties":{"id":"20231011095208-evgyqvj","updated":"20231011095208"},"Children":[{"Type":"NodeText","Data":"在这里有个原则就是：核心逻辑可以同步执行，同步写库。非核心逻辑，可以异步执行，异步写库。"}]},{"ID":"20231011095208-mtpvn2p","Type":"NodeParagraph","Properties":{"id":"20231011095208-mtpvn2p","updated":"20231011095208"},"Children":[{"Type":"NodeText","Data":"上面这个例子中，发站内通知和用户操作日志功能，对实时性要求不高，即使晚点写库，用户无非是晚点收到站内通知，或者运营晚点看到用户操作日志，对业务影响不大，所以完全可以异步处理。"}]},{"ID":"20231011095208-b2kiikn","Type":"NodeParagraph","Properties":{"id":"20231011095208-b2kiikn","updated":"20231011095208"},"Children":[{"Type":"NodeText","Data":"通常异步主要有两种：多线程 和 mq。"}]},{"ID":"20231011095220-5rsxfie","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231011095220-5rsxfie","updated":"20231011095248"},"Children":[{"Type":"NodeText","Data":"线程池"}]},{"ID":"20231011095255-ijxn8h6","Type":"NodeParagraph","Properties":{"id":"20231011095255-ijxn8h6","updated":"20231011095255"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011095255-hv2f7h2.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011095259-fe23msu","Type":"NodeParagraph","Properties":{"id":"20231011095259-fe23msu","updated":"20231011095259"},"Children":[{"Type":"NodeText","Data":"发站内通知和用户操作日志功能，被提交到了两个单独的线程池中。"}]},{"ID":"20231011095259-ceclv7j","Type":"NodeParagraph","Properties":{"id":"20231011095259-ceclv7j","updated":"20231011095259"},"Children":[{"Type":"NodeText","Data":"这样接口中重点关注的是业务操作，把其他的逻辑交给线程异步执行，这样改造之后，让接口性能瞬间提升了。"}]},{"ID":"20231011095259-oxf7d8s","Type":"NodeParagraph","Properties":{"id":"20231011095259-oxf7d8s","updated":"20231011095259"},"Children":[{"Type":"NodeText","Data":"但使用线程池有个小问题就是：如果服务器重启了，或者是需要被执行的功能出现异常了，无法重试，会丢数据。"}]},{"ID":"20231011095259-fe5dgya","Type":"NodeParagraph","Properties":{"id":"20231011095259-fe5dgya","updated":"20231011095259"},"Children":[{"Type":"NodeText","Data":"那么这个问题该怎么办呢？"}]},{"ID":"20231011095359-nf6ptn7","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231011095359-nf6ptn7","updated":"20231011095401"},"Children":[{"Type":"NodeText","Data":"mq"}]},{"ID":"20231011095401-mi4mewy","Type":"NodeParagraph","Properties":{"id":"20231011095401-mi4mewy","updated":"20231011095405"},"Children":[{"Type":"NodeText","Data":"使用mq改造之后，接口逻辑如下："}]},{"ID":"20231011095419-mmegf4h","Type":"NodeParagraph","Properties":{"id":"20231011095419-mmegf4h","updated":"20231011095419"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011095419-04mujjf.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​对于发站内通知和用户操作日志功能，在接口中并没真正实现，它只发送了mq消息到mq服务器。然后由mq消费者消费消息时，才真正的执行这两个功能。"}]},{"ID":"20231011095427-jwy4rj6","Type":"NodeParagraph","Properties":{"id":"20231011095427-jwy4rj6","updated":"20231011095427"},"Children":[{"Type":"NodeText","Data":"这样改造之后，接口性能同样提升了，因为发送mq消息速度是很快的，我们只需关注业务操作的代码即可。"}]},{"ID":"20231011095437-e8477d5","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011095437-e8477d5","updated":"20231011095448"},"Children":[{"Type":"NodeText","Data":"多线程处理"}]},{"ID":"20231011095459-44wmk82","Type":"NodeParagraph","Properties":{"id":"20231011095459-44wmk82","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"在高并发系统当中，用户的请求量很大。"}]},{"ID":"20231011095459-tfsg44b","Type":"NodeParagraph","Properties":{"id":"20231011095459-tfsg44b","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"假如我们现在用mq处理业务逻辑。"}]},{"ID":"20231011095459-3aq6bwj","Type":"NodeParagraph","Properties":{"id":"20231011095459-3aq6bwj","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"一下子有大量的用户请求，产生了大量的mq消息，保存到了mq服务器。"}]},{"ID":"20231011095459-y82po1g","Type":"NodeParagraph","Properties":{"id":"20231011095459-y82po1g","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"而mq的消费者，消费速度很慢。"}]},{"ID":"20231011095459-bive1s2","Type":"NodeParagraph","Properties":{"id":"20231011095459-bive1s2","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"可能会导致大量的消息积压问题。"}]},{"ID":"20231011095459-fqstr1a","Type":"NodeParagraph","Properties":{"id":"20231011095459-fqstr1a","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"从而严重影响数据的实时性。"}]},{"ID":"20231011095459-6dgt012","Type":"NodeParagraph","Properties":{"id":"20231011095459-6dgt012","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"我们需要对消息的消费者做优化。"}]},{"ID":"20231011095459-1s8vnx8","Type":"NodeParagraph","Properties":{"id":"20231011095459-1s8vnx8","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"最快的方式是使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"多线程"},{"Type":"NodeText","Data":"​消费消息，比如：改成线程池消费消息。"}]},{"ID":"20231011095459-hqwugl6","Type":"NodeParagraph","Properties":{"id":"20231011095459-hqwugl6","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"当然核心线程数、最大线程数、队列大小 和 线程回收时间，一定要做成配置的，后面可以根据实际情况动态调整。"}]},{"ID":"20231011095459-ghshclh","Type":"NodeParagraph","Properties":{"id":"20231011095459-ghshclh","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"这样改造之后，我们可以快速解决消息积压问题。"}]},{"ID":"20231011095459-d4xztcj","Type":"NodeParagraph","Properties":{"id":"20231011095459-d4xztcj","updated":"20231011095459"},"Children":[{"Type":"NodeText","Data":"除此之外，在很多数据导入场景，用多线程导入数据，可以提升效率。"}]},{"ID":"20231011095515-bawnkf3","Type":"NodeBlockquote","Properties":{"id":"20231011095515-bawnkf3","updated":"20231011095531"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231011095523-bpyormy","Type":"NodeParagraph","Properties":{"id":"20231011095523-bpyormy","updated":"20231011095531"},"Children":[{"Type":"NodeText","Data":"温馨提醒一下：使用多线程消费消息，可能会出现消息的顺序问题。如果你的业务场景中，需要保证消息的顺序，则要用其他的方式解决问题。"}]}]},{"ID":"20231011095526-c6xbe8p","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011095526-c6xbe8p","updated":"20231011095537"},"Children":[{"Type":"NodeText","Data":"分库分表"}]},{"ID":"20231011095544-nd4554e","Type":"NodeParagraph","Properties":{"id":"20231011095544-nd4554e","updated":"20231011095544"},"Children":[{"Type":"NodeText","Data":"有时候，高并发系统的吞吐量受限的不是别的，而是数据库。"}]},{"ID":"20231011095544-ee3n29e","Type":"NodeParagraph","Properties":{"id":"20231011095544-ee3n29e","updated":"20231011095544"},"Children":[{"Type":"NodeText","Data":"当系统发展到一定的阶段，用户并发量大，会有大量的数据库请求，需要占用大量的数据库连接，同时会带来磁盘IO的性能瓶颈问题。"}]},{"ID":"20231011095544-yvdbui2","Type":"NodeParagraph","Properties":{"id":"20231011095544-yvdbui2","updated":"20231011095544"},"Children":[{"Type":"NodeText","Data":"此外，随着用户数量越来越多，产生的数据也越来越多，一张表有可能存不下。由于数据量太大，sql语句查询数据时，即使走了索引也会非常耗时。"}]},{"ID":"20231011095544-wccj6pz","Type":"NodeParagraph","Properties":{"id":"20231011095544-wccj6pz","updated":"20231011095544"},"Children":[{"Type":"NodeText","Data":"这时该怎么办呢？"}]},{"ID":"20231011095544-jj16syv","Type":"NodeParagraph","Properties":{"id":"20231011095544-jj16syv","updated":"20231011095544"},"Children":[{"Type":"NodeText","Data":"答：需要做"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"分库分表"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231011095544-mwaiufb","Type":"NodeParagraph","Properties":{"id":"20231011095544-mwaiufb","updated":"20231011095544"},"Children":[{"Type":"NodeText","Data":"如下图所示："}]},{"ID":"20231011095556-piuaxuv","Type":"NodeParagraph","Properties":{"id":"20231011095556-piuaxuv","updated":"20231011095556"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011095556-lznukic.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011095605-c1tb9rl","Type":"NodeParagraph","Properties":{"id":"20231011095605-c1tb9rl","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"图中将用户库拆分成了三个库，每个库都包含了四张用户表。"}]},{"ID":"20231011095605-7uoonye","Type":"NodeParagraph","Properties":{"id":"20231011095605-7uoonye","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"如果有用户请求过来的时候，先根据用户id路由到其中一个用户库，然后再定位到某张表。"}]},{"ID":"20231011095605-c9nlje9","Type":"NodeParagraph","Properties":{"id":"20231011095605-c9nlje9","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"路由的算法挺多的："}]},{"ID":"20231011095605-1wbf3iw","Type":"NodeList","ListData":{},"Properties":{"id":"20231011095605-1wbf3iw","updated":"20231011095605"},"Children":[{"ID":"20231011095605-do01y0g","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231011095605-do01y0g","updated":"20231011095605"},"Children":[{"ID":"20231011095605-9vycsfo","Type":"NodeParagraph","Properties":{"id":"20231011095605-9vycsfo","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"根据id取模，比如：id=7，有4张表，则7%4=3，模为3，路由到用户表3。"}]}]},{"ID":"20231011095605-tdavjqn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231011095605-tdavjqn","updated":"20231011095605"},"Children":[{"ID":"20231011095605-hhenh1g","Type":"NodeParagraph","Properties":{"id":"20231011095605-hhenh1g","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"给id指定一个区间范围，比如：id的值是0-10万，则数据存在用户表0，id的值是10-20万，则数据存在用户表1。"}]}]},{"ID":"20231011095605-2auqqci","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231011095605-2auqqci","updated":"20231011095605"},"Children":[{"ID":"20231011095605-dhs1khn","Type":"NodeParagraph","Properties":{"id":"20231011095605-dhs1khn","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"一致性hash算法"}]}]}]},{"ID":"20231011095605-pni3qs7","Type":"NodeParagraph","Properties":{"id":"20231011095605-pni3qs7","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"分库分表主要有两个方向："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"垂直"},{"Type":"NodeText","Data":"​和"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"水平"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231011095605-0jlvhj2","Type":"NodeParagraph","Properties":{"id":"20231011095605-0jlvhj2","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"说实话垂直方向（即业务方向）更简单。"}]},{"ID":"20231011095605-8ummqtj","Type":"NodeParagraph","Properties":{"id":"20231011095605-8ummqtj","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"在水平方向（即数据方向）上，分库和分表的作用，其实是有区别的，不能混为一谈。"}]},{"ID":"20231011095605-nzh7pcw","Type":"NodeList","ListData":{},"Properties":{"id":"20231011095605-nzh7pcw","updated":"20231011095605"},"Children":[{"ID":"20231011095605-hgodfs1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231011095605-hgodfs1","updated":"20231011095605"},"Children":[{"ID":"20231011095605-1idhvmh","Type":"NodeParagraph","Properties":{"id":"20231011095605-1idhvmh","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"分库：是为了解决数据库连接资源不足问题，和磁盘IO的性能瓶颈问题。"}]}]},{"ID":"20231011095605-npuybdh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231011095605-npuybdh","updated":"20231011095605"},"Children":[{"ID":"20231011095605-2fi6x12","Type":"NodeParagraph","Properties":{"id":"20231011095605-2fi6x12","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"分表：是为了解决单表数据量太大，sql语句查询数据时，即使走了索引也非常耗时问题。此外还可以解决消耗cpu资源问题。"}]}]},{"ID":"20231011095605-a9n9ll0","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231011095605-a9n9ll0","updated":"20231011095605"},"Children":[{"ID":"20231011095605-bi39wv0","Type":"NodeParagraph","Properties":{"id":"20231011095605-bi39wv0","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"分库分表：可以解决 数据库连接资源不足、磁盘IO的性能瓶颈、检索数据耗时 和 消耗cpu资源等问题。"}]}]}]},{"ID":"20231011095605-2sq8jqg","Type":"NodeParagraph","Properties":{"id":"20231011095605-2sq8jqg","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"如果在有些业务场景中，用户并发量很大，但是需要保存的数据量很少，这时可以只分库，不分表。"}]},{"ID":"20231011095605-jb7ofv3","Type":"NodeParagraph","Properties":{"id":"20231011095605-jb7ofv3","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"如果在有些业务场景中，用户并发量不大，但是需要保存的数量很多，这时可以只分表，不分库。"}]},{"ID":"20231011095605-e5tvhpj","Type":"NodeParagraph","Properties":{"id":"20231011095605-e5tvhpj","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"如果在有些业务场景中，用户并发量大，并且需要保存的数量也很多时，可以分库分表。"}]},{"ID":"20231011095605-ykjqgoj","Type":"NodeParagraph","Properties":{"id":"20231011095605-ykjqgoj","updated":"20231011095605"},"Children":[{"Type":"NodeText","Data":"关于分库分表更详细的内容，可以看看我另一篇文章，里面讲的更深入《"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==\u0026amp;mid=2247490459\u0026amp;idx=1\u0026amp;sn=1e4296228c00aa4203aab481575ac916\u0026amp;chksm=c0ebc373f79c4a658de7ce7f0d8cf30b1f45adb346c2386321779e7cf85a757a12337d3ae233\u0026amp;token=2041133408\u0026amp;lang=zh_CN\u0026amp;scene=21#wechat_redirect","TextMarkTextContent":"阿里二面：为什么分库分表？"},{"Type":"NodeText","Data":"》"}]},{"ID":"20231011095638-2a2j0vo","Type":"NodeParagraph","Properties":{"id":"20231011095638-2a2j0vo","updated":"20231011095643"}},{"ID":"20231011095643-lpqwcsj","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011095643-lpqwcsj","updated":"20231011095648"},"Children":[{"Type":"NodeText","Data":"池化技术"}]},{"ID":"20231011095654-axhwsoa","Type":"NodeParagraph","Properties":{"id":"20231011095654-axhwsoa","updated":"20231011095654"},"Children":[{"Type":"NodeText","Data":"其实不光是高并发系统，为了性能考虑，有些低并发的系统，也在使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"池化技术"},{"Type":"NodeText","Data":"​，比如：数据库连接池、线程池等。"}]},{"ID":"20231011095654-yy8nw6e","Type":"NodeParagraph","Properties":{"id":"20231011095654-yy8nw6e","updated":"20231011095654"},"Children":[{"Type":"NodeText","Data":"池化技术是"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"多例设计模式"},{"Type":"NodeText","Data":"​的一个体现。"}]},{"ID":"20231011095654-a5ukz48","Type":"NodeParagraph","Properties":{"id":"20231011095654-a5ukz48","updated":"20231011095654"},"Children":[{"Type":"NodeText","Data":"我们都知道"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"创建"},{"Type":"NodeText","Data":"​和"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"销毁"},{"Type":"NodeText","Data":"​数据库连接是非常耗时耗资源的操作。"}]},{"ID":"20231011095654-0wl04cb","Type":"NodeParagraph","Properties":{"id":"20231011095654-0wl04cb","updated":"20231011095654"},"Children":[{"Type":"NodeText","Data":"如果每次用户请求，都需要创建一个新的数据库连接，势必会影响程序的性能。"}]},{"ID":"20231011095654-taubdkc","Type":"NodeParagraph","Properties":{"id":"20231011095654-taubdkc","updated":"20231011095654"},"Children":[{"Type":"NodeText","Data":"为了提升性能，我们可以创建一批数据库连接，保存到内存中的某个集合中，缓存起来。"}]},{"ID":"20231011095654-abzty9w","Type":"NodeParagraph","Properties":{"id":"20231011095654-abzty9w","updated":"20231011095654"},"Children":[{"Type":"NodeText","Data":"这样的话，如果下次有需要用数据库连接的时候，就能直接从集合中获取，不用再额外创建数据库连接，这样处理将会给我们提升系统性能。"}]},{"ID":"20231011095725-13o9obg","Type":"NodeParagraph","Properties":{"id":"20231011095725-13o9obg","updated":"20231011095725"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011095725-gsyxpoa.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011095732-j5td4k9","Type":"NodeParagraph","Properties":{"id":"20231011095732-j5td4k9","updated":"20231011095732"},"Children":[{"Type":"NodeText","Data":"当然用完之后，需要及时归还。"}]},{"ID":"20231011095732-fr94n5v","Type":"NodeParagraph","Properties":{"id":"20231011095732-fr94n5v","updated":"20231011095732"},"Children":[{"Type":"NodeText","Data":"目前常用的数据库连接池有：Druid、C3P0、hikari和DBCP等。"}]},{"ID":"20231011095734-yst4jcn","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011095734-yst4jcn","updated":"20231011095738"},"Children":[{"Type":"NodeText","Data":"读写分离"}]},{"ID":"20231011095745-vbwhk3u","Type":"NodeParagraph","Properties":{"id":"20231011095745-vbwhk3u","updated":"20231011095745"},"Children":[{"Type":"NodeText","Data":"不知道你有没有听说过"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"二八原则"},{"Type":"NodeText","Data":"​，在一个系统当中可能有80%是读数据请求，另外20%是写数据请求。"}]},{"ID":"20231011095745-goh3ki8","Type":"NodeParagraph","Properties":{"id":"20231011095745-goh3ki8","updated":"20231011095745"},"Children":[{"Type":"NodeText","Data":"不过这个比例也不是绝对的。"}]},{"ID":"20231011095745-ahr1x2h","Type":"NodeParagraph","Properties":{"id":"20231011095745-ahr1x2h","updated":"20231011095745"},"Children":[{"Type":"NodeText","Data":"我想告诉大家的是，一般的系统读数据请求会远远大于写数据请求。"}]},{"ID":"20231011095745-cdygdy1","Type":"NodeParagraph","Properties":{"id":"20231011095745-cdygdy1","updated":"20231011095745"},"Children":[{"Type":"NodeText","Data":"如果读数据请求和写数据请求，都访问同一个数据库，可能会相互抢占数据库连接，相互影响。"}]},{"ID":"20231011095745-2hobed0","Type":"NodeParagraph","Properties":{"id":"20231011095745-2hobed0","updated":"20231011095745"},"Children":[{"Type":"NodeText","Data":"我们都知道，一个数据库的数据库连接数量是有限，是非常宝贵的资源，不能因为读数据请求，影响到写数据请求吧？"}]},{"ID":"20231011095745-f5boeei","Type":"NodeParagraph","Properties":{"id":"20231011095745-f5boeei","updated":"20231011095745"},"Children":[{"Type":"NodeText","Data":"这就需要对数据库做"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"读写分离"},{"Type":"NodeText","Data":"​了。"}]},{"ID":"20231011095745-jocmr92","Type":"NodeParagraph","Properties":{"id":"20231011095745-jocmr92","updated":"20231011095745"},"Children":[{"Type":"NodeText","Data":"于是，就出现了主从读写分离架构："}]},{"ID":"20231011095753-i8y2p06","Type":"NodeParagraph","Properties":{"id":"20231011095753-i8y2p06","updated":"20231011095753"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011095753-zlz6m7t.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011095803-lb18z5a","Type":"NodeParagraph","Properties":{"id":"20231011095803-lb18z5a","updated":"20231011095803"},"Children":[{"Type":"NodeText","Data":"考虑刚开始用户量还没那么大，选择的是一主一从的架构，也就是常说的一个"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"master"},{"Type":"NodeText","Data":"​，一个"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"slave"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231011095803-oluwaen","Type":"NodeParagraph","Properties":{"id":"20231011095803-oluwaen","updated":"20231011095803"},"Children":[{"Type":"NodeText","Data":"所有的写数据请求，都指向主库。一旦主库写完数据之后，立马异步同步给从库。这样所有的读数据请求，就能及时从从库中获取到数据了（除非网络有延迟）。"}]},{"ID":"20231011095803-obb94a3","Type":"NodeParagraph","Properties":{"id":"20231011095803-obb94a3","updated":"20231011095803"},"Children":[{"Type":"NodeText","Data":"但这里有个问题就是：如果用户量确实有些大，如果master挂了，升级slave为master，将所有读写请求都指向新master。"}]},{"ID":"20231011095803-d4vvr24","Type":"NodeParagraph","Properties":{"id":"20231011095803-d4vvr24","updated":"20231011095803"},"Children":[{"Type":"NodeText","Data":"但此时，如果这个新master根本扛不住所有的读写请求，该怎么办？"}]},{"ID":"20231011095803-2tamtel","Type":"NodeParagraph","Properties":{"id":"20231011095803-2tamtel","updated":"20231011095803"},"Children":[{"Type":"NodeText","Data":"这就需要一主多从的架构了："}]},{"ID":"20231011095813-mrif71i","Type":"NodeParagraph","Properties":{"id":"20231011095813-mrif71i","updated":"20231011095813"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011095812-7sche9x.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011095817-lwfuk7f","Type":"NodeParagraph","Properties":{"id":"20231011095817-lwfuk7f","updated":"20231011095818"},"Children":[{"Type":"NodeText","Data":"上图中我列的是一主两从，如果master挂了，可以选择从库1或从库2中的一个，升级为新master。假如我们在这里升级从库1为新master，则原来的从库2就变成了新master的的slave了。"}]},{"ID":"20231011095821-zafazuu","Type":"NodeParagraph","Properties":{"id":"20231011095821-zafazuu","updated":"20231011095821"},"Children":[{"Type":"NodeText","Data":"调整之后的架构图如下："}]},{"ID":"20231011095828-uyzk85x","Type":"NodeParagraph","Properties":{"id":"20231011095828-uyzk85x","updated":"20231011095828"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011095828-8cb3a3a.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011095834-5i5gxrf","Type":"NodeParagraph","Properties":{"id":"20231011095834-5i5gxrf","updated":"20231011095834"},"Children":[{"Type":"NodeText","Data":"这样就能解决上面的问题了。"}]},{"ID":"20231011095834-1r66ijs","Type":"NodeParagraph","Properties":{"id":"20231011095834-1r66ijs","updated":"20231011095834"},"Children":[{"Type":"NodeText","Data":"除此之外，如果查询请求量再增大，我们还可以将架构升级为一主三从、一主四从...一主N从等。"}]},{"ID":"20231011095834-oihqo6v","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011095834-oihqo6v","updated":"20231011095838"},"Children":[{"Type":"NodeText","Data":"索引"}]},{"ID":"20231011095846-mcq1dix","Type":"NodeParagraph","Properties":{"id":"20231011095846-mcq1dix","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"在高并发的系统当中，用户经常需要查询数据，对数据库增加"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"索引"},{"Type":"NodeText","Data":"​，是必不可少的一个环节。"}]},{"ID":"20231011095846-2q8krdr","Type":"NodeParagraph","Properties":{"id":"20231011095846-2q8krdr","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"尤其是表中数据非常多时，加了索引，跟没加索引，执行同一条sql语句，查询相同的数据，耗时可能会相差N个数量级。"}]},{"ID":"20231011095846-f88uv85","Type":"NodeParagraph","Properties":{"id":"20231011095846-f88uv85","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"虽说索引能够提升SQL语句的查询速度，但索引也不是越多越好。"}]},{"ID":"20231011095846-1djmt6h","Type":"NodeParagraph","Properties":{"id":"20231011095846-1djmt6h","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"在insert数据时，需要给索引分配额外的资源，对insert的性能有一定的损耗。"}]},{"ID":"20231011095846-8rmfzbw","Type":"NodeParagraph","Properties":{"id":"20231011095846-8rmfzbw","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"我们要根据实际业务场景来决定创建哪些索引，索引少了，影响查询速度，索引多了，影响写入速度。"}]},{"ID":"20231011095846-xs11i2j","Type":"NodeParagraph","Properties":{"id":"20231011095846-xs11i2j","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"很多时候，我们需要经常对索引做优化。"}]},{"ID":"20231011095846-wyrm554","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231011095846-wyrm554","updated":"20231011095846"},"Children":[{"ID":"20231011095846-y5uw4o6","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231011095846-y5uw4o6","updated":"20231011095846"},"Children":[{"ID":"20231011095846-d9fxrpp","Type":"NodeParagraph","Properties":{"id":"20231011095846-d9fxrpp","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"可以将多个单个索引，改成一个联合索引。"}]}]},{"ID":"20231011095846-cmsc7i6","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231011095846-cmsc7i6","updated":"20231011095846"},"Children":[{"ID":"20231011095846-t6mfvy2","Type":"NodeParagraph","Properties":{"id":"20231011095846-t6mfvy2","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"删除不要索引。"}]}]},{"ID":"20231011095846-um4kzf5","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20231011095846-um4kzf5","updated":"20231011095846"},"Children":[{"ID":"20231011095846-ba0mmk7","Type":"NodeParagraph","Properties":{"id":"20231011095846-ba0mmk7","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"使用explain关键字，查询SQL语句的执行计划，看看哪些走了索引，哪些没有走索引。"}]}]},{"ID":"20231011095846-w7z0jxl","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20231011095846-w7z0jxl","updated":"20231011095846"},"Children":[{"ID":"20231011095846-692e75m","Type":"NodeParagraph","Properties":{"id":"20231011095846-692e75m","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"要注意索引失效的一些场景。"}]}]},{"ID":"20231011095846-2hft3ob","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20231011095846-2hft3ob","updated":"20231011095846"},"Children":[{"ID":"20231011095846-s280opm","Type":"NodeParagraph","Properties":{"id":"20231011095846-s280opm","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"必要时可以使用force index来强制查询sql走某个索引。"}]}]}]},{"ID":"20231011095846-8iwh66p","Type":"NodeParagraph","Properties":{"id":"20231011095846-8iwh66p","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"如果你想进一步了解explain的详细用法，可以看看我的另一篇文章《"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==\u0026amp;mid=2247490262\u0026amp;idx=1\u0026amp;sn=a67f610afa984ecca130a54a3be453ab\u0026amp;chksm=c0ebc23ef79c4b2869dea998e413c5cbea6aeeea01ee74efc7c1a5fc228baa7beca215adf3ea\u0026amp;token=751314179\u0026amp;lang=zh_CN\u0026amp;scene=21#wechat_redirect","TextMarkTextContent":"explain | 索引优化的这把绝世好剑，你真的会用吗？"},{"Type":"NodeText","Data":"》。"}]},{"ID":"20231011095846-x79l22k","Type":"NodeParagraph","Properties":{"id":"20231011095846-x79l22k","updated":"20231011095846"},"Children":[{"Type":"NodeText","Data":"如果你想进一步了解哪些情况下索引会失效，可以看看我的另一篇文章《"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==\u0026amp;mid=2247491626\u0026amp;idx=1\u0026amp;sn=18fc949c06f04fe8f4c29b6fc5c66f9c\u0026amp;chksm=c0e838c2f79fb1d45c6f9b2ab188bb4663414690bab0718a7d46beb875e6b83e5e67ec27d2ff\u0026amp;token=902535653\u0026amp;lang=zh_CN\u0026amp;scene=21#wechat_redirect","TextMarkTextContent":"聊聊索引失效的10种场景，太坑了"},{"Type":"NodeText","Data":"》。"}]},{"ID":"20231011095934-bnyvcc1","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011095934-bnyvcc1","updated":"20231011095939"},"Children":[{"Type":"NodeText","Data":"批处理"}]},{"ID":"20231011095944-uxm16f3","Type":"NodeParagraph","Properties":{"id":"20231011095944-uxm16f3","updated":"20231011095944"},"Children":[{"Type":"NodeText","Data":"有时候，我们需要从指定的用户集合中，查询出有哪些是在数据库中已经存在的。"}]},{"ID":"20231011095944-cl4n3xw","Type":"NodeParagraph","Properties":{"id":"20231011095944-cl4n3xw","updated":"20231011095944"},"Children":[{"Type":"NodeText","Data":"实现代码可以这样写："}]},{"ID":"20231011095956-kalpz4h","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231011095956-kalpz4h","updated":"20231011100435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func queryUser(searchList []User) []User {\n  if len(searchList) == 0 {\n    return []User{}\n  }\n  result := []User{}\n  for _, user := range searchList {\n      result = append(result, getUserById(user.Id)\n  }\n  return result\n}\n\nfunc getUserById(id int) User {\n  // 假设实现了一个名为 userMapper 的获取用户方法\n  return userMapper.getUserById(id)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231011095956-bqw1bil","Type":"NodeParagraph","Properties":{"id":"20231011095956-bqw1bil","updated":"20231011095956"},"Children":[{"Type":"NodeText","Data":"这里如果有50个用户，则需要循环50次，去查询数据库。我们都知道，每查询一次数据库，就是一次远程调用。"}]},{"ID":"20231011095956-2h4ng00","Type":"NodeParagraph","Properties":{"id":"20231011095956-2h4ng00","updated":"20231011095956"},"Children":[{"Type":"NodeText","Data":"如果查询50次数据库，就有50次远程调用，这是非常耗时的操作。"}]},{"ID":"20231011095956-auqx34g","Type":"NodeParagraph","Properties":{"id":"20231011095956-auqx34g","updated":"20231011095956"},"Children":[{"Type":"NodeText","Data":"那么，我们如何优化呢？"}]},{"ID":"20231011095956-t2wobp7","Type":"NodeParagraph","Properties":{"id":"20231011095956-t2wobp7","updated":"20231011095956"},"Children":[{"Type":"NodeText","Data":"答："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"批处理"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231011095956-ebam7n4","Type":"NodeParagraph","Properties":{"id":"20231011095956-ebam7n4","updated":"20231011095956"},"Children":[{"Type":"NodeText","Data":"具体代码如下："}]},{"ID":"20231011100525-ewdphe4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231011100525-ewdphe4","updated":"20231011100902"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"import (\n  \"strconv\"\n)\n\nfunc queryUser(searchList []User) []User {\n  if len(searchList) == 0 {\n      return []User{}\n  }\n  ids := make([]int64,0)\n  for _, user := range searchList {\n      ids = append(ids, user.Id)\n  }\n  \n  idString := make([]string, len(ids))\n  for i, id := range ids {\n      idStrings[i] = strconv.FormatInt(id, 10)\n  }\n  return userMapper.getUserById(idStrings)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231011095956-k6wma13","Type":"NodeHTMLBlock","Data":"\u003cpre data-tool=\"mdnice编辑器\"\u003e\u003cbr class=\"Apple-interchange-newline\"/\u003e\u003c/pre\u003e","Properties":{"id":"20231011095956-k6wma13","updated":"20231011095956"}},{"ID":"20231011101650-azlx733","Type":"NodeParagraph","Properties":{"id":"20231011101650-azlx733","updated":"20231011101650"},"Children":[{"Type":"NodeText","Data":"提供一个根据用户id集合"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"批量查询"},{"Type":"NodeText","Data":"​用户的接口，只远程调用一次，就能查询出所有的数据。"}]},{"ID":"20231011101650-mynpwci","Type":"NodeParagraph","Properties":{"id":"20231011101650-mynpwci","updated":"20231011101650"},"Children":[{"Type":"NodeText","Data":"这里有个需要注意的地方是：id集合的大小要做限制，最好一次不要请求太多的数据。要根据实际情况而定，建议控制每次请求的记录条数在500以内"}]},{"ID":"20231011101645-tjygglz","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011101645-tjygglz","updated":"20231011101714"},"Children":[{"Type":"NodeText","Data":"集群"}]},{"ID":"20231011101947-4nuyryo","Type":"NodeParagraph","Properties":{"id":"20231011101947-4nuyryo","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"系统部署的服务器节点，可能会down机，比如：服务器的磁盘坏了，或者操作系统出现内存不足问题。"}]},{"ID":"20231011101947-gqjc1f9","Type":"NodeParagraph","Properties":{"id":"20231011101947-gqjc1f9","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"为了保证系统的高可用，我们需要部署多个节点，构成一个"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"集群"},{"Type":"NodeText","Data":"​，防止因为部分服务器节点挂了，导致系统的整个服务不可用的情况发生。"}]},{"ID":"20231011101947-1nj1i2c","Type":"NodeParagraph","Properties":{"id":"20231011101947-1nj1i2c","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"集群有很多种："}]},{"ID":"20231011101947-kwd32qe","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231011101947-kwd32qe","updated":"20231011101947"},"Children":[{"ID":"20231011101947-rs9ptpp","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231011101947-rs9ptpp","updated":"20231011101947"},"Children":[{"ID":"20231011101947-68r432k","Type":"NodeParagraph","Properties":{"id":"20231011101947-68r432k","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"应用服务器集群"}]}]},{"ID":"20231011101947-fqe4dz5","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231011101947-fqe4dz5","updated":"20231011101947"},"Children":[{"ID":"20231011101947-03rlghj","Type":"NodeParagraph","Properties":{"id":"20231011101947-03rlghj","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"数据库集群"}]}]},{"ID":"20231011101947-krs74ao","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20231011101947-krs74ao","updated":"20231011101947"},"Children":[{"ID":"20231011101947-8y86b3s","Type":"NodeParagraph","Properties":{"id":"20231011101947-8y86b3s","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"中间件集群"}]}]},{"ID":"20231011101947-1utfi1i","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20231011101947-1utfi1i","updated":"20231011101947"},"Children":[{"ID":"20231011101947-wg5u57h","Type":"NodeParagraph","Properties":{"id":"20231011101947-wg5u57h","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"文件服务器集群"}]}]}]},{"ID":"20231011101947-4ztgp7j","Type":"NodeParagraph","Properties":{"id":"20231011101947-4ztgp7j","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"我们以中间件"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Redis"},{"Type":"NodeText","Data":"​为例。"}]},{"ID":"20231011101947-p7f7c2m","Type":"NodeParagraph","Properties":{"id":"20231011101947-p7f7c2m","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"在高并发系统中，用户的数据量非常庞大时，比如用户的缓存数据总共大小有40G，一个服务器节点只有16G的内存。"}]},{"ID":"20231011101947-onyl1js","Type":"NodeParagraph","Properties":{"id":"20231011101947-onyl1js","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"这样需要部署3台服务器节点。"}]},{"ID":"20231011101947-8dss890","Type":"NodeParagraph","Properties":{"id":"20231011101947-8dss890","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"该业务场景，使用普通的master/slave模式，或者使用哨兵模式都行不通。"}]},{"ID":"20231011101947-nvohldx","Type":"NodeParagraph","Properties":{"id":"20231011101947-nvohldx","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"40G的数据，不能只保存到一台服务器节点，需要均分到3个master服务器节点上，一个master服务器节点保存13.3G的数据。"}]},{"ID":"20231011101947-3zdrrtl","Type":"NodeParagraph","Properties":{"id":"20231011101947-3zdrrtl","updated":"20231011101947"},"Children":[{"Type":"NodeText","Data":"当有用户请求过来的时候，先经过路由，根据用户的id或者ip，每次都访问指定的服务器节点。"}]},{"ID":"20231011101957-apoj3go","Type":"NodeParagraph","Properties":{"id":"20231011101957-apoj3go","updated":"20231011101957"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011101957-uuydetx.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011102003-w8zvsv4","Type":"NodeParagraph","Properties":{"id":"20231011102003-w8zvsv4","updated":"20231011102003"},"Children":[{"Type":"NodeText","Data":"这用就构成了一个集群。"}]},{"ID":"20231011102003-czdu0ym","Type":"NodeParagraph","Properties":{"id":"20231011102003-czdu0ym","updated":"20231011102003"},"Children":[{"Type":"NodeText","Data":"但这样有风险，为了防止其中一个master服务器节点挂掉，导致部分用户的缓存访问不了，还需要对数据做备份。"}]},{"ID":"20231011102003-nd0bgra","Type":"NodeParagraph","Properties":{"id":"20231011102003-nd0bgra","updated":"20231011102003"},"Children":[{"Type":"NodeText","Data":"这样每一个master，都需要有一个slave，做数据备份。"}]},{"ID":"20231011102018-runy446","Type":"NodeParagraph","Properties":{"id":"20231011102018-runy446","updated":"20231011102018"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011102018-p5mhwor.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011102024-p2ci3hh","Type":"NodeParagraph","Properties":{"id":"20231011102024-p2ci3hh","updated":"20231011102024"},"Children":[{"Type":"NodeText","Data":"如果master挂了，可以将slave升级为新的master，而不影响用户的正常使用。"}]},{"ID":"20231011102027-u2is9yn","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011102027-u2is9yn","updated":"20231011102031"},"Children":[{"Type":"NodeText","Data":"负载均衡"}]},{"ID":"20231011102044-jq4fcb0","Type":"NodeParagraph","Properties":{"id":"20231011102044-jq4fcb0","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"如果我们的系统部署到了多台服务器节点。那么哪些用户的请求，访问节点a，哪些用户的请求，访问节点b，哪些用户的请求，访问节点c？"}]},{"ID":"20231011102044-1yeec7c","Type":"NodeParagraph","Properties":{"id":"20231011102044-1yeec7c","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"我们需要某种机制，将用户的请求，转发到具体的服务器节点上。"}]},{"ID":"20231011102044-9z5x9fa","Type":"NodeParagraph","Properties":{"id":"20231011102044-9z5x9fa","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"这就需要使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"负载均衡"},{"Type":"NodeText","Data":"​机制了。"}]},{"ID":"20231011102044-pgbelpd","Type":"NodeParagraph","Properties":{"id":"20231011102044-pgbelpd","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"在linux下有"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Nginx"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"LVS"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Haproxy"},{"Type":"NodeText","Data":"​等服务可以提供负载均衡服务。"}]},{"ID":"20231011102044-4j4hu93","Type":"NodeParagraph","Properties":{"id":"20231011102044-4j4hu93","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"在SpringCloud微服务架构中，大部分使用的负载均衡组件就是"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Ribbon"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"OpenFegin"},{"Type":"NodeText","Data":"​或"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SpringCloud Loadbalancer"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231011102044-6ss4ksk","Type":"NodeParagraph","Properties":{"id":"20231011102044-6ss4ksk","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"硬件方面，可以使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"F5"},{"Type":"NodeText","Data":"​实现负载均衡。它可以基于交换机实现负载均衡，性能更好，但是价格更贵一些。"}]},{"ID":"20231011102044-j8a45fb","Type":"NodeParagraph","Properties":{"id":"20231011102044-j8a45fb","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"常用的负载均衡策略有："}]},{"ID":"20231011102044-31u9bhk","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231011102044-31u9bhk","updated":"20231011102044"},"Children":[{"ID":"20231011102044-2baho4m","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231011102044-2baho4m","updated":"20231011102044"},"Children":[{"ID":"20231011102044-9oi18a8","Type":"NodeParagraph","Properties":{"id":"20231011102044-9oi18a8","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"轮询"},{"Type":"NodeText","Data":"​：每个请求按时间顺序逐一分配到不同的服务器节点，如果服务器节点down掉，能自动剔除。"}]}]},{"ID":"20231011102044-twnwy07","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231011102044-twnwy07","updated":"20231011102044"},"Children":[{"ID":"20231011102044-r3jgbr9","Type":"NodeParagraph","Properties":{"id":"20231011102044-r3jgbr9","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"weight权重"},{"Type":"NodeText","Data":"​：weight代表权重默认为1，权重越高，服务器节点被分配到的概率越大。weight和访问比率成正比，用于服务器节点性能不均的情况。"}]}]},{"ID":"20231011102044-1u5nk83","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20231011102044-1u5nk83","updated":"20231011102044"},"Children":[{"ID":"20231011102044-30n35sq","Type":"NodeParagraph","Properties":{"id":"20231011102044-30n35sq","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ip hash"},{"Type":"NodeText","Data":"​：每个请求按访问ip的hash结果分配, 这样每个访客固定访问同一个服务器节点，它是解诀Session共享的问题的解决方案之一。"}]}]},{"ID":"20231011102044-07ge9h4","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20231011102044-07ge9h4","updated":"20231011102044"},"Children":[{"ID":"20231011102044-2r4d3tu","Type":"NodeParagraph","Properties":{"id":"20231011102044-2r4d3tu","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"最少连接数"},{"Type":"NodeText","Data":"​：把请求转发给连接数较少的服务器节点。轮询算法是把请求平均的转发给各个服务器节点，使它们的负载大致相同；但有些请求占用的时间很长，会导致其所在的服务器节点负载较高。这时least_conn方式就可以达到更好的负载均衡效果。"}]}]},{"ID":"20231011102044-kiaukol","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20231011102044-kiaukol","updated":"20231011102044"},"Children":[{"ID":"20231011102044-9dyy0o2","Type":"NodeParagraph","Properties":{"id":"20231011102044-9dyy0o2","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"最短响应时间"},{"Type":"NodeText","Data":"​：按服务器节点的响应时间来分配请求，响应时间短的服务器节点优先被分配。"}]}]}]},{"ID":"20231011102044-ism0swc","Type":"NodeParagraph","Properties":{"id":"20231011102044-ism0swc","updated":"20231011102044"},"Children":[{"Type":"NodeText","Data":"当然还有其他的策略，在这里就不给大家一一介绍了。"}]},{"ID":"20231011102045-mlgorxp","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011102045-mlgorxp","updated":"20231011102049"},"Children":[{"Type":"NodeText","Data":"限流"}]},{"ID":"20231011102059-lmcharz","Type":"NodeParagraph","Properties":{"id":"20231011102059-lmcharz","updated":"20231011102059"},"Children":[{"Type":"NodeText","Data":"对于高并发系统，为了保证系统的稳定性，需要对用户的请求量做"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"限流"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231011102059-6omsrop","Type":"NodeParagraph","Properties":{"id":"20231011102059-6omsrop","updated":"20231011102059"},"Children":[{"Type":"NodeText","Data":"特别是秒杀系统中，如果不做任何限制，绝大部分商品可能是被机器抢到，而非正常的用户，有点不太公平。"}]},{"ID":"20231011102059-odvxplo","Type":"NodeParagraph","Properties":{"id":"20231011102059-odvxplo","updated":"20231011102059"},"Children":[{"Type":"NodeText","Data":"所以，我们有必要识别这些非法请求，做一些限制。那么，我们该如何现在这些非法请求呢？"}]},{"ID":"20231011102059-kdb0ld9","Type":"NodeParagraph","Properties":{"id":"20231011102059-kdb0ld9","updated":"20231011102059"},"Children":[{"Type":"NodeText","Data":"目前有两种常用的限流方式："}]},{"ID":"20231011102059-bsn75k6","Type":"NodeList","ListData":{},"Properties":{"id":"20231011102059-bsn75k6","updated":"20231011102059"},"Children":[{"ID":"20231011102059-v28z713","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231011102059-v28z713","updated":"20231011102059"},"Children":[{"ID":"20231011102059-7p0fpim","Type":"NodeParagraph","Properties":{"id":"20231011102059-7p0fpim","updated":"20231011102059"},"Children":[{"Type":"NodeText","Data":"基于nginx限流"}]}]},{"ID":"20231011102059-xlnh8un","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231011102059-xlnh8un","updated":"20231011102059"},"Children":[{"ID":"20231011102059-8nxj2ae","Type":"NodeParagraph","Properties":{"id":"20231011102059-8nxj2ae","updated":"20231011102059"},"Children":[{"Type":"NodeText","Data":"基于redis限流"}]}]}]},{"ID":"20231011102100-o1beli4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231011102100-o1beli4","updated":"20231011102109"},"Children":[{"Type":"NodeText","Data":"对同一用户限流"}]},{"ID":"20231011102110-5fvvbua","Type":"NodeParagraph","Properties":{"id":"20231011102110-5fvvbua","updated":"20231011102116"},"Children":[{"Type":"NodeText","Data":"为了防止某个用户，请求接口次数过于频繁，可以只针对该用户做限制。"}]},{"ID":"20231011102124-5qg3zzg","Type":"NodeParagraph","Properties":{"id":"20231011102124-5qg3zzg","updated":"20231011102124"},"Children":[{"Type":"NodeText","Data":"​​"}]},{"ID":"20231011102138-r8p2jd3","Type":"NodeParagraph","Properties":{"id":"20231011102138-r8p2jd3","updated":"20231011102138"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011102138-wx0hjt9.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011102139-4qcqbu8","Type":"NodeParagraph","Properties":{"id":"20231011102139-4qcqbu8","updated":"20231011102146"},"Children":[{"Type":"NodeText","Data":"限制同一个用户id，比如每分钟只能请求5次接口。"}]},{"ID":"20231011102146-gsosgu0","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231011102146-gsosgu0","updated":"20231011102159"},"Children":[{"Type":"NodeText","Data":"对同一个IP限流"}]},{"ID":"20231011102205-garldw1","Type":"NodeParagraph","Properties":{"id":"20231011102205-garldw1","updated":"20231011102205"},"Children":[{"Type":"NodeText","Data":"有时候只对某个用户限流是不够的，有些高手可以模拟多个用户请求，这种nginx就没法识别了。"}]},{"ID":"20231011102205-1dgolml","Type":"NodeParagraph","Properties":{"id":"20231011102205-1dgolml","updated":"20231011102205"},"Children":[{"Type":"NodeText","Data":"这时需要加同一ip限流功能。"}]},{"ID":"20231011102214-314gz72","Type":"NodeParagraph","Properties":{"id":"20231011102214-314gz72","updated":"20231011102214"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011102214-ny2r8d7.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011102222-sx2wo2h","Type":"NodeParagraph","Properties":{"id":"20231011102222-sx2wo2h","updated":"20231011102222"},"Children":[{"Type":"NodeText","Data":"限制同一个ip，比如每分钟只能请求5次接口。"}]},{"ID":"20231011102222-sr4s51w","Type":"NodeParagraph","Properties":{"id":"20231011102222-sr4s51w","updated":"20231011102222"},"Children":[{"Type":"NodeText","Data":"但这种限流方式可能会有误杀的情况，比如同一个公司或网吧的出口ip是相同的，如果里面有多个正常用户同时发起请求，有些用户可能会被限制住。"}]},{"ID":"20231011102223-ymykhfh","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231011102223-ymykhfh","updated":"20231011102232"},"Children":[{"Type":"NodeText","Data":"对接口限流"}]},{"ID":"20231011102238-o1penfi","Type":"NodeParagraph","Properties":{"id":"20231011102238-o1penfi","updated":"20231011102238"},"Children":[{"Type":"NodeText","Data":"别以为限制了用户和ip就万事大吉，有些高手甚至可以使用代理，每次都请求都换一个ip。"}]},{"ID":"20231011102238-fv6is3k","Type":"NodeParagraph","Properties":{"id":"20231011102238-fv6is3k","updated":"20231011102238"},"Children":[{"Type":"NodeText","Data":"这时可以限制请求的接口总次数。"}]},{"ID":"20231011102246-85dto4y","Type":"NodeParagraph","Properties":{"id":"20231011102246-85dto4y","updated":"20231011102246"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011102246-xaofz09.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011102248-ekm6nhb","Type":"NodeParagraph","Properties":{"id":"20231011102248-ekm6nhb","updated":"20231011102252"},"Children":[{"Type":"NodeText","Data":"在高并发场景下，这种限制对于系统的稳定性是非常有必要的。但可能由于有些非法请求次数太多，达到了该接口的请求上限，而影响其他的正常用户访问该接口。看起来有点得不偿失。"}]},{"ID":"20231011102252-lf783ee","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231011102252-lf783ee","updated":"20231011102304"},"Children":[{"Type":"NodeText","Data":"加验证码"}]},{"ID":"20231011102304-5nk0lye","Type":"NodeParagraph","Properties":{"id":"20231011102304-5nk0lye","updated":"20231011102309"},"Children":[{"Type":"NodeText","Data":"相对于上面三种方式，加验证码的方式可能更精准一些，同样能限制用户的访问频次，但好处是不会存在误杀的情况。"}]},{"ID":"20231011102318-43te2to","Type":"NodeParagraph","Properties":{"id":"20231011102318-43te2to","updated":"20231011102318"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011102318-vy586nb.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011102327-416md2c","Type":"NodeParagraph","Properties":{"id":"20231011102327-416md2c","updated":"20231011102327"},"Children":[{"Type":"NodeText","Data":"通常情况下，用户在请求之前，需要先输入验证码。用户发起请求之后，服务端会去校验该验证码是否正确。只有正确才允许进行下一步操作，否则直接返回，并且提示验证码错误。"}]},{"ID":"20231011102327-9bkl19f","Type":"NodeParagraph","Properties":{"id":"20231011102327-9bkl19f","updated":"20231011102327"},"Children":[{"Type":"NodeText","Data":"此外，验证码一般是一次性的，同一个验证码只允许使用一次，不允许重复使用。"}]},{"ID":"20231011102327-jka0qmb","Type":"NodeParagraph","Properties":{"id":"20231011102327-jka0qmb","updated":"20231011102327"},"Children":[{"Type":"NodeText","Data":"普通验证码，由于生成的数字或者图案比较简单，可能会被破解。优点是生成速度比较快，缺点是有安全隐患。"}]},{"ID":"20231011102327-cf8q80w","Type":"NodeParagraph","Properties":{"id":"20231011102327-cf8q80w","updated":"20231011102327"},"Children":[{"Type":"NodeText","Data":"还有一个验证码叫做："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"移动滑块"},{"Type":"NodeText","Data":"​，它生成速度比较慢，但比较安全，是目前各大互联网公司的首选。"}]},{"ID":"20231011102333-7vege1y","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011102333-7vege1y","updated":"20231011102338"},"Children":[{"Type":"NodeText","Data":"服务降级"}]},{"ID":"20231011102353-9fgw1x9","Type":"NodeParagraph","Properties":{"id":"20231011102353-9fgw1x9","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"前面已经说过，对于高并发系统，为了保证系统的稳定性，需要做限流。"}]},{"ID":"20231011102353-5dxrssc","Type":"NodeParagraph","Properties":{"id":"20231011102353-5dxrssc","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"但光做限流还不够。"}]},{"ID":"20231011102353-06lejdx","Type":"NodeParagraph","Properties":{"id":"20231011102353-06lejdx","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"我们需要合理利用服务器资源，保留核心的功能，将部分非核心的功能，我们可以选择屏蔽或者下线掉。"}]},{"ID":"20231011102353-ct0o6v9","Type":"NodeParagraph","Properties":{"id":"20231011102353-ct0o6v9","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"我们需要做"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"服务降级"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231011102353-wy49bke","Type":"NodeParagraph","Properties":{"id":"20231011102353-wy49bke","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"我们在设计高并发系统时，可以预留一些服务降级的开关。"}]},{"ID":"20231011102353-z7qt1az","Type":"NodeParagraph","Properties":{"id":"20231011102353-z7qt1az","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"比如在秒杀系统中，核心的功能是商品的秒杀，对于商品的评论功能，可以暂时屏蔽掉。"}]},{"ID":"20231011102353-nsfgz8h","Type":"NodeParagraph","Properties":{"id":"20231011102353-nsfgz8h","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"在服务端的分布式配置中心，比如：apollo中，可以增加一个开关，配置是否展示评论功能，默认是true。"}]},{"ID":"20231011102353-5d6p007","Type":"NodeParagraph","Properties":{"id":"20231011102353-5d6p007","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"前端页面通过服务器的接口，获取到该配置参数。"}]},{"ID":"20231011102353-3wc2lsy","Type":"NodeParagraph","Properties":{"id":"20231011102353-3wc2lsy","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"如果需要暂时屏蔽商品评论功能，可以将apollo中的参数设置成false。"}]},{"ID":"20231011102353-6ln4j6g","Type":"NodeParagraph","Properties":{"id":"20231011102353-6ln4j6g","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"此外，我们在设计高并发系统时，还可以预留一些兜底方案。"}]},{"ID":"20231011102353-ffd8i51","Type":"NodeParagraph","Properties":{"id":"20231011102353-ffd8i51","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"比如某个分类查询接口，要从redis中获取分类数据，返回给用户。但如果那一条redis挂了，则查询数据失败。"}]},{"ID":"20231011102353-go0c6qw","Type":"NodeParagraph","Properties":{"id":"20231011102353-go0c6qw","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"这时候，我们可以增加一个兜底方案。"}]},{"ID":"20231011102353-gc7mm9h","Type":"NodeParagraph","Properties":{"id":"20231011102353-gc7mm9h","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"如果从redis中获取不到数据，则从apollo中获取一份默认的分类数据。"}]},{"ID":"20231011102353-1ih49j3","Type":"NodeParagraph","Properties":{"id":"20231011102353-1ih49j3","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"目前使用较多的熔断降级中间件是："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Hystrix"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Sentinel"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231011102353-rnpw5iu","Type":"NodeList","ListData":{},"Properties":{"id":"20231011102353-rnpw5iu","updated":"20231011102353"},"Children":[{"ID":"20231011102353-t56iz0r","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231011102353-t56iz0r","updated":"20231011102353"},"Children":[{"ID":"20231011102353-28mf3ku","Type":"NodeParagraph","Properties":{"id":"20231011102353-28mf3ku","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"Hystrix是Netflix开源的熔断降级组件。"}]}]},{"ID":"20231011102353-nuhcvrx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231011102353-nuhcvrx","updated":"20231011102353"},"Children":[{"ID":"20231011102353-wpyhm03","Type":"NodeParagraph","Properties":{"id":"20231011102353-wpyhm03","updated":"20231011102353"},"Children":[{"Type":"NodeText","Data":"Sentinel是阿里中间件团队开源的一款不光具有熔断降级功能，同时还支持系统负载保护的组件。"}]}]}]},{"ID":"20231011102359-0fvi0cp","Type":"NodeParagraph","Properties":{"id":"20231011102359-0fvi0cp","updated":"20231011102359"},"Children":[{"Type":"NodeText","Data":"二者的区别如下图所示："}]},{"ID":"20231011102414-t1dn6ln","Type":"NodeParagraph","Properties":{"id":"20231011102414-t1dn6ln","updated":"20231011102414"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231011102414-dx2g0ma.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231011102420-vv8wjko","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231011102420-vv8wjko","updated":"20231011102424"},"Children":[{"Type":"NodeText","Data":"故障转移"}]},{"ID":"20231011102431-sndb5db","Type":"NodeParagraph","Properties":{"id":"20231011102431-sndb5db","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"在高并发的系统当中，同一时间有大量的用户访问系统。"}]},{"ID":"20231011102431-7k74ra1","Type":"NodeParagraph","Properties":{"id":"20231011102431-7k74ra1","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"如果某一个应用服务器节点处于假死状态，比如CPU使用率100%了，用户的请求没办法及时处理，导致大量用户出现请求超时的情况。"}]},{"ID":"20231011102431-ugqgbj5","Type":"NodeParagraph","Properties":{"id":"20231011102431-ugqgbj5","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"如果这种情况下，不做任何处理，可能会影响系统中部分用户的正常使用。"}]},{"ID":"20231011102431-e9kjtge","Type":"NodeParagraph","Properties":{"id":"20231011102431-e9kjtge","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"这时我们需要建立"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"故障转移"},{"Type":"NodeText","Data":"​机制。"}]},{"ID":"20231011102431-681ok6i","Type":"NodeParagraph","Properties":{"id":"20231011102431-681ok6i","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"当检测到经常接口超时，或者CPU打满，或者内存溢出的情况，能够自动重启那台服务器节点上的应用。"}]},{"ID":"20231011102431-org6y9b","Type":"NodeParagraph","Properties":{"id":"20231011102431-org6y9b","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"在SpringCloud微服务当中，可以使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Ribbon"},{"Type":"NodeText","Data":"​做负载均衡器。"}]},{"ID":"20231011102431-9r7sxkv","Type":"NodeParagraph","Properties":{"id":"20231011102431-9r7sxkv","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"Ribbon是Spring Cloud中的一个负载均衡器组件，它可以检测服务的可用性，并根据一定规则将请求分发至不同的服务节点。在使用Ribbon时，需要注意以下几个方面："}]},{"ID":"20231011102431-ksdmmwv","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231011102431-ksdmmwv","updated":"20231011102431"},"Children":[{"ID":"20231011102431-hluvs0w","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231011102431-hluvs0w","updated":"20231011102431"},"Children":[{"ID":"20231011102431-qn9p0rl","Type":"NodeParagraph","Properties":{"id":"20231011102431-qn9p0rl","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"设置请求超时时间，当请求超时时，Ribbon会自动将请求转发到其他可用的服务上。"}]}]},{"ID":"20231011102431-ktpvlqg","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231011102431-ktpvlqg","updated":"20231011102431"},"Children":[{"ID":"20231011102431-gbig9h8","Type":"NodeParagraph","Properties":{"id":"20231011102431-gbig9h8","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"设置服务的健康检查，Ribbon会自动检测服务的可用性，并将请求转发至可用的服务上。"}]}]}]},{"ID":"20231011102431-dqna3l7","Type":"NodeParagraph","Properties":{"id":"20231011102431-dqna3l7","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"此外，还需要使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Hystrix"},{"Type":"NodeText","Data":"​做熔断处理。"}]},{"ID":"20231011102431-hxez2uf","Type":"NodeParagraph","Properties":{"id":"20231011102431-hxez2uf","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"Hystrix是SpringCloud中的一个熔断器组件，它可以自动地监测所有通过它调用的服务，并在服务出现故障时自动切换到备用服务。在使用Hystrix时，需要注意以下几个方面："}]},{"ID":"20231011102431-vjqz8y9","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231011102431-vjqz8y9","updated":"20231011102431"},"Children":[{"ID":"20231011102431-q3eon63","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231011102431-q3eon63","updated":"20231011102431"},"Children":[{"ID":"20231011102431-xdtbai8","Type":"NodeParagraph","Properties":{"id":"20231011102431-xdtbai8","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"设置断路器的阈值，当故障率超过一定阈值后，断路器会自动切换到备用服务上。"}]}]},{"ID":"20231011102431-bfz2wix","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231011102431-bfz2wix","updated":"20231011102431"},"Children":[{"ID":"20231011102431-9wsawyd","Type":"NodeParagraph","Properties":{"id":"20231011102431-9wsawyd","updated":"20231011102431"},"Children":[{"Type":"NodeText","Data":"设置服务的超时时间，如果服务在指定的时间内无法返回结果，断路器会自动切换到备用服务上。到其他的能够正常使用的服务器节点上。"}]}]}]}]}