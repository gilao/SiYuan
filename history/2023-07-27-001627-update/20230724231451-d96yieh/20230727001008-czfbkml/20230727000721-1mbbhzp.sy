{"ID":"20230727000721-1mbbhzp","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230727000721-1mbbhzp","title":"24. Go defer总结","updated":"20230727000721"},"Children":[{"ID":"20230727000722-ez9myf2","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230727000722-ez9myf2","updated":"20230727000722"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"24. Go defer总结"}]},{"ID":"20230727000723-97i9hi1","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000723-97i9hi1","updated":"20230727000723"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"1. defer介绍"}]},{"ID":"20230727000724-gr2u7s8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000724-gr2u7s8","updated":"20230727000724"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1.1 defer的作用"}]},{"ID":"20230727000725-fkuz952","Type":"NodeParagraph","Properties":{"id":"20230727000725-fkuz952","updated":"20230727000725"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"defer的定义是：defer语句调用一个函数，该函数的执行被推迟到其所在函数返回的那一刻，要么是所在函数执行了return语句，要么是到达了所在函数体的末尾，要么是所在的goroutine发生了panic。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000726-uztfcu4","Type":"NodeParagraph","Properties":{"id":"20230727000726-uztfcu4","updated":"20230727000726"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"defer常用来关闭文件描述符、关闭数据库连接、释放锁资源等，可以减少资源泄漏的情况发生。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000727-exjkblv","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000727-exjkblv","updated":"20230727000727"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1.2 defer的用法"}]},{"ID":"20230727000728-0x31l4c","Type":"NodeParagraph","Properties":{"id":"20230727000728-0x31l4c","updated":"20230727000728"},"Children":[{"Type":"NodeText","Data":"defer的基本用法有五种，分别是："}]},{"ID":"20230727000729-he0ueeu","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000729-he0ueeu","updated":"20230727000729"},"Children":[{"ID":"20230727000730-iysj8r9","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000730-iysj8r9","updated":"20230727000730"},"Children":[{"ID":"20230727000731-1oqviln","Type":"NodeParagraph","Properties":{"id":"20230727000731-1oqviln","updated":"20230727000731"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"延迟调用：defer调用的函数在return前才被执行；"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]}]},{"ID":"20230727000732-6m759ou","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20230727000732-6m759ou","updated":"20230727000732"},"Children":[{"ID":"20230727000733-qmwc677","Type":"NodeParagraph","Properties":{"id":"20230727000733-qmwc677","updated":"20230727000733"},"Children":[{"Type":"NodeText","Data":"=="},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"LIFO（Last In First Out，后进先出）：多个defer语句，按压栈的方式即后进先出的顺序执行；"},{"Type":"NodeText","Data":"=="}]}]},{"ID":"20230727000734-6j8g5mv","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20230727000734-6j8g5mv","updated":"20230727000734"},"Children":[{"ID":"20230727000735-8ynzt6x","Type":"NodeParagraph","Properties":{"id":"20230727000735-8ynzt6x","updated":"20230727000735"},"Children":[{"Type":"NodeText","Data":"=="},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"作用域：defer 只会和 defer 语句所在的特定函数绑定在一起，作用域也只在这个函数；"},{"Type":"NodeText","Data":"=="}]}]},{"ID":"20230727000736-lkhe9fl","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20230727000736-lkhe9fl","updated":"20230727000736"},"Children":[{"ID":"20230727000737-lhhhui8","Type":"NodeParagraph","Properties":{"id":"20230727000737-lhhhui8","updated":"20230727000737"},"Children":[{"Type":"NodeText","Data":"=="},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"对函数传入变量的不同处理：变量作为函数参数，在defer申明时就把值传递给defer，并将值缓存起来使用；变量作为匿名函数引用，在defer函数执行时根据整个上下文确定变量的值；"},{"Type":"NodeText","Data":"=="}]}]},{"ID":"20230727000738-np6z00b","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20230727000738-np6z00b","updated":"20230727000738"},"Children":[{"ID":"20230727000739-vtweelu","Type":"NodeParagraph","Properties":{"id":"20230727000739-vtweelu","updated":"20230727000739"},"Children":[{"Type":"NodeText","Data":"=="},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"异常处理：通过 defer 和 recover 的结合，可以捕捉 defer 所在函数的 panic；"},{"Type":"NodeText","Data":"=="}]}]}]},{"ID":"20230727000740-y03yj9j","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000740-y03yj9j","updated":"20230727000740"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"2. defer的调用顺序"}]},{"ID":"20230727000741-ihvkw78","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000741-ihvkw78","updated":"20230727000741"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.1 多个defer语句，按先进后出的方式执行"}]},{"ID":"20230727000742-jk9n1e3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000742-jk9n1e3","updated":"20230727000742"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport \"fmt\"\n\nfunc main() {\n    var whatever [5]struct{}\n    for i := range whatever {\n        defer fmt.Println(i)\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000743-xkk0m9v","Type":"NodeParagraph","Properties":{"id":"20230727000743-xkk0m9v","updated":"20230727000743"},"Children":[{"Type":"NodeText","Data":"输出"}]},{"ID":"20230727000744-xgjtpxm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000744-xgjtpxm","updated":"20230727000744"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"4\n3\n2\n1\n0\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000745-s1jqmj9","Type":"NodeParagraph","Properties":{"id":"20230727000745-s1jqmj9","updated":"20230727000745"},"Children":[{"Type":"NodeText","Data":"所有的defer语句会放入栈中，在入栈的时候会进行相关的值拷贝（也就是下面的“对应的参数会实时解析”）。"}]},{"ID":"20230727000746-qy7xlcu","Type":"NodeParagraph","Properties":{"id":"20230727000746-qy7xlcu","updated":"20230727000746"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230303094151754","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"../../Typora picture/image-20230303094151754.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230727000747-jmrkuyr","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000747-jmrkuyr","updated":"20230727000747"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"多个defer 出现时，它是一个栈的关系，先进后出"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000748-6gboj39","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000748-6gboj39","updated":"20230727000748"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.2 defer声明时，对应的参数会实时解析"}]},{"ID":"20230727000749-zfhtugj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000749-zfhtugj","updated":"20230727000749"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport \"fmt\"\n\nfunc main() {\n\ti := 1\n\tfmt.Println(\"i =\", i)\n\tdefer fmt.Print(i)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000750-h7dwat4","Type":"NodeParagraph","Properties":{"id":"20230727000750-h7dwat4","updated":"20230727000750"},"Children":[{"Type":"NodeText","Data":"输出"}]},{"ID":"20230727000751-tvlrfhr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000751-tvlrfhr","updated":"20230727000751"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"i = 1\n1\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000752-mehr6ec","Type":"NodeParagraph","Properties":{"id":"20230727000752-mehr6ec","updated":"20230727000752"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"defer后面的语句最后才会执行"},{"Type":"NodeText","Data":"，后面会讲当defer存在时return的执行逻辑。"}]},{"ID":"20230727000753-2193dmh","Type":"NodeParagraph","Properties":{"id":"20230727000753-2193dmh","updated":"20230727000753"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"辨析：defer后面跟无参函数、有参函数和方法："}]},{"ID":"20230727000754-xuzih47","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000754-xuzih47","updated":"20230727000754"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport \"fmt\"\n\nfunc test(a int) {//无返回值函数\n\tdefer fmt.Println(\"1、a =\", a) //方法\n\tdefer func(v int) { fmt.Println(\"2、a =\", v)} (a) //有参函数\n\tdefer func() { fmt.Println(\"3、a =\", a)} () //无参函数\n\ta++\n}\nfunc main() {\n\ttest(1)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000755-rcsm3gm","Type":"NodeParagraph","Properties":{"id":"20230727000755-rcsm3gm","updated":"20230727000755"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000756-qs4rtn0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000756-qs4rtn0","updated":"20230727000756"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"3、a = 2\n2、a = 1\n1、a = 1\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000757-p6528y9","Type":"NodeParagraph","Properties":{"id":"20230727000757-p6528y9","updated":"20230727000757"},"Children":[{"Type":"NodeText","Data":"解释："}]},{"ID":"20230727000758-1hymq1i","Type":"NodeParagraph","Properties":{"id":"20230727000758-1hymq1i","updated":"20230727000758"},"Children":[{"Type":"NodeText","Data":"方法中的参数a，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"有参函数中的参数v，会请求参数，直接把参数代入，所以输出的都是1"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230727000759-gvgtalz","Type":"NodeParagraph","Properties":{"id":"20230727000759-gvgtalz","updated":"20230727000759"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"a++变成2之后"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，3个defer语句以后声明先执行的顺序执行，"}]},{"ID":"20230727000760-hcpv0sr","Type":"NodeParagraph","Properties":{"id":"20230727000760-hcpv0sr","updated":"20230727000760"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"无参函数中使用的a现在已经是2了，故输出2。"}]},{"ID":"20230727000761-cre1yet","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000761-cre1yet","updated":"20230727000761"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"defer 后有参数，会实时解析参数值带入。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000762-7x5u27c","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000762-7x5u27c","updated":"20230727000762"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.3 可读取函数返回值 （return 返回机制）"}]},{"ID":"20230727000763-fpv1w59","Type":"NodeParagraph","Properties":{"id":"20230727000763-fpv1w59","updated":"20230727000763"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230303104545425","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"../../Typora picture/image-20230303104545425.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230727000764-fo5d7zl","Type":"NodeParagraph","Properties":{"id":"20230727000764-fo5d7zl","updated":"20230727000764"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"defer、return、返回值三者的执行逻辑应该是："}]},{"ID":"20230727000765-6dcausj","Type":"NodeParagraph","Properties":{"id":"20230727000765-6dcausj","updated":"20230727000765"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"return最先执行，return负责将结果写入返回值中；"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000766-v6hxv9u","Type":"NodeParagraph","Properties":{"id":"20230727000766-v6hxv9u","updated":"20230727000766"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"接着defer开始执行一些收尾工作；"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000767-tf3b229","Type":"NodeParagraph","Properties":{"id":"20230727000767-tf3b229","updated":"20230727000767"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"最后函数携带当前返回值（可能和最初的返回值不相同）退出。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000768-ilggub6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000768-ilggub6","updated":"20230727000768"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"当defer语句放在return后面时，不会被执行"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000769-q6433md","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000769-q6433md","updated":"20230727000769"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"（1）无名返回值"}]},{"ID":"20230727000770-8hfl1wf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000770-8hfl1wf","updated":"20230727000770"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc a() int {\n\tvar i int\n\tdefer func() {\n\t\ti++\n\t\tfmt.Println(\"defer2:\", i) \n\t}()\n\tdefer func() {\n\t\ti++\n\t\tfmt.Println(\"defer1:\", i) \n\t}()\n\treturn i\n}\n\nfunc main() {\n\tfmt.Println(\"return:\", a()) \n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000771-xd3st6k","Type":"NodeParagraph","Properties":{"id":"20230727000771-xd3st6k","updated":"20230727000771"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000772-27r05ps","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000772-27r05ps","updated":"20230727000772"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"defer1：1\ndefer2：2\nreturn：0\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000773-o1l5spd","Type":"NodeParagraph","Properties":{"id":"20230727000773-o1l5spd","updated":"20230727000773"},"Children":[{"Type":"NodeText","Data":"解释："},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"返回值由变量i赋值，相当于返回值=i=0。第二个defer中i++ = 1， 第一个defer中i++ = 2，所以最终i的值是2。但是返回值已经被赋值了，即使后续修改i也不会影响返回值。最终返回值返回，所以main中打印0。"}]},{"ID":"20230727000774-17z6h4i","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000774-17z6h4i","updated":"20230727000774"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"返回值由变量i赋值，故执行return后返回值已经确定，不会根据defer后的函数对变量i的更改而更改返回值"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000775-27j38nc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000775-27j38nc","updated":"20230727000775"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"（2）有名返回值"}]},{"ID":"20230727000776-jnqgwwg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000776-jnqgwwg","updated":"20230727000776"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc b() (i int) {\n\tdefer func() {\n\t\ti++\n\t\tfmt.Println(\"defer2:\", i)\n\t}()\n\tdefer func() {\n\t\ti++\n\t\tfmt.Println(\"defer1:\", i)\n\t}()\n\treturn i //或者直接写成return\n}\n\nfunc main() {\n\tfmt.Println(\"return:\", b())\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000777-wbqt89n","Type":"NodeParagraph","Properties":{"id":"20230727000777-wbqt89n","updated":"20230727000777"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000778-nte2k26","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000778-nte2k26","updated":"20230727000778"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"defer1：1\ndefer2：2\nreturn：2\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000779-2m3h3xq","Type":"NodeParagraph","Properties":{"id":"20230727000779-2m3h3xq","updated":"20230727000779"},"Children":[{"Type":"NodeText","Data":"解释："},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"这里已经指明了返回值就是i，所以后续对i进行修改都相当于在修改返回值，所以最终函数的返回值是2。"}]},{"ID":"20230727000780-zea0ic8","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230727000780-zea0ic8","updated":"20230727000780"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"已经指明返回值就是i，故后续defer后的函数对i的更改都是在对返回值进行修改"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000781-e6y36tk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000781-e6y36tk","updated":"20230727000781"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"（3）函数返回值为地址（指针）"}]},{"ID":"20230727000782-2p5dscf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000782-2p5dscf","updated":"20230727000782"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc c() *int {\n\tvar i int\n\tdefer func() {\n\t\ti++\n\t\tfmt.Println(\"defer2:\", i)\n\t}()\n\tdefer func() {\n\t\ti++\n\t\tfmt.Println(\"defer1:\", i)\n\t}()\n\treturn \u0026i\n}\n\nfunc main() {\n\tfmt.Println(\"return:\", *(c()))\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000783-hfzsiae","Type":"NodeParagraph","Properties":{"id":"20230727000783-hfzsiae","updated":"20230727000783"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000784-xwclwy9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000784-xwclwy9","updated":"20230727000784"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"defer1: 1\ndefer2: 2\nreturn: 2\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000785-lbqd5su","Type":"NodeParagraph","Properties":{"id":"20230727000785-lbqd5su","updated":"20230727000785"},"Children":[{"Type":"NodeText","Data":"解释："},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"此时的返回值是一个指针（地址），这个指针=\u0026i，相当于指向变量i所在的地址，两个defer语句都对i进行了修改，那么返回值指向的地址的内容也发生了改变，所以最终的返回值是2。"}]},{"ID":"20230727000786-7d123p4","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230727000786-7d123p4","updated":"20230727000786"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"返回的为指针(地址)，defer 对指向该地址的变量进行修改，最终的返回值也会被更改"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000787-2xq3f8y","Type":"NodeParagraph","Properties":{"id":"20230727000787-2xq3f8y","updated":"20230727000787"},"Children":[{"Type":"NodeText","Data":"再看一个例子："}]},{"ID":"20230727000788-gx58ojh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000788-gx58ojh","updated":"20230727000788"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func f() (r int) {\n    defer func(r int) {\n          r = r + 5\n    }(r)\n    return 1\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000789-fovreso","Type":"NodeParagraph","Properties":{"id":"20230727000789-fovreso","updated":"20230727000789"},"Children":[{"Type":"NodeText","Data":"最初返回值r的值是1，虽然defer语句中函数的参数名也叫r（这里我记作r’），但传参的时候相当于r‘=r（值传递），函数内的语句相当于r’=r‘+5，所以返回值r并没有被修改，最终的返回值仍是1。"}]},{"ID":"20230727000790-go4v3yu","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000790-go4v3yu","updated":"20230727000790"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4 defer 与闭包"}]},{"ID":"20230727000791-c94ayld","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000791-c94ayld","updated":"20230727000791"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport \"fmt\"\n\ntype Test struct {\n    name string \n}\n\nfunc (t *Test) pp() {\n    fmt.Println(t.name)\n}\n\nfunc main() {\n    ts := []Test{{\"a\"},{\"b\"},{\"c\"}}\n    for _, t := range ts {\n        defer t.pp()\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000792-499pajb","Type":"NodeParagraph","Properties":{"id":"20230727000792-499pajb","updated":"20230727000792"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000793-rj0wtl5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000793-rj0wtl5","updated":"20230727000793"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"c\nc\nc\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000794-gcm802i","Type":"NodeParagraph","Properties":{"id":"20230727000794-gcm802i","updated":"20230727000794"},"Children":[{"Type":"NodeText","Data":"解释："},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"for结束时t.name=“c”，接下来执行的那些defer语句中用到的t.name的值均为”c“。"}]},{"ID":"20230727000795-q2z5jbm","Type":"NodeParagraph","Properties":{"id":"20230727000795-q2z5jbm","updated":"20230727000795"},"Children":[{"Type":"NodeText","Data":"修改代码为"}]},{"ID":"20230727000796-i7lg1cu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000796-i7lg1cu","updated":"20230727000796"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport \"fmt\"\n\ntype Test string {\n    name string\n}\n\nfunc pp(t Test) {\n    fmt.Println(t.name)\n}\nfunc main() {\n    ts := []Test{{\"a\"}, {\"b\"}, {\"c\"}}\n\tfor _, t := range ts {\n\t\tdefer pp(t)\n\t}\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000797-jovjp9q","Type":"NodeParagraph","Properties":{"id":"20230727000797-jovjp9q","updated":"20230727000797"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000798-m0asdkd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000798-m0asdkd","updated":"20230727000798"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"c\nb\na\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000799-2rp6o41","Type":"NodeParagraph","Properties":{"id":"20230727000799-2rp6o41","updated":"20230727000799"},"Children":[{"Type":"NodeText","Data":"解释："},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"defer语句中的参数会实时解析，所以在碰到defer语句的时候就把该时的t代入了。"}]},{"ID":"20230727000800-rv70xrx","Type":"NodeParagraph","Properties":{"id":"20230727000800-rv70xrx","updated":"20230727000800"},"Children":[{"Type":"NodeText","Data":"再次修改代码："}]},{"ID":"20230727000801-a9e8esn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000801-a9e8esn","updated":"20230727000801"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport \"fmt\"\n\ntype Test struct {\n\tname string\n}\nfunc (t *Test) pp() {\n\tfmt.Println(t.name)\n}\n\nfunc main() {\n\tts := []Test{{\"a\"}, {\"b\"}, {\"c\"}}\n\tfor _, t := range ts {\n\t\ttt := t\n\t\tprintln(\u0026tt)\n\t\tdefer tt.pp()\n\t}\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000802-h97l7jt","Type":"NodeParagraph","Properties":{"id":"20230727000802-h97l7jt","updated":"20230727000802"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000803-gms157r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000803-gms157r","updated":"20230727000803"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"0xc000010200\n0xc000010210\n0xc000010220\nc\nb\na\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000804-8ktape4","Type":"NodeParagraph","Properties":{"id":"20230727000804-8ktape4","updated":"20230727000804"},"Children":[{"Type":"NodeText","Data":"解释："}]},{"ID":"20230727000805-saqrmo4","Type":"NodeParagraph","Properties":{"id":"20230727000805-saqrmo4","updated":"20230727000805"},"Children":[{"Type":"NodeText","Data":":=用来声明并赋值，连续使用2次a:=1就会报错，但是在for循环内，可以看出每次tt:=t时，tt的地址都不同，说明他们是不同的变量，所以并不会报错。每次都有一个新的变量tt:=t，所以每次在执行defer语句时，对应的tt不是同一个（for循环中实际上生成了3个不同的tt），所以输出的结果也不相同。"}]},{"ID":"20230727000806-9yh1t47","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000806-9yh1t47","updated":"20230727000806"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.5 defer 用于关闭文件和互斥锁"}]},{"ID":"20230727000807-9jf9t2y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000807-9jf9t2y","updated":"20230727000807"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ReadFile(filename string) ([]byte, error) {\n    f, err := os.Open(filename)\n    if err != nil {\n        return nil, err\n    }\n    defer f.close()\n    return ReadAll()\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000808-7ostzr2","Type":"NodeParagraph","Properties":{"id":"20230727000808-7ostzr2","updated":"20230727000808"},"Children":[{"Type":"NodeText","Data":"互斥锁"}]},{"ID":"20230727000809-7a36ubd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000809-7a36ubd","updated":"20230727000809"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var mu sync.Mutex\nvar m = make(map[string]int)\n \nfunc lookup(key string) int {\n    mu.Lock()\n    defer mu.Unlock()\n    return m[key]\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000810-lcr1kt2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000810-lcr1kt2","updated":"20230727000810"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.6 \"解除\" 对所在函数的依赖"}]},{"ID":"20230727000811-u7oykbi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000811-u7oykbi","updated":"20230727000811"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport \"fmt\"\nimport \"time\"\n\ntype User struct {\n\tusername string\n}\n\nfunc (this *User) Close() {\n\tfmt.Println(this.username, \"Closed !!!\")\n}\n\nfunc main() {\n\tu1 := \u0026User{\"jack\"}\n\tdefer u1.Close()\n\tu2 := \u0026User{\"lily\"}\n\tdefer u2.Close()\n\ttime.Sleep(10 * time.Second)\n\tfmt.Println(\"Done !\")\n\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000812-p70hlqj","Type":"NodeParagraph","Properties":{"id":"20230727000812-p70hlqj","updated":"20230727000812"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000813-lt17c9m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000813-lt17c9m","updated":"20230727000813"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Done !\nlily Closed !!!\njack Closed !!!\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000814-rilv9dz","Type":"NodeParagraph","Properties":{"id":"20230727000814-rilv9dz","updated":"20230727000814"},"Children":[{"Type":"NodeText","Data":"解释："},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"defer后面跟无参函数，u1.Close()和u2.Close()要等sleep和fmt.Println(“Done !”)之后才可以执行，也就是在函数最终返回之前执行。"}]},{"ID":"20230727000815-suhaz41","Type":"NodeParagraph","Properties":{"id":"20230727000815-suhaz41","updated":"20230727000815"},"Children":[{"Type":"NodeText","Data":"修改代码为："}]},{"ID":"20230727000816-3bvyshs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000816-3bvyshs","updated":"20230727000816"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport \"fmt\"\nimport \"time\"\n\ntype User struct {\n\tusername string\n}\n\nfunc (this *User) Close() {\n\tfmt.Println(this.username, \"Closed !!!\")\n}\n\nfunc f(u *User) {\n\tdefer u.Close()\n}\n\nfunc main() {\n\tu1 := \u0026User{\"jack\"}\n\tf(u1)\n\tu2 := \u0026User{\"lily\"}\n\tfunc() { defer u2.Close() }()\n\n\ttime.Sleep(10 * time.Second)\n\tfmt.Println(\"Done !\")\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000817-6jskktl","Type":"NodeParagraph","Properties":{"id":"20230727000817-6jskktl","updated":"20230727000817"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000818-i8r9h93","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000818-i8r9h93","updated":"20230727000818"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"jack Closed !!!\nlily Closed !!!\nDone !\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000819-wq9fjs0","Type":"NodeParagraph","Properties":{"id":"20230727000819-wq9fjs0","updated":"20230727000819"},"Children":[{"Type":"NodeText","Data":"这样的使用方式，似乎不太合理，但却有存在的必要性。大多数情况下，可以用于 u1,u2 之类非常消耗内存，或者cpu，其后执行时间过程且没有太多关联的情况。既保留了defer的功能特性，也满足范围精确控制的条件！（算是奇技淫巧吧😂）"}]},{"ID":"20230727000820-08uhj5a","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000820-08uhj5a","updated":"20230727000820"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.7 defer 与 panic"}]},{"ID":"20230727000821-gbg5trk","Type":"NodeParagraph","Properties":{"id":"20230727000821-gbg5trk","updated":"20230727000821"},"Children":[{"Type":"NodeText","Data":"遇到panic时，遍历本协程的defer链表，并执行defer。在执行defer过程中:遇到recover则停止panic，返回recover处继续往下执行。如果没有遇到recover，遍历完本协程的defer链表后，向stderr抛出panic信息。"}]},{"ID":"20230727000822-alzo51o","Type":"NodeParagraph","Properties":{"id":"20230727000822-alzo51o","updated":"20230727000822"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230303104658066","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"E:\\Typora picture\\image-20230303104658066.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230727000823-l1c7o9w","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000823-l1c7o9w","updated":"20230727000823"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"（1）在panic语句后面的defer语句不被执行"}]},{"ID":"20230727000824-sjam35p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000824-sjam35p","updated":"20230727000824"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func panicDefer() {\n    panic(\"panic\")\n    defer fmt.Println(\"defer after panic\")\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000825-3jr9lq4","Type":"NodeParagraph","Properties":{"id":"20230727000825-3jr9lq4","updated":"20230727000825"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000826-5iaffx5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c2g=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000826-5iaffx5","updated":"20230727000826"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2g=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"panic: panic\ngoroutine 1 [running]:\nmain.panicDefer()\n    E:/godemo/testdefer.go:17 +0x39\nmain.main()\n    E:/godemo/testdefer.go:13 +0x20\nProcess finished with exit code 2\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000827-q1vnx84","Type":"NodeParagraph","Properties":{"id":"20230727000827-q1vnx84","updated":"20230727000827"},"Children":[{"Type":"NodeText","Data":"可以看到 defer 语句没有执行。"}]},{"ID":"20230727000828-gziothe","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000828-gziothe","updated":"20230727000828"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"（2）在panic语句前的defer语句会被执行"}]},{"ID":"20230727000829-ghczcl5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000829-ghczcl5","updated":"20230727000829"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func deferPanic() {\n    defer fmt.Println(\"defer before panic\")\n    panic(\"panic\")\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000830-ngw9j90","Type":"NodeParagraph","Properties":{"id":"20230727000830-ngw9j90","updated":"20230727000830"},"Children":[{"Type":"NodeText","Data":"输出"}]},{"ID":"20230727000831-es4snii","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c2g=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000831-es4snii","updated":"20230727000831"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2g=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"defer before panic\npanic: panic\ngoroutine 1 [running]:\nmain.deferPanic()\n    E:/godemo/testdefer.go:19 +0x95\nmain.main()\n    E:/godemo/testdefer.go:14 +0x20\nProcess finished with exit code 2\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000832-10smt1u","Type":"NodeParagraph","Properties":{"id":"20230727000832-10smt1u","updated":"20230727000832"},"Children":[{"Type":"NodeText","Data":"defer 语句输出了内容。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"Go中的panic类似其它语言中的抛出异常，panic后面的代码不再执行(panic语句前面的defer语句会被执行)。"}]},{"ID":"20230727000833-dgya1sb","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000833-dgya1sb","updated":"20230727000833"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"8、调用os.Exit时defer不会被执行"}]},{"ID":"20230727000834-8tz90n9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000834-8tz90n9","updated":"20230727000834"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func deferExit() {\n    defer func() {\n        fmt.Println(\"defer\")\n    }()\n    os.Exit(0)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000835-j1vq02f","Type":"NodeParagraph","Properties":{"id":"20230727000835-j1vq02f","updated":"20230727000835"},"Children":[{"Type":"NodeText","Data":"当调用os.Exit()方法退出程序时，defer并不会被执行，上面的defer并不会输出。"}]},{"ID":"20230727000836-6owqfwo","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000836-6owqfwo","updated":"20230727000836"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3. defer的数据结构和三种实现方式"}]},{"ID":"20230727000837-p2rc84y","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000837-p2rc84y","updated":"20230727000837"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.1 defer数据结构"}]},{"ID":"20230727000838-u9uu6h6","Type":"NodeParagraph","Properties":{"id":"20230727000838-u9uu6h6","updated":"20230727000838"},"Children":[{"Type":"NodeText","Data":"defer关键字在Go语言源代码中的数据结构是 runtime_defer:"}]},{"ID":"20230727000839-zs3kfz5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000839-zs3kfz5","updated":"20230727000839"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type _defer struct {\n\tstarted bool        // 标识defer函数是否已经开始执行\n\theap    bool        // 标识该defer结构是否在堆上分配\n\topenDefer bool      // 是否以开放编码的方式实现该defer\n\tsp        uintptr   // 调用方的栈指针\n\tpc        uintptr   // 调用方的程序计数器\n\tfn        func()    // defer调用的函数\n\t_panic    *_panic   // defer关联的panic，非panic触发时为空\n\tlink      *_defer   // G 上的defer链表; 既可以指向堆也可以指向栈\n\tfd   unsafe.Pointer // 跟defer调用函数相关的参数\n\tvarp uintptr        \n\tframepc uintptr\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000840-q3yl1wo","Type":"NodeParagraph","Properties":{"id":"20230727000840-q3yl1wo","updated":"20230727000840"},"Children":[{"Type":"NodeText","Data":"主要的字段有："}]},{"ID":"20230727000841-6ivf51v","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000841-6ivf51v","updated":"20230727000841"},"Children":[{"ID":"20230727000842-fz1oxn9","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000842-fz1oxn9","updated":"20230727000842"},"Children":[{"ID":"20230727000843-ihtnfu1","Type":"NodeParagraph","Properties":{"id":"20230727000843-ihtnfu1","updated":"20230727000843"},"Children":[{"Type":"NodeText","Data":"heap 标识该defer结构"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"是否在"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"堆上分配"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"；"}]}]},{"ID":"20230727000844-ni5vlvr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000844-ni5vlvr","updated":"20230727000844"},"Children":[{"ID":"20230727000845-dbys1q8","Type":"NodeParagraph","Properties":{"id":"20230727000845-dbys1q8","updated":"20230727000845"},"Children":[{"Type":"NodeText","Data":"openDefer 表示当前 defer "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"是否以"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"开放编码的方式实现"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"；"}]}]},{"ID":"20230727000846-vjfkjqg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000846-vjfkjqg","updated":"20230727000846"},"Children":[{"ID":"20230727000847-npisxtk","Type":"NodeParagraph","Properties":{"id":"20230727000847-npisxtk","updated":"20230727000847"},"Children":[{"Type":"NodeText","Data":"sp 和 pc 分别代表"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"调用方的栈指针和程序计数器"},{"Type":"NodeText","Data":"；"}]}]},{"ID":"20230727000848-ri8bt8g","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000848-ri8bt8g","updated":"20230727000848"},"Children":[{"ID":"20230727000849-gwje3yx","Type":"NodeParagraph","Properties":{"id":"20230727000849-gwje3yx","updated":"20230727000849"},"Children":[{"Type":"NodeText","Data":"fn 是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"defer 关键字中传入的函数"},{"Type":"NodeText","Data":"；"}]}]},{"ID":"20230727000850-wyaukhx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000850-wyaukhx","updated":"20230727000850"},"Children":[{"ID":"20230727000851-kay6c2n","Type":"NodeParagraph","Properties":{"id":"20230727000851-kay6c2n","updated":"20230727000851"},"Children":[{"Type":"NodeText","Data":"_panic 是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"触发defer延迟调用的结构体"},{"Type":"NodeText","Data":"，非panic触发时为空；"}]}]},{"ID":"20230727000852-4t2q2uy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000852-4t2q2uy","updated":"20230727000852"},"Children":[{"ID":"20230727000853-zmnauck","Type":"NodeParagraph","Properties":{"id":"20230727000853-zmnauck","updated":"20230727000853"},"Children":[{"Type":"NodeText","Data":"ink  "},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"defer链表"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，指所在函数的goroutine的defer链表；"}]}]}]},{"ID":"20230727000854-1va2ytd","Type":"NodeParagraph","Properties":{"id":"20230727000854-1va2ytd","updated":"20230727000854"},"Children":[{"Type":"NodeText","Data":"一个函数内可以有多个 defer 调用，所以需要一个数据结构来组织这些 _defer 结构体，这就是link字段的作用， 它把函数中的所有_defer串成一个链表，表头是挂在当前Goroutine 的 _defer 字段。"}]},{"ID":"20230727000855-9ivf5dp","Type":"NodeParagraph","Properties":{"id":"20230727000855-9ivf5dp","updated":"20230727000855"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"img","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"E:\\Typora picture\\7000.webp","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230727000856-gdmdns9","Type":"NodeParagraph","Properties":{"id":"20230727000856-gdmdns9","updated":"20230727000856"},"Children":[{"Type":"NodeText","Data":"图2.1 函数中的多个defer会以链表形式挂在函数所在G上"}]},{"ID":"20230727000857-ozzvnxm","Type":"NodeParagraph","Properties":{"id":"20230727000857-ozzvnxm","updated":"20230727000857"},"Children":[{"Type":"NodeText","Data":"函数中的defer按从上到下的注册顺序依次"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"放入link链表头"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，函数退出时调用的顺序也是依次从链表头获取，这就是LIFO特性的由来，后面会具体分析。"}]},{"ID":"20230727000858-589ru1y","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000858-589ru1y","updated":"20230727000858"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2 defer的三种实现方式"}]},{"ID":"20230727000859-ieqwh0h","Type":"NodeParagraph","Properties":{"id":"20230727000859-ieqwh0h","updated":"20230727000859"},"Children":[{"Type":"NodeText","Data":"从直觉上看， defer 应该由编译器直接将需要的函数调用插入到该调用的地方，似乎是一个编译期特性， 不应该存在运行时性能问题。但实际情况是，由于 defer 并没有与其依赖资源挂钩，也允许在条件、循环语句中出现， 这使得 defer 的语义变得相对复杂，有时无法在编译期决定存在多少个 defer 调用。这使defer有可能在堆上或栈上实现。"}]},{"ID":"20230727000860-87ylxih","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000860-87ylxih","updated":"20230727000860"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2.1 Go语言编译器原理初探"}]},{"ID":"20230727000861-0h6yeum","Type":"NodeParagraph","Properties":{"id":"20230727000861-0h6yeum","updated":"20230727000861"},"Children":[{"Type":"NodeText","Data":"在讨论defer的"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"堆分配、栈分配、开放编码三种实现方式"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"之前，需要先读懂 Go 语言编译器优化的代码逻辑，要读懂 Go 编译器优化的代码，需要先弄清楚 Go 语言编译器怎样将程序员写的 Go代码编译成机器可执行的二进制代码。"}]},{"ID":"20230727000862-uaqkqiq","Type":"NodeParagraph","Properties":{"id":"20230727000862-uaqkqiq","updated":"20230727000862"},"Children":[{"Type":"NodeText","Data":"Go编译器将程序员写的Go代码编译成机器可执行的二进制代码的主要步骤是："}]},{"ID":"20230727000863-o5cpasr","Type":"NodeParagraph","Properties":{"id":"20230727000863-o5cpasr","updated":"20230727000863"},"Children":[{"Type":"NodeText","Data":"1）Go 编译器将程序员写的源代码经过词法分析（lexical analysis, 解析源代码文件，它将文件中的字符串序列转换成 Token 序列）和语法分析（syntax analysis，按照顺序解析 Token 序列并对每个源文件生成一个个语法树syntax tree，语法树使用节点Node表达变量、函数声明、表达式语句等），该段逻辑主要体现在 cmd/compile/internal/syntax 包中；"}]},{"ID":"20230727000864-02q8e4o","Type":"NodeParagraph","Properties":{"id":"20230727000864-02q8e4o","updated":"20230727000864"},"Children":[{"Type":"NodeText","Data":"2）接着编译器会将上面生成的语法树转化为抽象语法树 AST（Abstract Syntax Tree），接着是做类型检查，类型检查会遍历抽象语法树中的Node节点，对每个节点的类型进行检验，找出其中存在的语法错误，去除不会被执行的代码，执行逃逸分析，进行函数内联优化以提高效率等；该段逻辑主要体现在 cmd/compile/internal/gc 包中，注意，这里的 gc 是go compiler编译器的意思，而不是GC垃圾回收的意思；"}]},{"ID":"20230727000865-9rlnc5y","Type":"NodeParagraph","Properties":{"id":"20230727000865-9rlnc5y","updated":"20230727000865"},"Children":[{"Type":"NodeText","Data":"3）经过上面的语法分析和类型检查，就可以认为当前文件中的代码不存在语法错误和类型错误的问题了；接着，Go编译器会将抽象语法树AST编译成一种具有SSA（Static Single Assignment，静态单赋值）特性的中间代码，中间代码是一种更接近机器语言的表示形式，这种中间代码要经过50多轮处理转换，会生成最终的SSA中间代码，目的是为了提高执行效率，Go语言中的许多关键字都是在这个阶段被转换成运行时中的方法的，包括今天要分析的defer；该段逻辑主要体现在cmd/compile/internal/gc 和 cmd/compile/internal/ssa 包中；"}]},{"ID":"20230727000866-z9paux9","Type":"NodeParagraph","Properties":{"id":"20230727000866-z9paux9","updated":"20230727000866"},"Children":[{"Type":"NodeText","Data":"4）最后一步，是将SSA中间代码生成可执行的机器代码，即在目标 CPU 架构上能够运行的二进制代码，该过程其实是对 SSA 中间代码的降级（lower）过程，并涉及对特定CPU、寄存器和内存的处理；我们经常用来打印 Go 汇编代码的命令GOOS=linux GOARCH=amd64 go tool compile -S -N -l main.go生成的就是机器码；该段逻辑主要体现在 cmd/compile/internal/ssa 和cmd/internal/obj包中；"}]},{"ID":"20230727000867-g57qsma","Type":"NodeParagraph","Properties":{"id":"20230727000867-g57qsma","updated":"20230727000867"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"em","TextMarkTextContent":"参考 src/cmd/compile/README.md 和《Go语言设计与实现》第一章，要了解 Go语言各种关键字的实现原理，阅读Go编译器的源码是绕不开的。"}]},{"ID":"20230727000868-kb8ynu0","Type":"NodeParagraph","Properties":{"id":"20230727000868-kb8ynu0","updated":"20230727000868"},"Children":[{"Type":"NodeText","Data":"如图2.2所示，是Go1.18的编译器的执行过程。"}]},{"ID":"20230727000869-jzfs4wl","Type":"NodeParagraph","Properties":{"id":"20230727000869-jzfs4wl","updated":"20230727000869"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"img","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"E:\\Typora picture\\7000-16782549315871.webp","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230727000870-3rdtr55","Type":"NodeParagraph","Properties":{"id":"20230727000870-3rdtr55","updated":"20230727000870"},"Children":[{"Type":"NodeText","Data":"图2.2 Go语言编译器执行逻辑"}]},{"ID":"20230727000871-jsva9tb","Type":"NodeParagraph","Properties":{"id":"20230727000871-jsva9tb","updated":"20230727000871"},"Children":[{"Type":"NodeText","Data":"1）编译器入口在cmd/compile/internal/gc/main.go包的gc.Main()方法；"}]},{"ID":"20230727000872-ak9s1pu","Type":"NodeParagraph","Properties":{"id":"20230727000872-ak9s1pu","updated":"20230727000872"},"Children":[{"Type":"NodeText","Data":"2）gc.Main() 调用cmd/compile/internal/noder/noder.go 的 noder.LoadPackage() 进行词法分析、语法分析和类型检查，并生成抽象语法树 AST；"}]},{"ID":"20230727000873-f294bgd","Type":"NodeParagraph","Properties":{"id":"20230727000873-f294bgd","updated":"20230727000873"},"Children":[{"Type":"NodeText","Data":"3）Main() 调用 cmd/compile/internal/gc/compile.go的gc.enqueueFunc()，后者调用gc.prepareFunc()，最终调用cmd/compile/internal/walk/walk.go包的walk.Walk()方法，遍历并改写代码中的AST节点，为生成最终的抽象语法树AST做好准备；需要注意的是：walk.Walk()方法里会将一些关键字和内建函数转换成运行时的函数调用，比如，会将 panic、recover 两个内建函数转换成 runtime.gopanic 和 runtime.gorecover 两个真正运行时函数，关键字 new 也会被转换成调用 runtime.newobject 函数，还会将Channel、map、make、new 以及 select 等关键字转换成相应运行时函数；"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"而defer关键字的主要处理逻辑却不在这里"},{"Type":"NodeText","Data":"；"}]},{"ID":"20230727000874-fvho5p3","Type":"NodeParagraph","Properties":{"id":"20230727000874-fvho5p3","updated":"20230727000874"},"Children":[{"Type":"NodeText","Data":"4）然后，Main() 方法调用 cmd/compile/internal/gc/compile.go 的 gc.compileFunctions()方法，将抽象语法树AST生成SSA中间代码，其中具体调用的是cmd/compile/internal/ssagen/pgen.go 的 ssagen.Compile()方法，该方法调用cmd/compile/internal/ssagen/ssa.go 的ssagen.buildssa()；"}]},{"ID":"20230727000875-22qfnii","Type":"NodeParagraph","Properties":{"id":"20230727000875-22qfnii","updated":"20230727000875"},"Children":[{"Type":"NodeText","Data":"5）ssagen.buildssa()调用同文件的state.stmtList()，state.stmtList()会为传入的每个节点调用state.stmt()方法，state.stmt()根据节点操作符的不同将当前AST节点转换成对应的中间代码；注意："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"defer关键字的处理在state.stmt()方法这里"},{"Type":"NodeText","Data":"；"}]},{"ID":"20230727000876-akcu2bc","Type":"NodeParagraph","Properties":{"id":"20230727000876-akcu2bc","updated":"20230727000876"},"Children":[{"Type":"NodeText","Data":"6）ssagen.buildssa() 调用 cmd/compile/internal/ssa/compile.go 的 ssa.Compile() 方法，经过50多轮处理优化，包括去掉无用代码、根据目标CPU架构对代码进行改写等，提高中间代码执行效率，得到最终的SSA中间代码；"}]},{"ID":"20230727000877-5u4i7kl","Type":"NodeParagraph","Properties":{"id":"20230727000877-5u4i7kl","updated":"20230727000877"},"Children":[{"Type":"NodeText","Data":"7）通过命令 GOSSAFUNC=main GOOS=linux GOARCH=amd64 go build main.go可以打印并查看源代码、对应的抽象语法树AST、几十个版本的中间代码、最终生成的 SSA以及机器码。"}]},{"ID":"20230727000878-9t7wju4","Type":"NodeParagraph","Properties":{"id":"20230727000878-9t7wju4","updated":"20230727000878"},"Children":[{"Type":"NodeText","Data":"这整个编译过程中，涉及到defer关键字处理的逻辑在cmd/compile/internal/ssagen/ssa.go包的state.stmtList()调用的state.stmt()方法，下面会多次用到。"}]},{"ID":"20230727000879-6zyajux","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000879-6zyajux","updated":"20230727000879"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2.2 defer的编译器优化"}]},{"ID":"20230727000880-dler0ne","Type":"NodeParagraph","Properties":{"id":"20230727000880-dler0ne","updated":"20230727000880"},"Children":[{"Type":"NodeText","Data":"cmd/compile/internal/ssagen/ssa.go包的state.stmt()方法负责处理代码中的defer关键字，会根据条件的不同，使用三种不同的机制实现 defer："}]},{"ID":"20230727000881-rd8gmki","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YXNjcmlwdA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000881-rd8gmki","updated":"20230727000881"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YXNjcmlwdA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// 转化语句到SSA中间代码\nfunc (s *state) stmt(n ir.Node) {\n        ......\n\tcase ir.ODEFER:    // 如果AST节点是defer类型\n\t\tn := n.(*ir.GoDeferStmt)\n\t\tif base.Debug.Defer \u003e 0 {  // 为编译器的调试状态打印defer类型: 开放编码，栈分配，堆分配\n\t\t\tvar defertype string\n\t\t\tif s.hasOpenDefers {\n\t\t\t\tdefertype = \"open-coded\"\n\t\t\t} else if n.Esc() == ir.EscNever {\n\t\t\t\tdefertype = \"stack-allocated\"\n\t\t\t} else {\n\t\t\t\tdefertype = \"heap-allocated\"\n\t\t\t}\n\t\t\tbase.WarnfAt(n.Pos(), \"%s defer\", defertype)\n\t\t}\n\t\tif s.hasOpenDefers {                 // 如果允许开放编码，则用该方式实现defer\n\t\t\ts.openDeferRecord(n.Call.(*ir.CallExpr))\n\t\t} else {\n\t\t\td := callDefer               // 默认使用堆分配的方式实现defer\n\t\t\tif n.Esc() == ir.EscNever {  // 如果没有发生内存逃逸，使用栈分配的方式实现defer\n\t\t\t\td = callDeferStack\n\t\t\t}\n\t\t\ts.callResult(n.Call.(*ir.CallExpr), d)\n\t\t}\n        ......\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000882-oc247jz","Type":"NodeParagraph","Properties":{"id":"20230727000882-oc247jz","updated":"20230727000882"},"Children":[{"Type":"NodeText","Data":"从这段逻辑可以知道："}]},{"ID":"20230727000883-f4wem4m","Type":"NodeParagraph","Properties":{"id":"20230727000883-f4wem4m","updated":"20230727000883"},"Children":[{"Type":"NodeText","Data":"1）实现defer的方式有三种：开放编码，栈分配，堆分配；"}]},{"ID":"20230727000884-z1u8i2f","Type":"NodeParagraph","Properties":{"id":"20230727000884-z1u8i2f","updated":"20230727000884"},"Children":[{"Type":"NodeText","Data":"2）如果允许使用开放编码的方式，则优先使用该方式实现defer，这是Go1.14引入的，性能最好；后面我们会分析到，实现开放编码的条件是：a) 编译器没有设置参数-N，即没有禁用内联优化；b）函数中defer的个数不超过一个字节的位数，即不超过8个；c）defer的函数个数和参数的个数乘积小于15；d）defer关键字不能在循环中执行，满足这些条件的defer调用场景简单，绝大多数信息都能在编译期确定；"}]},{"ID":"20230727000885-c2zv2ze","Type":"NodeParagraph","Properties":{"id":"20230727000885-c2zv2ze","updated":"20230727000885"},"Children":[{"Type":"NodeText","Data":"3）如果没有发生内存逃逸到堆上，则优先使用栈分配的方式实现defer，这是Go1.13引入的优化方式，减少了内存在堆上分配的额外开销，提升了30%左右的性能；"}]},{"ID":"20230727000886-22dm5bl","Type":"NodeParagraph","Properties":{"id":"20230727000886-22dm5bl","updated":"20230727000886"},"Children":[{"Type":"NodeText","Data":"4）前面两种方式都不符合条件，则默认使用堆上分配的方式实现defer；"}]},{"ID":"20230727000887-p9c9h9g","Type":"NodeParagraph","Properties":{"id":"20230727000887-p9c9h9g","updated":"20230727000887"},"Children":[{"Type":"NodeText","Data":"下面首先分析Go最早采用的defer在堆上分配的实现方式，接着分析defer栈上分配，最后是开放编码的实现方式。"}]}]}