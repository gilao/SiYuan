{"ID":"20230727000943-b1nin6r","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230727000943-b1nin6r","title":"12. Select 多路复用","updated":"20230727000943"},"Children":[{"ID":"20230727000944-cx5pxkg","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230727000944-cx5pxkg","updated":"20230727000944"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"12. Select 多路复用"}]},{"ID":"20230727000945-52mj19u","Type":"NodeParagraph","Properties":{"id":"20230727000945-52mj19u","updated":"20230727000945"},"Children":[{"Type":"NodeText","Data":"在某些场景下我们可能需要同时从多个通道接收数据。通道在接收数据时，如果没有数据可以被接收那么当前 goroutine 将会发生阻塞。你也许会写出如下代码尝试使用遍历的方式来实现从多个通道中接收值。"}]},{"ID":"20230727000946-gpo37tz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000946-gpo37tz","updated":"20230727000946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"for{\n    // 尝试从ch1接收值\n    data, ok := \u003c-ch1\n    // 尝试从ch2接收值\n    data, ok := \u003c-ch2\n    …\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000947-z7gb05g","Type":"NodeParagraph","Properties":{"id":"20230727000947-z7gb05g","updated":"20230727000947"},"Children":[{"Type":"NodeText","Data":"这种方式虽然可以实现从多个通道接收值的需求，但是程序的运行性能会差很多。Go 语言内置了"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"select"},{"Type":"NodeText","Data":"关键字，使用它可以同时响应多个通道的操作。"}]},{"ID":"20230727000948-o4pm1x3","Type":"NodeParagraph","Properties":{"id":"20230727000948-o4pm1x3","updated":"20230727000948"},"Children":[{"Type":"NodeText","Data":"Select 的使用方式类似于之前学到的 switch 语句，它也有一系列 case 分支和一个默认的分支。每个 case 分支会对应一个通道的通信（接收或发送）过程。select 会一直等待，直到其中的某个 case 的通信操作完成时，就会执行该 case 分支对应的语句。具体格式如下："}]},{"ID":"20230727000949-tzoyek4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000949-tzoyek4","updated":"20230727000949"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"select {\ncase \u003c-ch1:\n\t//...\ncase data := \u003c-ch2:\n\t//...\ncase ch3 \u003c- 10:\n\t//...\ndefault:\n\t//默认操作\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000950-r0ycfnd","Type":"NodeParagraph","Properties":{"id":"20230727000950-r0ycfnd","updated":"20230727000950"},"Children":[{"Type":"NodeText","Data":"Select 语句具有以下特点。"}]},{"ID":"20230727000951-kh0fkae","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000951-kh0fkae","updated":"20230727000951"},"Children":[{"ID":"20230727000952-8u6kl8o","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000952-8u6kl8o","updated":"20230727000952"},"Children":[{"ID":"20230727000953-krkczsa","Type":"NodeParagraph","Properties":{"id":"20230727000953-krkczsa","updated":"20230727000953"},"Children":[{"Type":"NodeText","Data":"可处理一个或多个 channel 的发送/接收操作。"}]}]},{"ID":"20230727000954-eewy0k6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000954-eewy0k6","updated":"20230727000954"},"Children":[{"ID":"20230727000955-obo2xy8","Type":"NodeParagraph","Properties":{"id":"20230727000955-obo2xy8","updated":"20230727000955"},"Children":[{"Type":"NodeText","Data":"如果多个 case 同时满足，select 会"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"随机"},{"Type":"NodeText","Data":"选择一个执行。"}]}]},{"ID":"20230727000956-lyx9y19","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000956-lyx9y19","updated":"20230727000956"},"Children":[{"ID":"20230727000957-nsanboe","Type":"NodeParagraph","Properties":{"id":"20230727000957-nsanboe","updated":"20230727000957"},"Children":[{"Type":"NodeText","Data":"对于没有 case 的 select 会一直阻塞，可用于阻塞 main 函数，防止退出。"}]}]}]},{"ID":"20230727000958-123yc0b","Type":"NodeParagraph","Properties":{"id":"20230727000958-123yc0b","updated":"20230727000958"},"Children":[{"Type":"NodeText","Data":"下面的示例代码能够在终端打印出10以内的奇数，我们借助这个代码片段来看一下 select 的具体使用。"}]},{"ID":"20230727000959-zxua2y4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000959-zxua2y4","updated":"20230727000959"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport \"fmt\"\n\nfunc main() {\n\tch := make(chan int, 1)\n\tfor i := 1; i \u003c= 10; i++ {\n\t\tselect {\n\t\tcase x := \u003c-ch:\n\t\t\tfmt.Println(x)\n\t\tcase ch \u003c- i:\n\t\t}\n\t}\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000960-cx7i2un","Type":"NodeParagraph","Properties":{"id":"20230727000960-cx7i2un","updated":"20230727000960"},"Children":[{"Type":"NodeText","Data":"示例中的代码首先是创建了一个缓冲区大小为1的通道 ch，进入 for 循环后："}]},{"ID":"20230727000961-kyzrzgk","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000961-kyzrzgk","updated":"20230727000961"},"Children":[{"ID":"20230727000962-0bqzhxl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000962-0bqzhxl","updated":"20230727000962"},"Children":[{"ID":"20230727000963-2d08nx4","Type":"NodeParagraph","Properties":{"id":"20230727000963-2d08nx4","updated":"20230727000963"},"Children":[{"Type":"NodeText","Data":"第一次循环时 i = 1，select 语句中包含两个 case 分支，此时由于通道中没有值可以接收，所以"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"x := \u0026lt;-ch"},{"Type":"NodeText","Data":" 这个 case 分支不满足，而"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ch \u0026lt;- i"},{"Type":"NodeText","Data":"这个分支可以执行，会把1发送到通道中，结束本次 for 循环；"}]}]},{"ID":"20230727000964-uqflgjb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000964-uqflgjb","updated":"20230727000964"},"Children":[{"ID":"20230727000965-k1w4vk9","Type":"NodeParagraph","Properties":{"id":"20230727000965-k1w4vk9","updated":"20230727000965"},"Children":[{"Type":"NodeText","Data":"第二次 for 循环时，i = 2，由于通道缓冲区已满，所以"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ch \u0026lt;- i"},{"Type":"NodeText","Data":"这个分支不满足，而"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"x := \u0026lt;-ch"},{"Type":"NodeText","Data":"这个分支可以执行，从通道接收值1并赋值给变量 x ，所以会在终端打印出 1；"}]}]},{"ID":"20230727000966-c6axhj1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000966-c6axhj1","updated":"20230727000966"},"Children":[{"ID":"20230727000967-fxrgbuj","Type":"NodeParagraph","Properties":{"id":"20230727000967-fxrgbuj","updated":"20230727000967"},"Children":[{"Type":"NodeText","Data":"后续的 for 循环以此类推会依次打印出3、5、7、9。"}]}]}]}]}