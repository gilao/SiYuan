{"ID":"20230904210245-p5109ds","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f6b4-200d-2642-fe0f","id":"20230904210245-p5109ds","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230904210245-p5109ds\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230904210246-0oe19hr\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230904210246-0oe19hr\u0026quot;,\u0026quot;scrollTop\u0026quot;:0\u0026#125;","tags":"数组,二分查找","title":"2 二分查找","updated":"20230904224911"},"Children":[{"ID":"20230904222751-siwsjzi","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230904222751-siwsjzi","updated":"20230904222755"},"Children":[{"Type":"NodeText","Data":"题目"}]},{"ID":"20230904222734-a5li90o","Type":"NodeParagraph","Properties":{"id":"20230904222734-a5li90o","updated":"20230904222734"},"Children":[{"Type":"NodeText","Data":"给定一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"n"},{"Type":"NodeText","Data":"​ 个元素有序的（升序）整型数组 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nums"},{"Type":"NodeText","Data":"​ 和一个目标值 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"target"},{"Type":"NodeText","Data":"​  ，写一个函数搜索 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nums"},{"Type":"NodeText","Data":"​ 中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"target"},{"Type":"NodeText","Data":"​，如果目标值存在返回下标，否则返回 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"-1"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20230904222734-r0gkkn5","Type":"NodeParagraph","Properties":{"id":"20230904222734-r0gkkn5","updated":"20230904222734"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"示例 1:"}]},{"ID":"20230904222734-b5o21r0","Type":"NodeHTMLBlock","Data":"\u003cpre\u003e\u003cstrong\u003e输入:\u003c/strong\u003e \u003ccode\u003enums\u003c/code\u003e = [-1,0,3,5,9,12], \u003ccode\u003etarget\u003c/code\u003e = 9\n\u003cstrong\u003e输出:\u003c/strong\u003e 4\n\u003cstrong\u003e解释:\u003c/strong\u003e 9 出现在 \u003ccode\u003enums\u003c/code\u003e 中并且下标为 4\n\u003c/pre\u003e","Properties":{"id":"20230904222734-b5o21r0","updated":"20230904222734"}},{"ID":"20230904222734-wzicfkj","Type":"NodeParagraph","Properties":{"id":"20230904222734-wzicfkj","updated":"20230904222734"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"示例 2:"}]},{"ID":"20230904222734-x6wbgq2","Type":"NodeHTMLBlock","Data":"\u003cpre\u003e\u003cstrong\u003e输入:\u003c/strong\u003e \u003ccode\u003enums\u003c/code\u003e = [-1,0,3,5,9,12], \u003ccode\u003etarget\u003c/code\u003e = 2\n\u003cstrong\u003e输出:\u003c/strong\u003e -1\n\u003cstrong\u003e解释:\u003c/strong\u003e 2 不存在 \u003ccode\u003enums\u003c/code\u003e 中因此返回 -1\u003c/pre\u003e","Properties":{"id":"20230904222734-x6wbgq2","updated":"20230904222734"}},{"ID":"20230904222850-ivb4wmz","Type":"NodeParagraph","Properties":{"id":"20230904222850-ivb4wmz","updated":"20230904222850"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"提示："}]},{"ID":"20230904222850-1liivkf","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20230904222850-1liivkf","updated":"20230904222850"},"Children":[{"ID":"20230904222850-u66logk","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20230904222850-u66logk","updated":"20230904222850"},"Children":[{"ID":"20230904222850-6si11t1","Type":"NodeParagraph","Properties":{"id":"20230904222850-6si11t1","updated":"20230904222850"},"Children":[{"Type":"NodeText","Data":"你可以假设 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nums"},{"Type":"NodeText","Data":"​ 中的所有元素是不重复的。"}]}]},{"ID":"20230904222850-izkhqfp","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20230904222850-izkhqfp","updated":"20230904222850"},"Children":[{"ID":"20230904222850-tr0r1zf","Type":"NodeParagraph","Properties":{"id":"20230904222850-tr0r1zf","updated":"20230904222850"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"n"},{"Type":"NodeText","Data":"​ 将在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"[1, 10000]"},{"Type":"NodeText","Data":"​之间。"}]}]},{"ID":"20230904222850-bd1yimn","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20230904222850-bd1yimn","updated":"20230904222850"},"Children":[{"ID":"20230904222850-wyxsqx8","Type":"NodeParagraph","Properties":{"id":"20230904222850-wyxsqx8","updated":"20230904222850"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nums"},{"Type":"NodeText","Data":"​ 的每个元素都将在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"[-9999, 9999]"},{"Type":"NodeText","Data":"​之间。"}]}]}]},{"ID":"20230904222748-b36158v","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230904222748-b36158v","updated":"20230904222803"},"Children":[{"Type":"NodeText","Data":"思路"}]},{"ID":"20230904222814-5b1hmfj","Type":"NodeParagraph","Properties":{"id":"20230904222814-5b1hmfj","updated":"20230904222910"},"Children":[{"Type":"NodeText","Data":"这道题⽬的前提是数组为"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-info-background); color: var(--b3-card-info-color);"},"TextMarkType":"text","TextMarkTextContent":"有序数组"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-info-background); color: var(--b3-card-info-color);\"}"},{"Type":"NodeText","Data":"，同时题⽬还强调"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-info-background); color: var(--b3-card-info-color);"},"TextMarkType":"text","TextMarkTextContent":"数组中⽆重复元素"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-info-background); color: var(--b3-card-info-color);\"}"},{"Type":"NodeText","Data":"，因为⼀旦有重复元素，使⽤⼆分查找法返回的元素下标可能不是唯⼀的，这些都是使⽤⼆分法的前提条件，当⼤家看到题⽬描述满⾜如上条件的时候，可要想⼀想是不是可以⽤⼆分法了。"}]},{"ID":"20230904223353-6ho3m6m","Type":"NodeParagraph","Properties":{"id":"20230904223353-6ho3m6m"}},{"ID":"20230904223127-5ntk9t0","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230904223127-5ntk9t0","updated":"20230904223314"},"Children":[{"Type":"NodeText","Data":"二分法使用前提"}]},{"ID":"20230904223314-xoc8mi2","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20230904223314-xoc8mi2","updated":"20230904223318"},"Children":[{"ID":"20230904223318-2mvx93m","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20230904223318-2mvx93m","updated":"20230904223318"},"Children":[{"ID":"20230904223318-3jlkw7b","Type":"NodeParagraph","Properties":{"id":"20230904223318-3jlkw7b","updated":"20230904223321"},"Children":[{"Type":"NodeText","Data":"有序数组"}]}]},{"ID":"20230904223321-ty443q7","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20230904223321-ty443q7"},"Children":[{"ID":"20230904223321-4k3sfim","Type":"NodeParagraph","Properties":{"id":"20230904223321-4k3sfim","updated":"20230904223331"},"Children":[{"Type":"NodeText","Data":"数组中无重复元素"}]}]}]},{"ID":"20230904223351-mmij3bb","Type":"NodeParagraph","Properties":{"id":"20230904223351-mmij3bb","updated":"20230904223352"}},{"ID":"20230904223110-3e45bd5","Type":"NodeParagraph","Properties":{"id":"20230904223110-3e45bd5","updated":"20230904223110"},"Children":[{"Type":"NodeText","Data":"⼆分查找涉及的很多的边界条件，逻辑⽐较简单，但就是写不好。例如到底是 while(left \u003c right) 还是while(left \u003c= right) ，到底是 right = middle 呢，还是要 right = middle - 1 呢？"}]},{"ID":"20230904223401-tse1kbv","Type":"NodeParagraph","Properties":{"id":"20230904223401-tse1kbv","updated":"20230904223502"},"Children":[{"Type":"NodeText","Data":"大家写二分法经常写乱，主要是因为对区间的定义没有想清楚，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"区间的定义就是不变量。"}]},{"ID":"20230904223504-4xdkzq6","Type":"NodeParagraph","Properties":{"id":"20230904223504-4xdkzq6","updated":"20230904223706"},"Children":[{"Type":"NodeText","Data":"要在二分查找的过程中保持不变量，就是在for中寻找每一次边界的处理都要坚持根据区间的定义来操作，这就是 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"循环不变量 "},{"Type":"NodeText","Data":"规则。"}]},{"ID":"20230904223709-coi1hv3","Type":"NodeParagraph","Properties":{"id":"20230904223709-coi1hv3","updated":"20230904223838"},"Children":[{"Type":"NodeText","Data":"写二分法，区间的定义一般为两种，左闭右闭即 [left,right]，或者左闭右开即 [left,right)。"}]},{"ID":"20230904223838-378p8zi","Type":"NodeParagraph","Properties":{"id":"20230904223838-378p8zi","updated":"20230904223910"},"Children":[{"Type":"NodeText","Data":"下面分别用这两种区间的定义分别讲解两种不同的二分法："}]},{"ID":"20230904223910-fj5jp8k","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230904223910-fj5jp8k","updated":"20230904224059"},"Children":[{"Type":"NodeText","Data":"二分法 左闭右闭区间"}]},{"ID":"20230904224059-p7ibr8l","Type":"NodeParagraph","Properties":{"id":"20230904224059-p7ibr8l","updated":"20230904224200"},"Children":[{"Type":"NodeText","Data":"第一种写法：我们定义 target 是在一个左闭右闭的区间里，也就是 [left,right]"}]},{"ID":"20230904224203-ytdv84o","Type":"NodeParagraph","Properties":{"id":"20230904224203-ytdv84o","updated":"20230904224344"},"Children":[{"Type":"NodeText","Data":"区间的定义就决定了二分法的代码应该如何写，因为定义 target 在 [left,right]区间，所以有如下两点："}]},{"ID":"20230904224344-0bicie7","Type":"NodeList","ListData":{},"Properties":{"id":"20230904224344-0bicie7","updated":"20230904224346"},"Children":[{"ID":"20230904224346-tjyrkmn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230904224346-tjyrkmn","updated":"20230904224346"},"Children":[{"ID":"20230904224346-v370j4u","Type":"NodeParagraph","Properties":{"id":"20230904224346-v370j4u","updated":"20230904224448"},"Children":[{"Type":"NodeText","Data":"for left \u003c= right : 要使用 \u003c=，因为left == right是有意义的，所以使用 \u003c="}]}]},{"ID":"20230904224450-bn4je3x","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230904224450-bn4je3x"},"Children":[{"ID":"20230904224450-ia1w4xl","Type":"NodeParagraph","Properties":{"id":"20230904224450-ia1w4xl","updated":"20230904224643"},"Children":[{"Type":"NodeText","Data":"if (nums[middle] \u003e target) right 要赋值为 middle-1，因为当前这个nums[middle]一定不是 target，那么接下来要查找的左区间结束下标位置就是 middle -1"}]}]}]},{"ID":"20230904224645-el35tgv","Type":"NodeParagraph","Properties":{"id":"20230904224645-el35tgv","updated":"20230904224654"},"Children":[{"Type":"NodeText","Data":"例如在数组：1,2,3,4,7,9,10中查找元素2，如图所示："}]},{"ID":"20230904224823-4dlu5c4","Type":"NodeParagraph","Properties":{"id":"20230904224823-4dlu5c4","updated":"20230904224823"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20230904224823-mvegthw.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230904224841-c1gcgxy","Type":"NodeParagraph","Properties":{"id":"20230904224841-c1gcgxy","updated":"20230904224858"},"Children":[{"Type":"NodeText","Data":"代码如下："}]},{"ID":"20230904224859-wgqncj7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230904224859-wgqncj7","updated":"20230904224911"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// \n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}