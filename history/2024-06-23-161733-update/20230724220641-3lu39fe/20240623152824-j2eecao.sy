{"ID":"20240623152824-j2eecao","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f9e8","id":"20240623152824-j2eecao","title":"ElasticSearch 工作原理","type":"doc","updated":"20240623161042"},"Children":[{"ID":"20240623152846-22ggykj","Type":"NodeParagraph","Properties":{"id":"20240623152846-22ggykj","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"现在有三段文本，id 分别是 0、1、2，你需要快速找到哪段文本里含有关键词\u0026quot;xiaobai\u0026quot;."}]},{"ID":"20240623152846-mup2vs2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240623152846-mup2vs2","updated":"20240623152856"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"I like xiaobai        （点赞）\nI follow xiaobai      （关注）\nI forward the video   （转发）\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240623152846-00ckv5z","Type":"NodeParagraph","Properties":{"id":"20240623152846-00ckv5z","updated":"20240623153323"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"我们很容易想到，可以依次遍历这三段文本，匹配文本内是否含有\u0026quot;xiaobai"},{"Type":"NodeText","Data":"\"，最终将符合条件的文本 ID 输出。"},{"Type":"NodeTextMark","TextMarkType":"strong strong","TextMarkTextContent":"在"},{"Type":"NodeTextMark","TextMarkType":"strong strong strong","TextMarkTextContent":"数据量小"},{"Type":"NodeTextMark","TextMarkType":"strong strong","TextMarkTextContent":"的时候，问题不大，但如果我有上百亿条这样的数据呢？"},{"Type":"NodeText","Data":"如果依次遍历，这一把执行下去，比你喜欢的女生回你消息的速度，还要"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"慢"},{"Type":"NodeText","Data":"。"},{"Type":"NodeTextMark","TextMarkType":"strong strong","TextMarkTextContent":"像这种在海量数据中，通过关键词检索出有效信息的场景非常常见，比如我们网购用的某宝和某东的站内商品搜索。那么问题就来了，怎么处理类似的搜索场景呢？"},{"Type":"NodeText","Data":"好办，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"没有什么是加一层中间层不能解决的，如果有，那就再加一层"},{"Type":"NodeText","Data":"。这次我们要加的中间层是 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"elasticSearch"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240623152846-nvrxuyu","Type":"NodeParagraph","Properties":{"id":"20240623152846-nvrxuyu","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-jkqgbw2","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-jkqgbw2","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"什么是 elasticSearch。"}]},{"ID":"20240623152846-wgq3oxn","Type":"NodeParagraph","Properties":{"id":"20240623152846-wgq3oxn","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"elastic Search, 也就是 es，是一个开源的搜索引擎。"},{"Type":"NodeTextMark","TextMarkType":"strong strong strong","TextMarkTextContent":"它介于"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"应用"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据"},{"Type":"NodeText","Data":"之间，只要将数据写入 es，应用就可以通过一些关键词搜索到数据。效果就像某度搜索一样。那它是怎么做到的呢？我们从倒排索引聊起。"}]},{"ID":"20240623152846-97mqq3g","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-97mqq3g","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"什么是倒排索引"}]},{"ID":"20240623152846-22z6mmp","Type":"NodeParagraph","Properties":{"id":"20240623152846-22z6mmp","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"回到文章开头的例子。依次遍历文本匹配是否含有\u0026quot;xiaobai\u0026quot;，确实低效。那有更高效的解法吗？有，我们可以对文本进行切分，比如\u0026quot;I like xiaobai\u0026quot;切分为\u0026quot;I\u0026quot;、\u0026quot;like\u0026quot;、\u0026quot;xiaobai\u0026quot;三部分，这个操作叫分词"},{"Type":"NodeText","Data":"，分词后的每部分，我们称为一个"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"词项"},{"Type":"NodeText","Data":"，也就是 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"term"},{"Type":"NodeText","Data":"。记录词项和文本 id 的关系，于是上面的三段文本就变成了下面这样。"}]},{"ID":"20240623152846-fs1fx8y","Type":"NodeParagraph","Properties":{"id":"20240623152846-fs1fx8y","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-17191273278901.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-do9pndq","Type":"NodeTable","TableAligns":[0,0],"Properties":{"colgroup":"|","id":"20240623152846-do9pndq","updated":"20240623152856"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"term"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"文本 id"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"I"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"0, 1, 2"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"like"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"0"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"xiaobai"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"0, 1"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"follow"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"1"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"forward"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"2"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"the"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"2"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"video"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"2"}]}]}]},{"ID":"20240623152846-jwp0huk","Type":"NodeParagraph","Properties":{"id":"20240623152846-jwp0huk","updated":"20240623153355"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"当我们想要搜索"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"xiaobai"},{"Type":"NodeText","Data":"​ 的时候，只需要匹配到 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"xiaobai"},{"Type":"NodeText","Data":"​ 词项，就可以立马得到它所在的文档 id 是 0 和 1。但这有个问题，短短三句话，就已经有这么多词项了，要是换成三篇文档，那词项就会多得离谱，怎么在这么多的词项里匹配出 xiaobai 呢？挨个遍历的话，时间复杂度就是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"O(N)"},{"Type":"NodeText","Data":"​, 太低效了。"}]},{"ID":"20240623152846-f1rxm9u","Type":"NodeParagraph","Properties":{"id":"20240623152846-f1rxm9u","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"怎么办呢？我们可以将词项按字典序"},{"Type":"NodeText","Data":"从小到大排序，通过二分查找的方法，直接将时间复杂度优化为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"O(lgN)"},{"Type":"NodeText","Data":"​。就像下面这样。"}]},{"ID":"20240623152846-kziy8cd","Type":"NodeTable","TableAligns":[0,0],"Properties":{"colgroup":"|","id":"20240623152846-kziy8cd","updated":"20240623152856"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"term"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"文档 id"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"follow"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"1"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"forward"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"2"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"I"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"0, 1, 2"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"like"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"0"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"the"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"2"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"video"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"2"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"xiaobai"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"0, 1"}]}]}]},{"ID":"20240623152846-me75re4","Type":"NodeParagraph","Properties":{"id":"20240623152846-me75re4","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"我们将这堆排好序的词项，称为Term Dictionary"},{"Type":"NodeText","Data":"，而词项对应的文档 id 等信息的集合，就叫 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Posting List"},{"Type":"NodeText","Data":"。它们共同构成了一个用于搜索的数据结构，它就是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"倒排索引(Inverted Index)"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240623152846-dcjoctn","Type":"NodeParagraph","Properties":{"id":"20240623152846-dcjoctn","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-17191273278902.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-0c5hlqc","Type":"NodeBlockquote","Properties":{"id":"20240623152846-0c5hlqc","updated":"20240623152856"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240623152846-ppyov3g","Type":"NodeParagraph","Properties":{"id":"20240623152846-ppyov3g","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"注意，Posting List 其实还包含词频"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"词项在文本里的偏移量"},{"Type":"NodeText","Data":"等信息，但为了方便理解，我在上图中去掉了这部分内容。"}]}]},{"ID":"20240623152846-8sj25w2","Type":"NodeParagraph","Properties":{"id":"20240623152846-8sj25w2","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"但倒排索引还有个问题，Term Dictionary 数据量很大，放内存"},{"Type":"NodeText","Data":"并不现实，因此必须放在"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"磁盘"},{"Type":"NodeText","Data":"中。但查询磁盘是个较慢的过程。有优化手段吗？有，我们聊下 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Term Index"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240623152846-r8q6q2i","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-r8q6q2i","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"Term Index 是什么"}]},{"ID":"20240623152846-2hluewr","Type":"NodeParagraph","Properties":{"id":"20240623152846-2hluewr","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"我们可以发现，词项和词项之间，有些前缀"},{"Type":"NodeText","Data":"是一致的，比如 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"follow"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"forward"},{"Type":"NodeText","Data":"​ 前面的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"fo"},{"Type":"NodeText","Data":"​ 是一致的，如果我们将部分 term 前缀提取出来，像下图一样，就可以用更少的空间表达更多的 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"term"},{"Type":"NodeText","Data":"。基于这个原理，我们可以将 Term Dictionary 的"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"部分"},{"Type":"NodeText","Data":"词项提取出来，用这些 词项 的前缀信息，构建出一个"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"精简的目录树"},{"Type":"NodeText","Data":"。目录树的节点中存放这些词项在磁盘中的偏移量，也就是指向磁盘中的位置。这个目录树结构，体积小，适合放内存中，它就是所谓的 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Term Index"},{"Type":"NodeText","Data":"。可以用它来加速搜索。"}]},{"ID":"20240623152846-uihppad","Type":"NodeParagraph","Properties":{"id":"20240623152846-uihppad","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-17191273278903.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-w7xhnqf","Type":"NodeParagraph","Properties":{"id":"20240623152846-w7xhnqf","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"当我们需要查找某个词项的时候，只需要搜索 Term Index，就能快速获得词项在 Term Dictionary 中的大概位置。再跳转到 Term Dictionary，通过少量的检索，定位到词项内容。"}]},{"ID":"20240623152846-bcwgdvb","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-bcwgdvb","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"Stored Fields 是什么"}]},{"ID":"20240623152846-6onf634","Type":"NodeParagraph","Properties":{"id":"20240623152846-6onf634","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"到这里，搜索功能就有了。但有个问题，前面提到的倒排索引，搜索到的是文档 id"},{"Type":"NodeText","Data":"，我们还需要拿着这个 id 找到"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"文档内容本身"},{"Type":"NodeText","Data":"，才能返回给用户。因此还需要有个地方，存放完整的文档内容，它就是 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stored Fields"},{"Type":"NodeText","Data":"（行式存储）。"}]},{"ID":"20240623152846-bi7yxzb","Type":"NodeParagraph","Properties":{"id":"20240623152846-bi7yxzb","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-17191273278914.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-y2m0k8b","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-y2m0k8b","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"Doc Values 是什么"}]},{"ID":"20240623152846-gvme45k","Type":"NodeParagraph","Properties":{"id":"20240623152846-gvme45k","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"有了 id，我们就能从 Stored Fields 中取出文档内容。"}]},{"ID":"20240623152846-5d7eqop","Type":"NodeParagraph","Properties":{"id":"20240623152846-5d7eqop","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-17191273278915.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-wwrhzpu","Type":"NodeParagraph","Properties":{"id":"20240623152846-wwrhzpu","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"但用户经常需要根据某个字段排序文档，比如按时间排序或商品价格排序。但问题就来了，这些字段散落在文档里。也就是说，我们需要先获取 Stored Fields 里的文档，再提取出内部字段进行排序。也不是说不行。但其实有更高效的做法。我们可以用空间换时间"},{"Type":"NodeText","Data":"的思路，再构造一个"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"列式存储"},{"Type":"NodeText","Data":"结构，将散落在各个文档的某个字段，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"集中"},{"Type":"NodeText","Data":"存放，当我们想对某个字段排序的时候，就只需要将这些集中存放的字段一次性读取出来，就能做到针对性地进行排序。这个列式存储结构，就是所谓的 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Doc Values"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240623152846-yslp1wx","Type":"NodeParagraph","Properties":{"id":"20240623152846-yslp1wx","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-17191273278916.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-w8srgs8","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-w8srgs8","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"segment"}]},{"ID":"20240623152846-208wdu4","Type":"NodeParagraph","Properties":{"id":"20240623152846-208wdu4","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"在上文中，我们介绍了四种关键的结构：倒排索引"},{"Type":"NodeText","Data":"用于搜索，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Term Index"},{"Type":"NodeText","Data":" 用于加速搜索，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stored Fields"},{"Type":"NodeText","Data":" 用于存放文档的原始信息，以及 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Doc Values"},{"Type":"NodeText","Data":" 用于排序和聚合。这些结构共同组成了一个"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"复合"},{"Type":"NodeText","Data":"文件，也就是所谓的\""},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"segment"},{"Type":"NodeText","Data":"\", 它是一个具备"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"完整搜索功能的最小单元"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240623152846-xda7l7l","Type":"NodeParagraph","Properties":{"id":"20240623152846-xda7l7l","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-17191273278917.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-545k6db","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-545k6db","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"lucene 是什么"}]},{"ID":"20240623152846-jf2q3v3","Type":"NodeParagraph","Properties":{"id":"20240623152846-jf2q3v3","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"我们可以用多个文档生成一份 segment，如果"},{"Type":"NodeText","Data":"新增文档时，还是写入到这份 segment，那就得同时更新 segment 内部的多个数据结构，这样并发读写时性能肯定会受影响。那怎么办呢？我们定个规矩。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"segment 一旦生成，则不能再被修改"},{"Type":"NodeText","Data":"。如果还有新的文档要写入，那就生成新的 segment。这样"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"老的 segment 只需要负责读，写则生成新的 segment"},{"Type":"NodeText","Data":"。同时保证了读和写的性能。"}]},{"ID":"20240623152846-i6g76j4","Type":"NodeParagraph","Properties":{"id":"20240623152846-i6g76j4","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"但 segment 变多了，我们怎么知道要搜索的数据在哪个 segment 里呢？问题不大，并发同时读"},{"Type":"NodeText","Data":"多个 segment 就好了。"}]},{"ID":"20240623152846-o2qxdcy","Type":"NodeParagraph","Properties":{"id":"20240623152846-o2qxdcy","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-17191273278918.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-mb3v5ni","Type":"NodeParagraph","Properties":{"id":"20240623152846-mb3v5ni","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"但这也引入了新问题，随着数据量增大，segment 文件越写越多，文件句柄被耗尽那是指日可待啊。是的，但这个也好解决，我们可以不定期合并多个小 segment，变成一个大 segment，也就是段合并"},{"Type":"NodeText","Data":"(segment merging)。这样文件数量就可控了。"}]},{"ID":"20240623152846-w02fe7f","Type":"NodeParagraph","Properties":{"id":"20240623152846-w02fe7f","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-17191273278919.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-pvcmwyj","Type":"NodeParagraph","Properties":{"id":"20240623152846-pvcmwyj","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"到这里，上面提到的多个 segment，就共同构成了一个单机文本检索库"},{"Type":"NodeText","Data":"，它其实就是非常有名的开源基础搜索库 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"lucene"},{"Type":"NodeText","Data":"。不少知名搜索引擎都是基于它构建的，比如我们今天介绍的 ES。但这个 lucene 属实过于简陋，像什么高性能，高扩展性，高可用，它是一个都不沾。我们来看下怎么优化它。"}]},{"ID":"20240623152846-auty3fh","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-auty3fh","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"高性能"}]},{"ID":"20240623152846-1xky0w7","Type":"NodeParagraph","Properties":{"id":"20240623152846-1xky0w7","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"lucene 作为一个搜索库，可以写入大量数据，并对外提供搜索能力。多个调用方同时读写"},{"Type":"NodeText","Data":"同一个 lucene 必然导致争抢计算资源。抢不到资源的一方就得等待，这不纯纯浪费时间吗！有解决方案吗？有！首先是对写入 lucene 的数据进行分类，比如体育新闻和八卦新闻数据算两类，每一类是一个 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Index Name"},{"Type":"NodeText","Data":"，然后根据 Index Name 新增 lucene 的数量，将不同类数据写入到不同的 lucene 中，读取数据时，根据需要搜索不同的 Index Name 。这就大大降低了单个 lucene 的压力。"}]},{"ID":"20240623152846-brqdkrx","Type":"NodeParagraph","Properties":{"id":"20240623152846-brqdkrx","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789110.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-s46laih","Type":"NodeParagraph","Properties":{"id":"20240623152846-s46laih","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"但单个 Index Name 内数据依然可能过多，于是可以将单个 Index Name 的同类数据，拆成好几份，每份是一个 shard 分片"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"每个 shard 分片本质上就是一个独立的 lucene 库"},{"Type":"NodeText","Data":"。这样我们就可以将读写操作分摊到多个 分片 中去，大大降低了争抢，提升了系统性能。"}]},{"ID":"20240623152846-d5aof4o","Type":"NodeParagraph","Properties":{"id":"20240623152846-d5aof4o","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789111.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-dwa4za6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-dwa4za6","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"高扩展性"}]},{"ID":"20240623152846-1ugbv5y","Type":"NodeParagraph","Properties":{"id":"20240623152846-1ugbv5y","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"随着 分片 变多，如果 分片 都在同一台机器上的话，就会导致单机 cpu 和内存过高，影响整体系统性能。"}]},{"ID":"20240623152846-76k73cm","Type":"NodeParagraph","Properties":{"id":"20240623152846-76k73cm","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"于是我们可以申请更多的机器，将 分片 分散"},{"Type":"NodeText","Data":"部署在多台机器上，这每一台机器，就是一个 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Node"},{"Type":"NodeText","Data":"。我们可以通过增加 Node 缓解机器 cpu 过高带来的性能问题。"}]},{"ID":"20240623152846-ijyrc4g","Type":"NodeParagraph","Properties":{"id":"20240623152846-ijyrc4g","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789212.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-mdsmpti","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-mdsmpti","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"高可用"}]},{"ID":"20240623152846-b3sk2qe","Type":"NodeParagraph","Properties":{"id":"20240623152846-b3sk2qe","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"到这里，问题又又来了，如果其中一个 Node 挂了，那 Node 里所有分片 都无法对外提供服务了。我们需要保证服务的高可用。有解决方案吗？有，我们可以给 分片 多加几个副本"},{"Type":"NodeText","Data":"。将 分片 分为 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Primary shard"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Replica shard"},{"Type":"NodeText","Data":"，也就是主分片和副本分片 。主分片会将数据同步给副本分片，副本分片"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"既可以"},{"Type":"NodeText","Data":"同时提供读操作，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"还能"},{"Type":"NodeText","Data":"在主分片挂了的时候，升级成新的主分片让系统保持正常运行，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"提高性能"},{"Type":"NodeText","Data":"的同时，还保证了系统的"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"高可用"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240623152846-dvwdrdt","Type":"NodeParagraph","Properties":{"id":"20240623152846-dvwdrdt","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789213.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-8205lkf","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-8205lkf","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"Node 角色分化"}]},{"ID":"20240623152846-65zueky","Type":"NodeParagraph","Properties":{"id":"20240623152846-65zueky","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"搜索架构需要支持的功能很多，既要负责管理集群"},{"Type":"NodeText","Data":"，又要"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"存储管理数据"},{"Type":"NodeText","Data":"，还要"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"处理客户端的搜索请求"},{"Type":"NodeText","Data":"。如果每个 Node "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"都"},{"Type":"NodeText","Data":"支持这几类功能，那当集群有数据压力，需要扩容 Node 时，就会"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"顺带"},{"Type":"NodeText","Data":"把其他能力也一起扩容，但其实其他能力完全够用，不需要跟着扩容，这就有些"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"浪费"},{"Type":"NodeText","Data":"了。因此我们可以将这几类功能拆开，给集群里的 Node 赋予"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"角色身份"},{"Type":"NodeText","Data":"，不同的角色负责不同的功能。比如负责管理集群的，叫"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"主节点(Master Node)*"},{"Type":"NodeTextMark","TextMarkType":"strong em","TextMarkTextContent":"， 负责存储管理数据的，叫*"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据节点(Data Node)*"},{"Type":"NodeTextMark","TextMarkType":"strong em","TextMarkTextContent":"， 负责接受客户端搜索查询请求的叫*"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"协调节点(Coordinate Node)*"},{"Type":"NodeTextMark","TextMarkType":"strong em","TextMarkTextContent":"。集群规模小的时候，一个 Node 可以*"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"同时"},{"Type":"NodeText","Data":"充当多个角色，随着集群规模变大，可以让一个 Node 一个角色。"}]},{"ID":"20240623152846-nl704au","Type":"NodeParagraph","Properties":{"id":"20240623152846-nl704au","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789314.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-ctp3k81","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-ctp3k81","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"去中心化"}]},{"ID":"20240623152846-7b5fzft","Type":"NodeParagraph","Properties":{"id":"20240623152846-7b5fzft","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"上面提到了主节点，那就意味着还有个选主"},{"Type":"NodeText","Data":"的过程，但现在每个 Node 都是独立的，需要有个机制协调 Node 间的数据。我们很容易想到，可以像 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"kafka"},{"Type":"NodeText","Data":"​ 那样引入一个中心节点 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Zookeeper"},{"Type":"NodeText","Data":"​，但如果不想引入新节点，还有其他更轻量的方案吗？有，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"去中心化"},{"Type":"NodeText","Data":"。我们可以在 Node 间引入协调模块，用"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"类似一致性算法 Raft"},{"Type":"NodeText","Data":" 的方式，在节点间互相同步数据，让所有 Node 看到的集群数据状态都是一致的。这样，集群内的 Node 就能参与选主过程，还能了解到集群内某个 Node 是不是挂了等信息。"}]},{"ID":"20240623152846-x8t7lql","Type":"NodeParagraph","Properties":{"id":"20240623152846-x8t7lql","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789315.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-vxrua8m","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-vxrua8m","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"ES 是什么？"}]},{"ID":"20240623152846-xhcpc31","Type":"NodeParagraph","Properties":{"id":"20240623152846-xhcpc31","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"好了，到这里，当初那个简陋的 lucene，就成了一个高性能，高扩展性，高可用，支持持久化的分布式搜索引擎，它就是我们常说的 elastic search"},{"Type":"NodeText","Data":"，简称 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"ES"},{"Type":"NodeText","Data":"。它对外提供 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"http"},{"Type":"NodeText","Data":"​ 接口，任何语言的客户端都可以通过 HTTP 接口接入 es，实现对数据的增删改查。从架构角度来看，es 给了一套方案，告诉我们如何让一个"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"单机系统 lucene"},{"Type":"NodeText","Data":" 变成一个"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"分布式系统"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240623152846-cfo81t6","Type":"NodeParagraph","Properties":{"id":"20240623152846-cfo81t6","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789316.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-ayihmnv","Type":"NodeParagraph","Properties":{"id":"20240623152846-ayihmnv","updated":"20240623161042"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"按这个思路，是不是也可以将 lucene 改成其他单机系统，比如"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"mysql"},{"Type":"NodeText","Data":"​ 数据库，或者专门做向量检索的单机引擎 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"faiss"},{"Type":"NodeText","Data":"​？那以后再来个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"elastic mysql"},{"Type":"NodeText","Data":"​ 或者 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"elastic faiss"},{"Type":"NodeText","Data":"​ 是不是就不那么意外了，大厂内卷晋升或者下一个明星开源大项目的小提示就给到这里了。"}]},{"ID":"20240623152846-n4hd29f","Type":"NodeParagraph","Properties":{"id":"20240623152846-n4hd29f","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"看完 es 的架构，是不是觉得有些似曾相识"},{"Type":"NodeText","Data":"？没错，我说的就是我前两期聊过的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"kafka"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20240623152846-v0uz3l4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-v0uz3l4","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"ES 和 Kafka 的架构差异"}]},{"ID":"20240623152846-8q41xyu","Type":"NodeParagraph","Properties":{"id":"20240623152846-8q41xyu","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果你不了解 kakfa 的架构，可以看下我之前写的《Kafka 是什么？"},{"Type":"NodeText","Data":"》。然后你就会发现："}]},{"ID":"20240623152846-3mgvfwy","Type":"NodeList","ListData":{},"Properties":{"id":"20240623152846-3mgvfwy","updated":"20240623152856"},"Children":[{"ID":"20240623152846-wnkhban","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-wnkhban","updated":"20240623152846"},"Children":[{"ID":"20240623152846-5rwjq4m","Type":"NodeParagraph","Properties":{"id":"20240623152846-5rwjq4m","updated":"20240623152846"},"Children":[{"Type":"NodeText","Data":"**• es 中用于分类消息的 **"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Index Name"},{"Type":"NodeText","Data":"​，其实就是 kafka 的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"topic"},{"Type":"NodeText","Data":"​。"}]}]},{"ID":"20240623152846-jcx0ork","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-jcx0ork","updated":"20240623152846"},"Children":[{"ID":"20240623152846-dnpo3d4","Type":"NodeParagraph","Properties":{"id":"20240623152846-dnpo3d4","updated":"20240623152846"},"Children":[{"Type":"NodeText","Data":"**• es 中用于对 Index Name 数据分片的 **"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Shard"},{"Type":"NodeText","Data":"​，其实就是 kafka 中拆分 topic 数据的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Partition"},{"Type":"NodeText","Data":"​。"}]}]},{"ID":"20240623152846-lnuoyyt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-lnuoyyt","updated":"20240623152846"},"Children":[{"ID":"20240623152846-27t09f5","Type":"NodeParagraph","Properties":{"id":"20240623152846-27t09f5","updated":"20240623152846"},"Children":[{"Type":"NodeText","Data":"**• es 中用于分散部署多个 shard 的 **"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Node"},{"Type":"NodeText","Data":"​, 其实就相当于 kafka 中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"broker"},{"Type":"NodeText","Data":"​。"}]}]}]},{"ID":"20240623152846-53htbu8","Type":"NodeParagraph","Properties":{"id":"20240623152846-53htbu8","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"es 的架构跟 kafka 以及我们上期聊过的 rocketMQ 都非常相似，果然优秀的架构都是相似的，丑陋的架构各有各的丑陋"},{"Type":"NodeText","Data":"。学一套优秀架构，就等于弄通了好几个中间件原理，简直血赚！"}]},{"ID":"20240623152846-mfu4b4e","Type":"NodeParagraph","Properties":{"id":"20240623152846-mfu4b4e","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"现在我们了解完 es 的架构，再来用两个实际例子将这些概念串起来，浅看下它的工作原理。"}]},{"ID":"20240623152846-j6xokqp","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-j6xokqp","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"ES 的写入流程"}]},{"ID":"20240623152846-y1rfinp","Type":"NodeList","ListData":{},"Properties":{"id":"20240623152846-y1rfinp","updated":"20240623152856"},"Children":[{"ID":"20240623152846-aqb08gd","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-aqb08gd","updated":"20240623152846"},"Children":[{"ID":"20240623152846-ubz85ds","Type":"NodeParagraph","Properties":{"id":"20240623152846-ubz85ds","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 当客户端应用"},{"Type":"NodeText","Data":"发起数据"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"写入"},{"Type":"NodeText","Data":"请求，请求会先发到集群中"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"协调节点"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20240623152846-iky81l2","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-iky81l2","updated":"20240623152846"},"Children":[{"ID":"20240623152846-cy26k7s","Type":"NodeParagraph","Properties":{"id":"20240623152846-cy26k7s","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 协调节点根据 hash 路由，判断数据该写入到哪个数据节点"},{"Type":"NodeText","Data":"里的哪个"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"分片"},{"Type":"NodeText","Data":"(Shard)，找到"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"主分片"},{"Type":"NodeText","Data":"并写入。分片底层是 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"lucene"},{"Type":"NodeText","Data":"，所以最终是将数据写入到 lucene 库里的 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"segment"},{"Type":"NodeText","Data":" 内，将数据固化为"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"倒排索引"},{"Type":"NodeText","Data":"和 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stored Fields"},{"Type":"NodeText","Data":" 以及 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Doc Values"},{"Type":"NodeText","Data":" 等多种结构。"}]}]},{"ID":"20240623152846-s2jpyvp","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-s2jpyvp","updated":"20240623152846"},"Children":[{"ID":"20240623152846-l63bb37","Type":"NodeParagraph","Properties":{"id":"20240623152846-l63bb37","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 主分片 写入成功后会将数据同步给 副本分片"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20240623152846-vat8whs","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-vat8whs","updated":"20240623152846"},"Children":[{"ID":"20240623152846-yp6g3h0","Type":"NodeParagraph","Properties":{"id":"20240623152846-yp6g3h0","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 副本分片 写入完成后，主分片"},{"Type":"NodeText","Data":"会响应协调节点一个 ACK，意思是写入完成。"}]}]},{"ID":"20240623152846-k3fnhb8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-k3fnhb8","updated":"20240623152846"},"Children":[{"ID":"20240623152846-hmpa3hu","Type":"NodeParagraph","Properties":{"id":"20240623152846-hmpa3hu","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 最后，协调节点"},{"Type":"NodeText","Data":"响应"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"客户端应用"},{"Type":"NodeText","Data":"写入完成。"}]}]}]},{"ID":"20240623152846-4451jpo","Type":"NodeParagraph","Properties":{"id":"20240623152846-4451jpo","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789317.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-1ibe2al","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-1ibe2al","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"ES 的搜索流程"}]},{"ID":"20240623152846-soje63s","Type":"NodeParagraph","Properties":{"id":"20240623152846-soje63s","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"ES 的搜索流程分为两个阶段：分别是查询阶段（Query Phase）"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"获取阶段（Fetch Phase）"},{"Type":"NodeText","Data":" 我们分别看下。"}]},{"ID":"20240623152846-y1ie6m0","Type":"NodeParagraph","Properties":{"id":"20240623152846-y1ie6m0","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789318.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-d2ht91o","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240623152846-d2ht91o","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"查询阶段。"}]},{"ID":"20240623152846-yzi8cxv","Type":"NodeList","ListData":{},"Properties":{"id":"20240623152846-yzi8cxv","updated":"20240623152856"},"Children":[{"ID":"20240623152846-se36fpm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-se36fpm","updated":"20240623152846"},"Children":[{"ID":"20240623152846-usgzndi","Type":"NodeParagraph","Properties":{"id":"20240623152846-usgzndi","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 当客户端应用"},{"Type":"NodeText","Data":"发起"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"搜索"},{"Type":"NodeText","Data":"请求，请求会先发到集群中的"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"协调节点"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20240623152846-38kpqcc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-38kpqcc","updated":"20240623152846"},"Children":[{"ID":"20240623152846-gecvhpl","Type":"NodeParagraph","Properties":{"id":"20240623152846-gecvhpl","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 协调节点根据 **"},{"Type":"NodeTextMark","TextMarkType":"strong strong","TextMarkTextContent":"index name"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"的信息，可以了解到 index name 被分为了几个"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong strong","TextMarkTextContent":"分片"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"，以及这些分片 分散哪个"},{"Type":"NodeText","Data":"数据节点**上，将请求转发到这些数据节点的 分片 上面。"}]}]},{"ID":"20240623152846-bznmv98","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-bznmv98","updated":"20240623152846"},"Children":[{"ID":"20240623152846-gw18d5u","Type":"NodeParagraph","Properties":{"id":"20240623152846-gw18d5u","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 搜索请求到达分片后，分片 底层的 lucene 库会并发"},{"Type":"NodeText","Data":"搜索多个 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"segment"},{"Type":"NodeText","Data":"，利用每个 segment 内部的"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"倒排索引"},{"Type":"NodeText","Data":"获取到对应"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"文档 id"},{"Type":"NodeText","Data":"，并结合 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"doc values"},{"Type":"NodeText","Data":" 获得"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"排序信息"},{"Type":"NodeText","Data":"。分片将结果聚合返回给"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"协调节点"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20240623152846-hx7dmn7","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-hx7dmn7","updated":"20240623152846"},"Children":[{"ID":"20240623152846-op2i1xg","Type":"NodeParagraph","Properties":{"id":"20240623152846-op2i1xg","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 协调节点"},{"Type":"NodeText","Data":"对多个分片中拿到的数据进行"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"一次排序聚合"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"舍弃"},{"Type":"NodeText","Data":"大部分不需要的数据。"}]}]}]},{"ID":"20240623152846-h6d5h0p","Type":"NodeParagraph","Properties":{"id":"20240623152846-h6d5h0p","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789319.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-uudwrjf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240623152846-uudwrjf","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"获取阶段。"}]},{"ID":"20240623152846-bigib2j","Type":"NodeList","ListData":{},"Properties":{"id":"20240623152846-bigib2j","updated":"20240623152856"},"Children":[{"ID":"20240623152846-1i57cv7","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-1i57cv7","updated":"20240623152846"},"Children":[{"ID":"20240623152846-59ireml","Type":"NodeParagraph","Properties":{"id":"20240623152846-59ireml","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 协调节点"},{"Type":"NodeText","Data":"再次拿着"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"文档 id"},{"Type":"NodeText","Data":" 请求"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据节点"},{"Type":"NodeText","Data":"里的 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"分片"},{"Type":"NodeText","Data":"，分片 底层的 lucene 库会从 segment 内的 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stored Fields"},{"Type":"NodeText","Data":" 中取出"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"完整文档内容"},{"Type":"NodeText","Data":"，并返回给协调节点。"}]}]},{"ID":"20240623152846-3ruwhoz","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-3ruwhoz","updated":"20240623152846"},"Children":[{"ID":"20240623152846-meexs0c","Type":"NodeParagraph","Properties":{"id":"20240623152846-meexs0c","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 协调节点"},{"Type":"NodeText","Data":"最终将数据结果返回给"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"客户端"},{"Type":"NodeText","Data":"。完成整个搜索过程。"}]}]}]},{"ID":"20240623152846-f14ubj3","Type":"NodeParagraph","Properties":{"id":"20240623152846-f14ubj3","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/640-171912732789320.webp?lastModify=1719127444"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240623152846-16ig0uk","Type":"NodeParagraph","Properties":{"id":"20240623152846-16ig0uk","updated":"20240623152856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"现在大家通了吗？"}]},{"ID":"20240623152846-zgtdoz7","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240623152846-zgtdoz7","updated":"20240623152856"},"Children":[{"Type":"NodeText","Data":"总结"}]},{"ID":"20240623152846-x36bhg7","Type":"NodeList","ListData":{},"Properties":{"id":"20240623152846-x36bhg7","updated":"20240623152856"},"Children":[{"ID":"20240623152846-kooi28g","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-kooi28g","updated":"20240623152846"},"Children":[{"ID":"20240623152846-royelte","Type":"NodeParagraph","Properties":{"id":"20240623152846-royelte","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• lucene 是 es 底层的单机文本检索库，它由多个 segment 组成，每个 segment 其实是由倒排索引、Term Index、Stored Fields 和 Doc Values 组成的具备完整搜索功能的最小单元。"}]}]},{"ID":"20240623152846-kf1yrqt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-kf1yrqt","updated":"20240623152846"},"Children":[{"ID":"20240623152846-ek4pctr","Type":"NodeParagraph","Properties":{"id":"20240623152846-ek4pctr","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 将数据分类，存储在 es 内不同的 Index Name 中。"}]}]},{"ID":"20240623152846-5yl18qf","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-5yl18qf","updated":"20240623152846"},"Children":[{"ID":"20240623152846-13nr4lq","Type":"NodeParagraph","Properties":{"id":"20240623152846-13nr4lq","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 为了防止 Index Name 内数据过多，引入了 Shard 的概念对数据进行分片。提升了性能。"}]}]},{"ID":"20240623152846-1ehklvv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-1ehklvv","updated":"20240623152846"},"Children":[{"ID":"20240623152846-ouzmgqe","Type":"NodeParagraph","Properties":{"id":"20240623152846-ouzmgqe","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 将多个 shard 分布在多个 Node 上，根据需要对 Node 进行扩容，提升扩展性。"}]}]},{"ID":"20240623152846-4wfs419","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-4wfs419","updated":"20240623152846"},"Children":[{"ID":"20240623152846-xikdwgh","Type":"NodeParagraph","Properties":{"id":"20240623152846-xikdwgh","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 将 shard 分为主分片和副本分片，主分片挂了之后由副本分片顶上，提升系统的可用性。"}]}]},{"ID":"20240623152846-dhfn1t6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-dhfn1t6","updated":"20240623152846"},"Children":[{"ID":"20240623152846-q75wlg0","Type":"NodeParagraph","Properties":{"id":"20240623152846-q75wlg0","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• 对 Node 进行角色分化，提高系统的性能和资源利用率，同时简化扩展和维护。"}]}]},{"ID":"20240623152846-nha5f4x","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240623152846-nha5f4x","updated":"20240623152846"},"Children":[{"ID":"20240623152846-c45ukxs","Type":"NodeParagraph","Properties":{"id":"20240623152846-c45ukxs","updated":"20240623152846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"• es 和 kafka 的架构非常像，可以类比学习。"}]}]}]}]}