{"ID":"20231109220346-il4irc9","Spec":"1","Type":"NodeDocument","Properties":{"id":"20231109220346-il4irc9","title":"中间件实例","updated":"20231109220757"},"Children":[{"ID":"20231109220353-8ybp74h","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231109220353-8ybp74h","updated":"20231109220755"},"Children":[{"Type":"NodeText","Data":"捕获panic "}]},{"ID":"20231109220756-rd3kdkp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231109220756-rd3kdkp","updated":"20231109220757"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// RecoverHandler 中间件通过 defer 来捕获 panic ，然后返回 500 状态码\nfunc RecoverHandler(next http.Handler) http.Handler {\n\tfn := func(w http.ResponseWriter, r *http.Request) {\n\t\tdefer func() {\n\t\t\tif r := recover(); r != nil {\n\t\t\t\tlog.Println(\"Recover from painc %+v\",r)\n\t\t\t\thttp.Error(w, http.StatusText(500),500)\n\t\t\t}\n\t\t}()\n\t\tnext.ServeHTTP(w,r)\n\t}\n\treturn http.HandlerFunc(fn)\n}\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231109220346-b4i2wgj","Type":"NodeParagraph","Properties":{"id":"20231109220346-b4i2wgj","updated":"20231109220346"}}]}