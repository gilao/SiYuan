{"ID":"20230926213729-032jjm6","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f4ac","id":"20230926213729-032jjm6","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230926213729-032jjm6\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230926213852-71k0lcy\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230926225031-g3yav5u\u0026quot;,\u0026quot;scrollTop\u0026quot;:218,\u0026quot;focusId\u0026quot;:\u0026quot;20230926213852-71k0lcy\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;","tags":"Dockerfile","title":"CMD 和 ENTRYPOINT 区别","updated":"20230926225033"},"Children":[{"ID":"20230926213852-71k0lcy","Type":"NodeParagraph","Properties":{"id":"20230926213852-71k0lcy","updated":"20230926214041"},"Children":[{"Type":"NodeText","Data":"CMD 指令和 ENTRYPOINT指令的作用都是为镜像指定容器后的命令，那么他们分别有何优点呢？"}]},{"ID":"20230926214041-c4aldj5","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230926214041-c4aldj5","updated":"20230926214110"},"Children":[{"Type":"NodeText","Data":"CMD"}]},{"ID":"20230926214111-9enrl9m","Type":"NodeParagraph","Properties":{"id":"20230926214111-9enrl9m","updated":"20230926214116"},"Children":[{"Type":"NodeText","Data":"支持三种格式"}]},{"ID":"20230926214118-u74j1s4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926214118-u74j1s4","updated":"20230926214126"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"  CMD [\"executable\",\"param1\",\"param2\"] 使用 exec 执行，推荐方式；\n  CMD command param1 param2 在 /bin/sh 中执行，提供给需要交互的应用；\n  CMD [\"param1\",\"param2\"] 提供给 ENTRYPOINT 的默认参数；\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926213729-8rv3yg7","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20230926213729-8rv3yg7","updated":"20230926214559"},"Children":[{"ID":"20230926214333-be9irmv","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20230926214333-be9irmv","updated":"20230926214333"},"Children":[{"ID":"20230926214333-b4l99ky","Type":"NodeParagraph","Properties":{"id":"20230926214333-b4l99ky","updated":"20230926214500"},"Children":[{"Type":"NodeText","Data":"指定启动容器时执行的命令，"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"每个Dockerfile 只能有一条CMD命令，如果指定了多条命令，只有最后一条会被执行"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20230926214504-jq7tyug","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20230926214504-jq7tyug","updated":"20230926214559"},"Children":[{"ID":"20230926214504-lydba6u","Type":"NodeParagraph","Properties":{"id":"20230926214504-lydba6u","updated":"20230926214559"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-info-background); color: var(--b3-font-color5);"},"TextMarkType":"text strong","TextMarkTextContent":"如果用户启动容器时候指定了运行docker run 的命令，则会覆盖掉 CMD 指定的命令"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-info-background); color: var(--b3-font-color5);\"}"}]}]}]},{"ID":"20230926214501-nd5wm4q","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230926214501-nd5wm4q","updated":"20230926214634"},"Children":[{"Type":"NodeText","Data":"ENTRYPOINT"}]},{"ID":"20230926214635-9497fdv","Type":"NodeParagraph","Properties":{"id":"20230926214635-9497fdv","updated":"20230926214645"},"Children":[{"Type":"NodeText","Data":"两种格式："}]},{"ID":"20230926214646-vz2s6xy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926214646-vz2s6xy","updated":"20230926214653"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"ENTRYPOINT [\"executable\", \"param1\", \"param2\"]\n\nENTRYPOINT command param1 param2（shell中执行）。\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926214654-6z6j3ol","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20230926214654-6z6j3ol","updated":"20230926214710"},"Children":[{"ID":"20230926214710-7hbh1pp","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20230926214710-7hbh1pp","updated":"20230926214710"},"Children":[{"ID":"20230926214710-asfkcz5","Type":"NodeParagraph","Properties":{"id":"20230926214710-asfkcz5","updated":"20230926214721"},"Children":[{"Type":"NodeText","Data":"配置容器启动后执行的命令，并且不可被 docker run 提供的参数覆盖。"}]}]},{"ID":"20230926214721-0fkub9w","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20230926214721-0fkub9w"},"Children":[{"ID":"20230926214721-7ynxr3d","Type":"NodeParagraph","Properties":{"id":"20230926214721-7ynxr3d","updated":"20230926214731"},"Children":[{"Type":"NodeText","Data":"每个 Dockerfile 中只能有一个 ENTRYPOINT，当指定多个时，只有最后一个起效。"}]}]}]},{"ID":"20230926214731-4qr8y6n","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230926214731-4qr8y6n","updated":"20230926214824"},"Children":[{"Type":"NodeText","Data":"共同点"}]},{"ID":"20230926214825-az3fv0e","Type":"NodeParagraph","Properties":{"id":"20230926214825-az3fv0e","updated":"20230926214832"},"Children":[{"Type":"NodeText","Data":"从上面的说明，我们可以看到有两个共同点："}]},{"ID":"20230926214834-koisi46","Type":"NodeParagraph","Properties":{"id":"20230926214834-koisi46","updated":"20230926214847"},"Children":[{"Type":"NodeText","Data":"1、都可以指定shell或exec函数调用的方式执行命令；\n2、当存在多个CMD指令或ENTRYPOINT指令时，只有最后一个生效；"}]},{"ID":"20230926214848-546fgb5","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230926214848-546fgb5","updated":"20230926214853"},"Children":[{"Type":"NodeText","Data":"差异"}]},{"ID":"20230926214858-70p7xsy","Type":"NodeParagraph","Properties":{"id":"20230926214858-70p7xsy","updated":"20230926214858"},"Children":[{"Type":"NodeText","Data":"差异1：CMD指令指定的容器启动时命令可以被docker run指定的命令覆盖，\n\t  而ENTRYPOINT指令指定的命令不能被覆盖，而是将docker run指定的参数当做ENTRYPOINT指定命令的参数。"}]},{"ID":"20230926214858-il2nsv4","Type":"NodeParagraph","Properties":{"id":"20230926214858-il2nsv4","updated":"20230926214858"},"Children":[{"Type":"NodeText","Data":"差异2：CMD指令可以为ENTRYPOINT指令设置默认参数，而且可以被docker run指定的参数覆盖；"}]},{"ID":"20230926215030-rtsye28","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230926215030-rtsye28","updated":"20230926215821"},"Children":[{"Type":"NodeText","Data":"差异1 举例"}]},{"ID":"20230926215821-m42etnb","Type":"NodeParagraph","Properties":{"id":"20230926215821-m42etnb","updated":"20230926215830"},"Children":[{"Type":"NodeText","Data":"CMD指令指定的容器启动时命令可以被docker run指定的命令覆盖；\n而ENTRYPOINT指令指定的命令不能被覆盖，而是将docker run指定的参数当做ENTRYPOINT指定命令的参数。"}]},{"ID":"20230926215832-19irumj","Type":"NodeParagraph","Properties":{"id":"20230926215832-19irumj","updated":"20230926215944"},"Children":[{"Type":"NodeText","Data":"下面有个命名为startup的可执行shell脚本，其功能就是输出命令行参数而已。内容如下"}]},{"ID":"20230926215945-jk632ov","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926215945-jk632ov","updated":"20230926215953"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"#!/bin/bash\n\necho \"in startup, args: $@\"\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926215954-z5ro8c8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230926215954-z5ro8c8","updated":"20230926220203"},"Children":[{"Type":"NodeText","Data":"通过CMD知指定容器启动时命令"}]},{"ID":"20230926223011-t9lbugk","Type":"NodeParagraph","Properties":{"id":"20230926223011-t9lbugk","updated":"20230926223012"},"Children":[{"Type":"NodeText","Data":"现在我们新建一个Dockerfile文件，其将startup脚本拷贝到容器的/opt目录下，并通过CMD指令指定容器启动时运行该startup脚本。其内容如下，"}]},{"ID":"20230926223013-qh4qm5l","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926223013-qh4qm5l","updated":"20230926223403"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"ZG9ja2VyZmlsZQ=="},{"Type":"NodeCodeBlockCode","Data":"FROM ubuntu:14.04\nMAINTAINER 15715714997@163.com\n\nADD startup /opt\nRUN chmod a+x /opt/startup\n\nCMD [\"/opt/startup\"]\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926223425-xgry6am","Type":"NodeParagraph","Properties":{"id":"20230926223425-xgry6am","updated":"20230926223438"},"Children":[{"Type":"NodeText","Data":"然后我们通过运行docker build命令生成test:latest镜像，"}]},{"ID":"20230926223434-9ouer8p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926223434-9ouer8p","updated":"20230926223455"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"lienhua34@test$ sudo docker build -t test .\nSending build context to Docker daemon 4.096 kB\nStep 1 : FROM ubuntu:14.04\n ---\u003e a5a467fddcb8\nStep 2 : MAINTAINER lienhua34@163.com\n ---\u003e Using cache\n ---\u003e 332259a92e74\nStep 3 : ADD startup /opt\n ---\u003e 3c26b6a8ef1b\nRemoving intermediate container 87022b0f30c5\nStep 4 : RUN chmod a+x /opt/startup\n ---\u003e Running in 4518ba223345\n ---\u003e 04d9b53d6148\nRemoving intermediate container 4518ba223345\nStep 5 : CMD /opt/startup\n ---\u003e Running in 64a07c2f5e64\n ---\u003e 18a2d5066346\nRemoving intermediate container 64a07c2f5e64\nSuccessfully built 18a2d5066346\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926223517-nmgq7nx","Type":"NodeParagraph","Properties":{"id":"20230926223517-nmgq7nx","updated":"20230926223523"},"Children":[{"Type":"NodeText","Data":"然后使用docker run启动两个test:latest镜像的容器\n第一个docker run命令没有指定容器启动时命令，\n第二个docker run命令指定了容器启动时的命令为“/bin/bash -c ‘echo Hello’”，"}]},{"ID":"20230926223552-ale0mpz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926223552-ale0mpz","updated":"20230926223941"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"lienhua34@test$ sudo docker run -ti --rm=true test\nin startup, args: \nlienhua34@test$ sudo docker run -ti --rm=true test /bin/bash -c 'echo Hello'\nHello\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926223946-ougau4z","Type":"NodeParagraph","Properties":{"id":"20230926223946-ougau4z","updated":"20230926224345"},"Children":[{"Type":"NodeText","Data":"从上面运行结果可以看到，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"docker run命令启动容器时指定的运行命令覆盖了Dockerfile文件中CMD指令指定的命令。例如上边案例中，/bin/bash -c ‘echo hello’ 整体被当成ENTRYPOINT指令的参数了"}]},{"ID":"20230926224333-ezby2v1","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230926224333-ezby2v1","updated":"20230926224456"},"Children":[{"Type":"NodeText","Data":"差异2 举例"}]},{"ID":"20230926224456-ynnq3kn","Type":"NodeParagraph","Properties":{"id":"20230926224456-ynnq3kn","updated":"20230926224502"},"Children":[{"Type":"NodeText","Data":"CMD指令可以为ENTRYPOINT指令设置默认参数，而且可以被docker run指定的参数覆盖；"}]},{"ID":"20230926224505-nb2v3fw","Type":"NodeParagraph","Properties":{"id":"20230926224505-nb2v3fw","updated":"20230926224510"},"Children":[{"Type":"NodeText","Data":"同样使用上面的startup脚本。编写Dockerfile，内容如下所示，"}]},{"ID":"20230926224511-oqjf5p1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926224511-oqjf5p1","updated":"20230926224522"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"FROM ubuntu:14.04\nMAINTAINER lienhua34@xxx.com\n \nADD startup /opt\nRUN chmod a+x /opt/startup\n\nENTRYPOINT [\"/opt/startup\", \"arg1\"]\nCMD [\"arg2\"]\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926224537-1hx84y4","Type":"NodeParagraph","Properties":{"id":"20230926224537-1hx84y4","updated":"20230926224538"},"Children":[{"Type":"NodeText","Data":"运行docker build命令生成test:latest镜像，"}]},{"ID":"20230926224539-g9kovye","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926224539-g9kovye","updated":"20230926224547"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"lienhua34@test$ sudo docker build -t test .\nSending build context to Docker daemon 4.096 kB\nStep 1 : FROM ubuntu:14.04\n ---\u003e a5a467fddcb8\nStep 2 : MAINTAINER lienhua34@163.com\n ---\u003e Using cache\n ---\u003e 332259a92e74\nStep 3 : ADD startup /opt\n ---\u003e Using cache\n ---\u003e 3c26b6a8ef1b\nStep 4 : RUN chmod a+x /opt/startup\n ---\u003e Using cache\n ---\u003e 04d9b53d6148\nStep 5 : ENTRYPOINT /opt/startup arg1\n ---\u003e Running in 54947233dc3d\n ---\u003e 15a485253b4e\nRemoving intermediate container 54947233dc3d\nStep 6 : CMD arg2\n ---\u003e Running in 18c43d2d90fd\n ---\u003e 4684ba457cc2\nRemoving intermediate container 18c43d2d90fd\nSuccessfully built 4684ba457cc2\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926224555-sb7knys","Type":"NodeParagraph","Properties":{"id":"20230926224555-sb7knys","updated":"20230926224555"},"Children":[{"Type":"NodeText","Data":"下面运行docker run启动两个test:latest镜像的容器\n第一条docker run命令没有指定参数，\n第二条docker run命令指定了参数arg3，其运行结果如下，"}]},{"ID":"20230926224556-sf6ic5x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926224556-sf6ic5x","updated":"20230926224607"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"lienhua34@test$ sudo docker run -ti --rm=true test\nin startup, args: arg1 arg2\nlienhua34@test$ sudo docker run -ti --rm=true test arg3\nin startup, args: arg1 arg3\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926224752-i1pdv3t","Type":"NodeParagraph","Properties":{"id":"20230926224752-i1pdv3t","updated":"20230926224759"},"Children":[{"Type":"NodeText","Data":"从上面第一个容器的运行结果可以看出CMD指令为ENTRYPOINT指令设置了默认参数，即CMD中的“arg2”变成了ENTRYPOINT中的参数了\n从第二个容器的运行结果看出，docker run命令指定的参数覆盖掉了dockerfile中CMD指令指定的参数；docker run 命令行指定的参数arg3替代掉dockerfile中CMD的 arg2了\n"}]},{"ID":"20230926224812-1q3x28j","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230926224812-1q3x28j","updated":"20230926224819"},"Children":[{"Type":"NodeText","Data":"注意点"}]},{"ID":"20230926224820-yj1gpns","Type":"NodeParagraph","Properties":{"id":"20230926224820-yj1gpns","updated":"20230926224905"},"Children":[{"Type":"NodeText","Data":"CMD指令为ENTRYPOINT指令提供默认参数是基于镜像层次结构生效的，而不是基于是否在同个Dockerfile文件中。意思就是说，如果Dockerfile指定基础镜像中是ENTRYPOINT指定的启动命令，则该Dockerfile中的CMD依然是为基础镜像中的ENTRYPOINT设置默认参数。"}]},{"ID":"20230926224902-2kjtysm","Type":"NodeParagraph","Properties":{"id":"20230926224902-2kjtysm","updated":"20230926224903"},"Children":[{"Type":"NodeText","Data":"例如，我们有如下一个Dockerfile文件，"}]},{"ID":"20230926224906-wulmw0i","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926224906-wulmw0i","updated":"20230926224959"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"ZG9ja2VyZmlsZQ=="},{"Type":"NodeCodeBlockCode","Data":"FROM ubuntu:14.04\nMAINTAINER lienhua34@xxx.com\n \nADD startup /opt\nRUN chmod a+x /opt/startup\n\nENTRYPOINT [\"/opt/startup\", \"arg1\"]\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926224919-0op6fy0","Type":"NodeParagraph","Properties":{"id":"20230926224919-0op6fy0","updated":"20230926224919"},"Children":[{"Type":"NodeText","Data":"通过运行docker build命令生成test:0.0.1镜像，然后创建该镜像的一个容器，查看运行结果，"}]},{"ID":"20230926224920-vsvfgc5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926224920-vsvfgc5","updated":"20230926224929"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"lienhua34@test$ sudo docker build -t test:0.0.1 .\nSending build context to Docker daemon 6.144 kB\nStep 1 : FROM ubuntu:14.04\n ---\u003e a5a467fddcb8\nStep 2 : MAINTAINER lienhua34@163.com\n ---\u003e Running in 57a96522061a\n ---\u003e c3bbf1bd8068\nRemoving intermediate container 57a96522061a\nStep 3 : ADD startup /opt\n ---\u003e f9884fbc7607\nRemoving intermediate container 591a82b2f382\nStep 4 : RUN chmod a+x /opt/startup\n ---\u003e Running in 7a19f10b5513\n ---\u003e 16c03869a764\nRemoving intermediate container 7a19f10b5513\nStep 5 : ENTRYPOINT /opt/startup arg1\n ---\u003e Running in b581c32b25c3\n ---\u003e c6b1365afe03\nRemoving intermediate container b581c32b25c3\nSuccessfully built c6b1365afe03\nlienhua34@test$ sudo docker run -ti --rm=true test:0.0.1\nin startup, args: arg1\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926224935-489qr45","Type":"NodeParagraph","Properties":{"id":"20230926224935-489qr45","updated":"20230926224938"},"Children":[{"Type":"NodeText","Data":"下面新建一个Dockerfile文件，基础镜像是刚生成的test:0.0.1，通过CMD指定要通过echo打印字符串“in test:0.0.2”。文件内容如下所示，"}]},{"ID":"20230926224938-ip8e5he","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926224938-ip8e5he","updated":"20230926224951"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"ZG9ja2VyZmlsZQ=="},{"Type":"NodeCodeBlockCode","Data":"FROM test:0.0.1\nMAINTAINER lienhua34@xxx.com\n\nCMD [\"/bin/bash\", \"-c\", \"echo in test:0.0.2\"]\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926225003-da6gl3j","Type":"NodeParagraph","Properties":{"id":"20230926225003-da6gl3j","updated":"20230926225009"},"Children":[{"Type":"NodeText","Data":"运行docker build命令生成test:0.0.2镜像，然后通过运行docker run启动一个test:0.0.2镜像的容器来查看结果"}]},{"ID":"20230926225010-9i765it","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230926225010-9i765it","updated":"20230926225024"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"lienhua34@test$ sudo docker build -t test:0.0.2 .\nSending build context to Docker daemon 6.144 kB\nStep 1 : FROM test:0.0.1\n ---\u003e c6b1365afe03\nStep 2 : MAINTAINER lienhua34@163.com\n ---\u003e Running in deca95cf4c15\n ---\u003e 971b5a819b48\nRemoving intermediate container deca95cf4c15\nStep 3 : CMD /bin/bash -c echo in test:0.0.2\n ---\u003e Running in 4a31c4652e1e\n ---\u003e 0ca06ba31405\nRemoving intermediate container 4a31c4652e1e\nSuccessfully built 0ca06ba31405\nlienhua34@test$ sudo docker run -ti --rm=true test:0.0.2\nin startup, args: arg1 /bin/bash -c echo in test:0.0.2\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230926225030-nx7y3cp","Type":"NodeParagraph","Properties":{"id":"20230926225030-nx7y3cp","updated":"20230926225033"},"Children":[{"Type":"NodeText","Data":"从上面结果可以看到，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"镜像test:0.0.2启动的容器运行时并不是打印字符串”in test:0.0.2”"},{"Type":"NodeText","Data":"，而是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"将CMD指令指定的整个命令（echo in test:0.0.2）当做基础镜像test:0.0.1中ENTRYPOINT指定的运行脚本startup的参数。"}]},{"ID":"20230926225031-g3yav5u","Type":"NodeParagraph","Properties":{"id":"20230926225031-g3yav5u"}}]}