{"ID":"20230724014714-uzskhpi","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f534","id":"20230724014714-uzskhpi","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230724014714-uzskhpi\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230724014716-7ulma9m\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230724014716-ba4uiri\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230724014716-7ulma9m\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;","title":"7. 端口映射与容器互联","updated":"20230724014728"},"Children":[{"ID":"20230724014716-7ulma9m","Type":"NodeParagraph","Properties":{"id":"20230724014716-7ulma9m","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"除了通过网络访问外，Docker还提供了两个很方便的功能来满足服务访问的基本需求：一个是允许映射容器内应用的服务端口到本地宿主主机；另一个是互联机制实现多个容器间通过容器名来快速访问。"}]},{"ID":"20230724014716-0u809jm","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724014716-0u809jm","updated":"20230724014716"},"Children":[{"Type":"NodeText","Data":"1. 端口映射实现访问容器"}]},{"ID":"20230724014716-m5g9ied","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724014716-m5g9ied","updated":"20230724014716"},"Children":[{"Type":"NodeText","Data":"1.从外部访问容器应用"}]},{"ID":"20230724014716-3nvi949","Type":"NodeParagraph","Properties":{"id":"20230724014716-3nvi949","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"在启动容器的时候，如果不指定对应的参数，在容器外部是无法通过网络来访问容器内的网络应用和服务的。"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"当容器中运行一些网络应用，要让外部访问这些应用时，可以通过-P或-p参数来指定端口映射。"}]},{"ID":"20230724014716-hj7vqla","Type":"NodeParagraph","Properties":{"id":"20230724014716-hj7vqla","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"当使用-P（大写的）标记时，Docker会随机映射一个49000~49900的端口到内部容器开放的网络端口："}]},{"ID":"20230724014716-j7pmncf","Type":"NodeParagraph","Properties":{"id":"20230724014716-j7pmncf","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"-p（小写的）可以指定要映射的端口，并且，在一个指定端口上只可以绑定一个容器。支持的格式有IP：HostPort：ContainerPort|IP：：ContainerPort|HostPort：ContainerPort。"}]},{"ID":"20230724014716-qhv80hb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724014716-qhv80hb","updated":"20230724014716"},"Children":[{"Type":"NodeText","Data":"2.映射所有接口地址"}]},{"ID":"20230724014716-pfyhza3","Type":"NodeParagraph","Properties":{"id":"20230724014716-pfyhza3","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用HostPort：ContainerPort格式将本地的5000端口映射到容器的5000端口，可以执行："}]},{"ID":"20230724014716-u9vg0kc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-u9vg0kc","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run -d -p 5000:5000 training/webapp python app.py\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-7m71cmq","Type":"NodeParagraph","Properties":{"id":"20230724014716-7m71cmq","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"此时默认会绑定本地所有接口上的所有地址。多次使用-p标记可以绑定多个端口。例如："}]},{"ID":"20230724014716-d7b9y05","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-d7b9y05","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run -d -p 5000:5000 -p 3000:80 training/webapp python app.py\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-gju0f7q","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724014716-gju0f7q","updated":"20230724014716"},"Children":[{"Type":"NodeText","Data":"3. 映射到指定地址的指定接口"}]},{"ID":"20230724014716-zey3m9l","Type":"NodeParagraph","Properties":{"id":"20230724014716-zey3m9l","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"可以使用IP：HostPort：ContainerPort格式指定映射使用一个特定地址，比如localhost地址127.0.0.1："}]},{"ID":"20230724014716-lkbx5x9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-lkbx5x9","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run -d -p 127.0.0.1:5000:5000 training/webapp python app.py\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-rjhn40q","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724014716-rjhn40q","updated":"20230724014716"},"Children":[{"Type":"NodeText","Data":"4. 映射到指定地址的任意端口"}]},{"ID":"20230724014716-b6x38df","Type":"NodeParagraph","Properties":{"id":"20230724014716-b6x38df","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用IP：：ContainerPort绑定localhost的任意端口到容器的5000端口，本地主机会自动分配一个端口："}]},{"ID":"20230724014716-nh4v9d6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-nh4v9d6","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run -d -p 127.0.0.1::5000 training/webapp python app.py\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-voirazr","Type":"NodeParagraph","Properties":{"id":"20230724014716-voirazr","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"还可以使用udp标记来指定udp端口："}]},{"ID":"20230724014716-pzue0fh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-pzue0fh","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run -d -p 127.0.0.1:5000:5000/udp training/webapp python app.py\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-07cp4jw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724014716-07cp4jw","updated":"20230724014716"},"Children":[{"Type":"NodeText","Data":"5.查看映射端口配置"}]},{"ID":"20230724014716-5nbc64c","Type":"NodeParagraph","Properties":{"id":"20230724014716-5nbc64c","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用docker port命令来查看当前映射的端口配置，也可以查看到绑定的地址："}]},{"ID":"20230724014716-ymv5uwy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-ymv5uwy","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker port nostalgic_morse 5000127.0.0.1:49155.\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-8ctqwe1","Type":"NodeParagraph","Properties":{"id":"20230724014716-8ctqwe1","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"容器有自己的内部网络和IP地址，使用docker inspect+容器ID可以获取容器的具体信息。"}]},{"ID":"20230724014716-tj6n2dw","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724014716-tj6n2dw","updated":"20230724014716"},"Children":[{"Type":"NodeText","Data":"2. 互联机制实现便捷互访"}]},{"ID":"20230724014716-8jxzeil","Type":"NodeParagraph","Properties":{"id":"20230724014716-8jxzeil","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"容器的互联（linking）是一种让多个容器中应用进行快速交互的方式。它会在源和接收容器之间创建连接关系，接收容器可以通过容器名快速访问到源容器，而不用指定具体的IP地址。"}]},{"ID":"20230724014716-euxwwyj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724014716-euxwwyj","updated":"20230724014716"},"Children":[{"Type":"NodeText","Data":"1. 自定义容器命名"}]},{"ID":"20230724014716-3os4nsy","Type":"NodeParagraph","Properties":{"id":"20230724014716-3os4nsy","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"连接系统依据容器的名称来执行。因此，首先需要定义一个好记的容器名字。"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"虽然当创建容器的时候，系统默认会分配一个名字，但自定义容器名字有两个好处："}]},{"ID":"20230724014716-cmui2sq","Type":"NodeParagraph","Properties":{"id":"20230724014716-cmui2sq","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·自定义的命名比较好记，比如一个Web应用容器，我们可以给它起名叫web，一目了然；"}]},{"ID":"20230724014716-vek5b0t","Type":"NodeParagraph","Properties":{"id":"20230724014716-vek5b0t","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·当要连接其他容器时，即便重启，也可以使用容器名而不用改变，比如连接web容器到db容器。"}]},{"ID":"20230724014716-f1z195k","Type":"NodeParagraph","Properties":{"id":"20230724014716-f1z195k","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用--name标记可以为容器自定义命名："}]},{"ID":"20230724014716-4sppvio","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-4sppvio","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run -d -P --name web training/webapp python app.py\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-7yjc64b","Type":"NodeParagraph","Properties":{"id":"20230724014716-7yjc64b","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用docker ps来验证设定的命名："}]},{"ID":"20230724014716-rrybfey","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-rrybfey","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker ps -lCONTAINER ID IMAGE COMMAND CREATED STATUS  PORTS NAMES\n\naed84ee21bde training/webapp:latest python app.py 12 hours ago Up 2 seconds 0.0.0.0:49154-\u003e5000/tcp web\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-f2mckez","Type":"NodeParagraph","Properties":{"id":"20230724014716-f2mckez","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"也可以使用docker inspect来查看容器的名字："}]},{"ID":"20230724014716-8jploci","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-8jploci","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker inspect -f \"{{ .Name }}\" aed84ee21bde/web\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-d67vdu8","Type":"NodeParagraph","Properties":{"id":"20230724014716-d67vdu8","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"容器的名称是唯一的。如果已经命名了一个叫web的容器，当你要再次使用web这个名称的时候，需要先用docker rm来删除之前创建的同名容器。"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"在执行docker run的时候如果添加--rm标记，则容器在终止后会立刻删除。注意，--rm和-d参数不能同时使用。"}]},{"ID":"20230724014716-7rii17o","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724014716-7rii17o","updated":"20230724014716"},"Children":[{"Type":"NodeText","Data":"2. 容器互联"}]},{"ID":"20230724014716-ufkb19i","Type":"NodeParagraph","Properties":{"id":"20230724014716-ufkb19i","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用 --link 参数可以让容器之间安全地进行交互"}]},{"ID":"20230724014716-1a36lc0","Type":"NodeParagraph","Properties":{"id":"20230724014716-1a36lc0","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"下面先创建一个新的数据库容器："}]},{"ID":"20230724014716-km67u64","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-km67u64","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run -d --name db training/postgres\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-ivmn9w2","Type":"NodeParagraph","Properties":{"id":"20230724014716-ivmn9w2","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"删除之前创建的web容器："}]},{"ID":"20230724014716-5sgt5r8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-5sgt5r8","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker rm -f web\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-24ytyly","Type":"NodeParagraph","Properties":{"id":"20230724014716-24ytyly","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"然后创建一个新的web容器，并将它连接到db容器："}]},{"ID":"20230724014716-uim66cr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-uim66cr","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run -d -P --name web --link db:db training/webapp python app.py\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-v6l0l2z","Type":"NodeParagraph","Properties":{"id":"20230724014716-v6l0l2z","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"此时，db容器和web容器建立互联关系："}]},{"ID":"20230724014716-78eyppz","Type":"NodeParagraph","Properties":{"id":"20230724014716-78eyppz","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"--link参数的格式为--link name：alias，其中name是要连接的容器名称，alias是这个连接的别名。"}]},{"ID":"20230724014716-bi78xns","Type":"NodeParagraph","Properties":{"id":"20230724014716-bi78xns","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用docker ps来查看容器的连接，如下所示："}]},{"ID":"20230724014716-tnn300d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-tnn300d","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker psCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-zwv68xy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014716-zwv68xy","updated":"20230724014716"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"349169744e49 training/postgres:latest su postgres -c '/usr About a minute ago Up About a minute 5432/tcp db, web/dbaed84ee21bde training/webapp:latest python app.py 16 hours ago Up 2 minutes 0.0.0.0:49154-\u003e5000/tcp web\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014716-d81r3uh","Type":"NodeParagraph","Properties":{"id":"20230724014716-d81r3uh","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"可以看到自定义命名的容器，db和web，db容器的names列有db也有web/db。"}]},{"ID":"20230724014716-ccmjapw","Type":"NodeParagraph","Properties":{"id":"20230724014716-ccmjapw","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"这表示web容器连接到db容器，这允许web容器访问db容器的信息。"}]},{"ID":"20230724014716-ba4uiri","Type":"NodeParagraph","Properties":{"id":"20230724014716-ba4uiri","updated":"20230724014716"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Docker相当于在两个互联的容器之间创建了一个虚机通道，而且不用映射它们的端口到宿主主机上。在启动db容器的时候并没有使用-p和-P标记，从而避免了暴露数据库服务端口到外部网络上。"}]}]}