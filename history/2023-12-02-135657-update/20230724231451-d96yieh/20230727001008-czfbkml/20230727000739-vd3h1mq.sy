{"ID":"20230727000739-vd3h1mq","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f9a9","id":"20230727000739-vd3h1mq","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230727000739-vd3h1mq\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230727000740-fjrkrdi\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230727000875-blhdtg9\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230727000740-fjrkrdi\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;","tags":"Go-Context","title":"25 Context","updated":"20230727000739"},"Children":[{"ID":"20230727000740-fjrkrdi","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230727000740-fjrkrdi","updated":"20230727000740"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"25 Context"}]},{"ID":"20230727000741-x9jemrh","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000741-x9jemrh","updated":"20230727000741"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"1. Context 的使用场景"}]},{"ID":"20230727000742-7r6e9ql","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000742-7r6e9ql","updated":"20230727000742"},"Children":[{"ID":"20230727000743-jftor4d","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000743-jftor4d","updated":"20230727000743"},"Children":[{"ID":"20230727000744-hdagcpj","Type":"NodeParagraph","Properties":{"id":"20230727000744-hdagcpj","updated":"20230727000744"},"Children":[{"Type":"NodeText","Data":"在多个goroutine 中相互传递数据"}]}]},{"ID":"20230727000745-i8unb29","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000745-i8unb29","updated":"20230727000745"},"Children":[{"ID":"20230727000746-fcxshrq","Type":"NodeParagraph","Properties":{"id":"20230727000746-fcxshrq","updated":"20230727000746"},"Children":[{"Type":"NodeText","Data":"上下文控制，关闭创建出的goroutine"}]}]},{"ID":"20230727000747-36a0hsj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000747-36a0hsj","updated":"20230727000747"},"Children":[{"ID":"20230727000748-c8xn9qy","Type":"NodeParagraph","Properties":{"id":"20230727000748-c8xn9qy","updated":"20230727000748"},"Children":[{"Type":"NodeText","Data":"超时控制"}]}]}]},{"ID":"20230727000749-wh938ux","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000749-wh938ux","updated":"20230727000749"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"2. Context 的实现和相关函数"}]},{"ID":"20230727000750-uuwlhkc","Type":"NodeParagraph","Properties":{"id":"20230727000750-uuwlhkc","updated":"20230727000750"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230623213109445","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"E:\\Typora picture\\image-20230623213109445.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230727000751-4ph0ikn","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000751-4ph0ikn","updated":"20230727000751"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3. Context 的类型"}]},{"ID":"20230727000752-33enot2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000752-33enot2","updated":"20230727000752"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.1 empthCtx"}]},{"ID":"20230727000753-ytg4mtw","Type":"NodeParagraph","Properties":{"id":"20230727000753-ytg4mtw","updated":"20230727000753"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"emptyCtx本质是一个整型类型"},{"Type":"NodeText","Data":"，"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"他对Context接口的实现，非常简单，其实是什么也没做，都是一堆空方法："},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000754-0tpyk7e","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000754-0tpyk7e","updated":"20230727000754"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// An emptyCtx is never canceled, has no values, and has no deadline. It is not struct{}, since vars of this type must have distinct addresses.\n// emptyCtx永远不会取消，没有值，也没有截止日期。这不是struct{}，因为此类型的变量必须具有不同的地址。\ntype emptyCtx int\n\nfunc (*emptyCtx) Dealine() (dealine time.Time, ok bool) {\n  return \n}\n\nfunc (*emptyCtx) Done () \u003c-chan struct{} {\n  return nil\n}\n\nfunc (*emptyCtx) Err() error {\n  return nil\n}\n\nfunc (*emptyCtx) Value(key any) any {\n  return nil \n}\n\nfunc (e *empthCtx) String() string {\n  switch e {\n    case background:\n    \treturn \"context.Background\"\n    case todo:\n    \treturn \"context.TODO\"\n  }\n  return \"unknown empty Context\"\n}\n\nvar (\n  background = new(emptyCtx)\n  todo = new(empty)\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000755-f1lof27","Type":"NodeParagraph","Properties":{"id":"20230727000755-f1lof27","updated":"20230727000755"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"context包中定义了一个公用的emptCtx全局变量，名为background，可以使用context.Background()获取它，"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000756-yo74xaz","Type":"NodeParagraph","Properties":{"id":"20230727000756-yo74xaz","updated":"20230727000756"},"Children":[{"Type":"NodeText","Data":"实现代码如下："}]},{"ID":"20230727000757-02058li","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000757-02058li","updated":"20230727000757"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Background() Context {\n\treturn background\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000758-okyezo8","Type":"NodeParagraph","Properties":{"id":"20230727000758-okyezo8","updated":"20230727000758"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"context包提供了4个方法创建不同类型的context，使用这四个方法时如果没有父context，都需要传入backgroud，即backgroud作为其父节点："}]},{"ID":"20230727000759-e8g3db6","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000759-e8g3db6","updated":"20230727000759"},"Children":[{"ID":"20230727000760-2ubrq12","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000760-2ubrq12","updated":"20230727000760"},"Children":[{"ID":"20230727000761-dqhzp1v","Type":"NodeParagraph","Properties":{"id":"20230727000761-dqhzp1v","updated":"20230727000761"},"Children":[{"Type":"NodeText","Data":"WithCancel()"}]}]},{"ID":"20230727000762-n7cyohu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000762-n7cyohu","updated":"20230727000762"},"Children":[{"ID":"20230727000763-5hr6thb","Type":"NodeParagraph","Properties":{"id":"20230727000763-5hr6thb","updated":"20230727000763"},"Children":[{"Type":"NodeText","Data":"WithDeadline()"}]}]},{"ID":"20230727000764-at9lp0e","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000764-at9lp0e","updated":"20230727000764"},"Children":[{"ID":"20230727000765-02l6vm8","Type":"NodeParagraph","Properties":{"id":"20230727000765-02l6vm8","updated":"20230727000765"},"Children":[{"Type":"NodeText","Data":"WithTimeout()"}]}]},{"ID":"20230727000766-bye316m","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000766-bye316m","updated":"20230727000766"},"Children":[{"ID":"20230727000767-xqy6iaa","Type":"NodeParagraph","Properties":{"id":"20230727000767-xqy6iaa","updated":"20230727000767"},"Children":[{"Type":"NodeText","Data":"WithValue()"}]}]}]},{"ID":"20230727000768-50ecsz0","Type":"NodeParagraph","Properties":{"id":"20230727000768-50ecsz0","updated":"20230727000768"},"Children":[{"Type":"NodeText","Data":"context包中实现Context接口的struct，除了emptyCtx外，还有cancelCtx、timerCtx和valueCtx三种，正是基于这三种context实例，实现了上述4种类型的context。"}]},{"ID":"20230727000769-8x59klr","Type":"NodeParagraph","Properties":{"id":"20230727000769-8x59klr","updated":"20230727000769"},"Children":[{"Type":"NodeText","Data":"context包中各context类型之间的关系，如下图所示："}]},{"ID":"20230727000770-ojyxw8e","Type":"NodeParagraph","Properties":{"id":"20230727000770-ojyxw8e","updated":"20230727000770"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"null","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"E:\\Typora picture\\m_f41adc85deafd7243fc1eb3e6c553ced_r.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230727000771-5iw3gxe","Type":"NodeParagraph","Properties":{"id":"20230727000771-5iw3gxe","updated":"20230727000771"},"Children":[{"Type":"NodeText","Data":"struct cancelCtx、timerCtx、valueCtx都继承于Context，"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"下面分别介绍这三个struct。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000772-5ixg4vz","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000772-5ixg4vz","updated":"20230727000772"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2 cancelCtx"}]},{"ID":"20230727000773-jctftwd","Type":"NodeParagraph","Properties":{"id":"20230727000773-jctftwd","updated":"20230727000773"},"Children":[{"Type":"NodeText","Data":"源码包中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"src/context/context.go:cancelCtx"},{"Type":"NodeText","Data":" 定义了该类型context："}]},{"ID":"20230727000774-j83iuof","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000774-j83iuof","updated":"20230727000774"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type cancelCtx struct {\n    Context\n\n    mu       sync.Mutex            // protects following fields\n    done     chan struct{}         // created lazily, closed by first cancel call\n    children map[canceler]struct{} // set to nil by the first cancel call\n    err      error                 // set to non-nil by the first cancel call\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000775-i2j2q80","Type":"NodeParagraph","Properties":{"id":"20230727000775-i2j2q80","updated":"20230727000775"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"children中记录了由此context派生的所有child，此context被cancel时会把其中的所有child都cancel掉。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000776-cblkvd3","Type":"NodeParagraph","Properties":{"id":"20230727000776-cblkvd3","updated":"20230727000776"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"cancelCtx与deadline和value无关，所以只需要实现Done()和Err()外露接口即可"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230727000777-4ruceq1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000777-4ruceq1","updated":"20230727000777"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2.1 Done()接口实现"}]},{"ID":"20230727000778-cxq9x02","Type":"NodeParagraph","Properties":{"id":"20230727000778-cxq9x02","updated":"20230727000778"},"Children":[{"Type":"NodeText","Data":"按照Context定义，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Done()接口只需要返回一个channel即可"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"对于cancelCtx来说只需要返回成员变量done即可。"}]},{"ID":"20230727000779-drkf8cu","Type":"NodeParagraph","Properties":{"id":"20230727000779-drkf8cu","updated":"20230727000779"},"Children":[{"Type":"NodeText","Data":"这里直接看下源码，非常简单："}]},{"ID":"20230727000780-3mh2lij","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000780-3mh2lij","updated":"20230727000780"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *cancelCtx) Done() \u003c-chan struct{} {\n    c.mu.Lock()\n    if c.done == nil {\n        c.done = make(chan struct{})\n    }\n    d := c.done\n    c.mu.Unlock()\n    return d\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000781-6kql1fi","Type":"NodeParagraph","Properties":{"id":"20230727000781-6kql1fi","updated":"20230727000781"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"由于cancelCtx没有指定初始化函数，所以cancelCtx.done可能还未分配，所以需要考虑初始化。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"cancelCtx.done会在context被cancel时关闭，所以cancelCtx.done的值一般经历如下三个阶段："},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"nil –\u003e chan struct{} –\u003e closed chan。"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000782-tk1wo4r","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000782-tk1wo4r","updated":"20230727000782"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2.3 Err()接口实现"}]},{"ID":"20230727000783-2lyp21f","Type":"NodeParagraph","Properties":{"id":"20230727000783-2lyp21f","updated":"20230727000783"},"Children":[{"Type":"NodeText","Data":"按照Context定义，"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"Err()只需要返回一个error告知context被关闭的原因。"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"对于cancelCtx来说只需要返回成员变量err即可。"}]},{"ID":"20230727000784-kz30xrn","Type":"NodeParagraph","Properties":{"id":"20230727000784-kz30xrn","updated":"20230727000784"},"Children":[{"Type":"NodeText","Data":"还是直接看下源码："}]},{"ID":"20230727000785-qjtl6t9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000785-qjtl6t9","updated":"20230727000785"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *cancelCtx) Err() error {\n    c.mu.Lock()\n    err := c.err\n    c.mu.Unlock()\n    return err\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000786-5cua1ou","Type":"NodeParagraph","Properties":{"id":"20230727000786-5cua1ou","updated":"20230727000786"},"Children":[{"Type":"NodeText","Data":"cancelCtx.err默认是nil，在context被cancel时指定一个error变量： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"var Canceled = errors.New(\u0026quot;context canceled\u0026quot;)"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230727000787-0zl00zm","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000787-0zl00zm","updated":"20230727000787"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2.4 cancel()接口实现"}]},{"ID":"20230727000788-8ahtxmj","Type":"NodeParagraph","Properties":{"id":"20230727000788-8ahtxmj","updated":"20230727000788"},"Children":[{"Type":"NodeText","Data":"cancel()内部方法是理解cancelCtx的最关键的方法，"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"其作用是关闭自己和其后代，其后代存储在cancelCtx.children的map中，其中key值即后代对象，value值并没有意义，这里使用map只是为了方便查询而已。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000789-px8dhdm","Type":"NodeParagraph","Properties":{"id":"20230727000789-px8dhdm","updated":"20230727000789"},"Children":[{"Type":"NodeText","Data":"cancel方法实现伪代码如下所示："}]},{"ID":"20230727000790-csnvrp8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000790-csnvrp8","updated":"20230727000790"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *cancelCtx) cancel(removeFromParent bool, err error) {\n    c.mu.Lock()\n\n    c.err = err                          //设置一个error，说明关闭原因\n    close(c.done)                     //将channel关闭，以此通知派生的context\n\n    for child := range c.children {   //遍历所有children，逐个调用cancel方法\n        child.cancel(false, err)\n    }\n    c.children = nil\n    c.mu.Unlock()\n\n    if removeFromParent {            //正常情况下，需要将自己从parent删除\n        removeChild(c.Context, c)\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000791-tk4kd9j","Type":"NodeParagraph","Properties":{"id":"20230727000791-tk4kd9j","updated":"20230727000791"},"Children":[{"Type":"NodeText","Data":"实际上，WithCancel()返回的第二个用于cancel context的方法正是此cancel()。"}]},{"ID":"20230727000792-z3esfjq","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000792-z3esfjq","updated":"20230727000792"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2.5 WithCancel()方法实现"}]},{"ID":"20230727000793-d9wwctw","Type":"NodeParagraph","Properties":{"id":"20230727000793-d9wwctw","updated":"20230727000793"},"Children":[{"Type":"NodeText","Data":"WithCancel()方法作了三件事："}]},{"ID":"20230727000794-pjhj8cg","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000794-pjhj8cg","updated":"20230727000794"},"Children":[{"ID":"20230727000795-60tk4fd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000795-60tk4fd","updated":"20230727000795"},"Children":[{"ID":"20230727000796-plfikqa","Type":"NodeParagraph","Properties":{"id":"20230727000796-plfikqa","updated":"20230727000796"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"初始化一个cancelCtx实例"}]}]},{"ID":"20230727000797-7tekh0k","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000797-7tekh0k","updated":"20230727000797"},"Children":[{"ID":"20230727000798-p48m6lx","Type":"NodeParagraph","Properties":{"id":"20230727000798-p48m6lx","updated":"20230727000798"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"将cancelCtx实例添加到其父节点的children中(如果父节点也可以被cancel的话)"}]}]},{"ID":"20230727000799-zwazsiy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000799-zwazsiy","updated":"20230727000799"},"Children":[{"ID":"20230727000800-izcvgd4","Type":"NodeParagraph","Properties":{"id":"20230727000800-izcvgd4","updated":"20230727000800"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"返回cancelCtx实例和cancel()方法"}]}]}]},{"ID":"20230727000801-uwwvxao","Type":"NodeParagraph","Properties":{"id":"20230727000801-uwwvxao","updated":"20230727000801"},"Children":[{"Type":"NodeText","Data":"其实现源码如下所示："}]},{"ID":"20230727000802-ouwzkbc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000802-ouwzkbc","updated":"20230727000802"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func WithCancel(parent Context) (ctx Context, cancel CancelFunc) {\n    c := newCancelCtx(parent)\n    propagateCancel(parent, \u0026c)   //将自身添加到父节点\n    return \u0026c, func() { c.cancel(true, Canceled) }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000803-hg6o3ox","Type":"NodeParagraph","Properties":{"id":"20230727000803-hg6o3ox","updated":"20230727000803"},"Children":[{"Type":"NodeText","Data":"这里将自身添加到父节点的过程有必要简单说明一下："}]},{"ID":"20230727000804-hilrbd2","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000804-hilrbd2","updated":"20230727000804"},"Children":[{"ID":"20230727000805-u0yoku6","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000805-u0yoku6","updated":"20230727000805"},"Children":[{"ID":"20230727000806-1bghgmj","Type":"NodeParagraph","Properties":{"id":"20230727000806-1bghgmj","updated":"20230727000806"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"如果父节点也支持cancel，也就是说其父节点肯定有children成员，那么把新context添加到children里即可；"}]}]},{"ID":"20230727000807-qispzto","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20230727000807-qispzto","updated":"20230727000807"},"Children":[{"ID":"20230727000808-3rroc04","Type":"NodeParagraph","Properties":{"id":"20230727000808-3rroc04","updated":"20230727000808"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"如果父节点不支持cancel，就继续向上查询，直到找到一个支持cancel的节点，把新context添加到children里；"}]}]},{"ID":"20230727000809-klc93la","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20230727000809-klc93la","updated":"20230727000809"},"Children":[{"ID":"20230727000810-jyrpwcl","Type":"NodeParagraph","Properties":{"id":"20230727000810-jyrpwcl","updated":"20230727000810"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"如果所有的父节点均不支持cancel，则启动一个协程等待父节点结束，然后再把当前context结束。"}]}]}]},{"ID":"20230727000811-c2gbvp1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000811-c2gbvp1","updated":"20230727000811"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2.6 典型使用案例"}]},{"ID":"20230727000812-ep18fwz","Type":"NodeParagraph","Properties":{"id":"20230727000812-ep18fwz","updated":"20230727000812"},"Children":[{"Type":"NodeText","Data":"一个典型的使用cancel context的例子如下所示："}]},{"ID":"20230727000813-vfu1inh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000813-vfu1inh","updated":"20230727000813"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"context\"\n)\n\nfunc HandelRequest(ctx context.Context) {\n    go WriteRedis(ctx)\n    go WriteDatabase(ctx)\n    for {\n        select {\n        case \u003c-ctx.Done():\n            fmt.Println(\"HandelRequest Done.\")\n            return\n        default:\n            fmt.Println(\"HandelRequest running\")\n            time.Sleep(2 * time.Second)\n        }\n    }\n}\n\nfunc WriteRedis(ctx context.Context) {\n    for {\n        select {\n        case \u003c-ctx.Done():\n            fmt.Println(\"WriteRedis Done.\")\n            return\n        default:\n            fmt.Println(\"WriteRedis running\")\n            time.Sleep(2 * time.Second)\n        }\n    }\n}\n\nfunc WriteDatabase(ctx context.Context) {\n    for {\n        select {\n        case \u003c-ctx.Done():\n            fmt.Println(\"WriteDatabase Done.\")\n            return\n        default:\n            fmt.Println(\"WriteDatabase running\")\n            time.Sleep(2 * time.Second)\n        }\n    }\n}\n\nfunc main() {\n    ctx, cancel := context.WithCancel(context.Background())\n    go HandelRequest(ctx)\n\n    time.Sleep(5 * time.Second)\n    fmt.Println(\"It's time to stop all sub goroutines!\")\n    cancel()\n\n    //Just for test whether sub goroutines exit or not\n    time.Sleep(5 * time.Second)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000814-t540kl9","Type":"NodeParagraph","Properties":{"id":"20230727000814-t540kl9","updated":"20230727000814"},"Children":[{"Type":"NodeText","Data":"上面代码中协程HandelRequest()用于处理某个请求，其又会创建两个协程：WriteRedis()、WriteDatabase()，main协程创建context，并把context在各子协程间传递，main协程在适当的时机可以cancel掉所有子协程。"}]},{"ID":"20230727000815-8f56jgy","Type":"NodeParagraph","Properties":{"id":"20230727000815-8f56jgy","updated":"20230727000815"},"Children":[{"Type":"NodeText","Data":"程序输出如下所示："}]},{"ID":"20230727000816-dfxzgqf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000816-dfxzgqf","updated":"20230727000816"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"HandelRequest running\nWriteDatabase running\nWriteRedis running\nHandelRequest running\nWriteDatabase running\nWriteRedis running\nHandelRequest running\nWriteDatabase running\nWriteRedis running\nIt's time to stop all sub goroutines!\nWriteDatabase Done.\nHandelRequest Done.\nWriteRedis Done.\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000817-k3mxx4k","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000817-k3mxx4k","updated":"20230727000817"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.3 timerCtx"}]},{"ID":"20230727000818-adgmgmh","Type":"NodeParagraph","Properties":{"id":"20230727000818-adgmgmh","updated":"20230727000818"},"Children":[{"Type":"NodeText","Data":"源码包中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"src/context/context.go:timerCtx"},{"Type":"NodeText","Data":" 定义了该类型context："}]},{"ID":"20230727000819-kd832lq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000819-kd832lq","updated":"20230727000819"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type timerCtx struct {\n    cancelCtx\n    timer *time.Timer // Under cancelCtx.mu.\n\n    deadline time.Time\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000820-rxkabpm","Type":"NodeParagraph","Properties":{"id":"20230727000820-rxkabpm","updated":"20230727000820"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"timerCtx在cancelCtx基础上增加了deadline用于标示自动cancel的最终时间，而timer就是一个触发自动cancel的定时器。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000821-xg9gchu","Type":"NodeParagraph","Properties":{"id":"20230727000821-xg9gchu","updated":"20230727000821"},"Children":[{"Type":"NodeText","Data":"由此，衍生出"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"WithDeadline()"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"WithTimeout()"},{"Type":"NodeText","Data":"。实现上这两种类型实现原理一样，只不过使用语境不一样："}]},{"ID":"20230727000822-5jsj650","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000822-5jsj650","updated":"20230727000822"},"Children":[{"ID":"20230727000823-f0oo0ew","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000823-f0oo0ew","updated":"20230727000823"},"Children":[{"ID":"20230727000824-ba83irw","Type":"NodeParagraph","Properties":{"id":"20230727000824-ba83irw","updated":"20230727000824"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"deadline: 指定最后期限"},{"Type":"NodeText","Data":"，比如context将2018.10.20 00:00:00之时自动结束"}]}]},{"ID":"20230727000825-6f103py","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000825-6f103py","updated":"20230727000825"},"Children":[{"ID":"20230727000826-t6tthkc","Type":"NodeParagraph","Properties":{"id":"20230727000826-t6tthkc","updated":"20230727000826"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"timeout: 指定最长存活时间"},{"Type":"NodeText","Data":"，比如context将在30s后结束。"}]}]}]},{"ID":"20230727000827-p1fx6pj","Type":"NodeParagraph","Properties":{"id":"20230727000827-p1fx6pj","updated":"20230727000827"},"Children":[{"Type":"NodeText","Data":"对于接口来说，timerCtx在cancelCtx基础上还需要实现Deadline()和cancel()方法，其中cancel()方法是重写的。"}]},{"ID":"20230727000828-fh0vpbj","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000828-fh0vpbj","updated":"20230727000828"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.3.1 Deadline()接口实现"}]},{"ID":"20230727000829-pxncjzu","Type":"NodeParagraph","Properties":{"id":"20230727000829-pxncjzu","updated":"20230727000829"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Deadline()方法仅仅是返回timerCtx.deadline而矣"},{"Type":"NodeText","Data":"。而timerCtx.deadline是WithDeadline()或WithTimeout()方法设置的。"}]},{"ID":"20230727000830-cy2uhh3","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000830-cy2uhh3","updated":"20230727000830"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.3.2 cancel()接口实现"}]},{"ID":"20230727000831-09g85rp","Type":"NodeParagraph","Properties":{"id":"20230727000831-09g85rp","updated":"20230727000831"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"cancel()方法基本继承cancelCtx，只需要额外把timer关闭。"}]},{"ID":"20230727000832-d2dpcey","Type":"NodeParagraph","Properties":{"id":"20230727000832-d2dpcey","updated":"20230727000832"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"timerCtx被关闭后，timerCtx.cancelCtx.err将会存储关闭原因："},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000833-c250pmd","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000833-c250pmd","updated":"20230727000833"},"Children":[{"ID":"20230727000834-n6h2dhc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000834-n6h2dhc","updated":"20230727000834"},"Children":[{"ID":"20230727000835-cfveoci","Type":"NodeParagraph","Properties":{"id":"20230727000835-cfveoci","updated":"20230727000835"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"如果deadline到来之前手动关闭，则关闭原因与cancelCtx显示一致；"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]},{"ID":"20230727000836-nmtlk15","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000836-nmtlk15","updated":"20230727000836"},"Children":[{"ID":"20230727000837-rfvd9gc","Type":"NodeParagraph","Properties":{"id":"20230727000837-rfvd9gc","updated":"20230727000837"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"如果deadline到来时自动关闭，则原因为：”context deadline exceeded”"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]}]},{"ID":"20230727000838-n3iq6b7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000838-n3iq6b7","updated":"20230727000838"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.3.3 WithDeadline()方法实现"}]},{"ID":"20230727000839-3c7v824","Type":"NodeParagraph","Properties":{"id":"20230727000839-3c7v824","updated":"20230727000839"},"Children":[{"Type":"NodeText","Data":"WithDeadline()方法实现步骤如下："}]},{"ID":"20230727000840-16pfk1n","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000840-16pfk1n","updated":"20230727000840"},"Children":[{"ID":"20230727000841-jincoh3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000841-jincoh3","updated":"20230727000841"},"Children":[{"ID":"20230727000842-9vsw1tc","Type":"NodeParagraph","Properties":{"id":"20230727000842-9vsw1tc","updated":"20230727000842"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"初始化一个timerCtx实例"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]},{"ID":"20230727000843-vd8r0ku","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000843-vd8r0ku","updated":"20230727000843"},"Children":[{"ID":"20230727000844-kbw09ox","Type":"NodeParagraph","Properties":{"id":"20230727000844-kbw09ox","updated":"20230727000844"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"将timerCtx实例添加到其父节点的children中(如果父节点也可以被cancel的话)"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]},{"ID":"20230727000845-qw6be7y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000845-qw6be7y","updated":"20230727000845"},"Children":[{"ID":"20230727000846-dsb6v19","Type":"NodeParagraph","Properties":{"id":"20230727000846-dsb6v19","updated":"20230727000846"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"启动定时器，定时器到期后会自动cancel本context"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]},{"ID":"20230727000847-kp8wkk0","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000847-kp8wkk0","updated":"20230727000847"},"Children":[{"ID":"20230727000848-sq705yo","Type":"NodeParagraph","Properties":{"id":"20230727000848-sq705yo","updated":"20230727000848"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"返回timerCtx实例和cancel()方法"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]}]},{"ID":"20230727000849-mnlxho8","Type":"NodeParagraph","Properties":{"id":"20230727000849-mnlxho8","updated":"20230727000849"},"Children":[{"Type":"NodeText","Data":"也就是说，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"timerCtx类型的context不仅支持手动cancel，也会在定时器到来后自动cancel。"}]},{"ID":"20230727000850-uygyxq0","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000850-uygyxq0","updated":"20230727000850"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.3.4 WithTimeout()方法实现"}]},{"ID":"20230727000851-thgfj2r","Type":"NodeParagraph","Properties":{"id":"20230727000851-thgfj2r","updated":"20230727000851"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"WithTimeout()实际调用了WithDeadline"},{"Type":"NodeText","Data":"，二者实现原理一致。"}]},{"ID":"20230727000852-6cwuwpl","Type":"NodeParagraph","Properties":{"id":"20230727000852-6cwuwpl","updated":"20230727000852"},"Children":[{"Type":"NodeText","Data":"看代码会非常清晰："}]},{"ID":"20230727000853-dyvdw85","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000853-dyvdw85","updated":"20230727000853"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func WithTimeout(parent Context, timeout time.Duration) (Context, CancelFunc) {\n    return WithDeadline(parent, time.Now().Add(timeout))\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000854-xrun0s5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000854-xrun0s5","updated":"20230727000854"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.3.5 典型使用案例"}]},{"ID":"20230727000855-iyf4noj","Type":"NodeParagraph","Properties":{"id":"20230727000855-iyf4noj","updated":"20230727000855"},"Children":[{"Type":"NodeText","Data":"下面例子中使用WithTimeout()获得一个context并在其子协程中传递："}]},{"ID":"20230727000856-viw8vyt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000856-viw8vyt","updated":"20230727000856"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"context\"\n)\n\nfunc HandelRequest(ctx context.Context) {\n    go WriteRedis(ctx)\n    go WriteDatabase(ctx)\n    for {\n        select {\n        case \u003c-ctx.Done():\n            fmt.Println(\"HandelRequest Done.\")\n            return\n        default:\n            fmt.Println(\"HandelRequest running\")\n            time.Sleep(2 * time.Second)\n        }\n    }\n}\n\nfunc WriteRedis(ctx context.Context) {\n    for {\n        select {\n        case \u003c-ctx.Done():\n            fmt.Println(\"WriteRedis Done.\")\n            return\n        default:\n            fmt.Println(\"WriteRedis running\")\n            time.Sleep(2 * time.Second)\n        }\n    }\n}\n\nfunc WriteDatabase(ctx context.Context) {\n    for {\n        select {\n        case \u003c-ctx.Done():\n            fmt.Println(\"WriteDatabase Done.\")\n            return\n        default:\n            fmt.Println(\"WriteDatabase running\")\n            time.Sleep(2 * time.Second)\n        }\n    }\n}\n\nfunc main() {\n    ctx, _ := context.WithTimeout(context.Background(), 5 * time.Second)\n    go HandelRequest(ctx)\n\n    time.Sleep(10 * time.Second)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000857-fh3kkh6","Type":"NodeParagraph","Properties":{"id":"20230727000857-fh3kkh6","updated":"20230727000857"},"Children":[{"Type":"NodeText","Data":"主协程中创建一个10s超时的context，并将其传递给子协程，10s自动关闭context。程序输出如下："}]},{"ID":"20230727000858-77vqnwy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000858-77vqnwy","updated":"20230727000858"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"HandelRequest running\nWriteRedis running\nWriteDatabase running\nHandelRequest running\nWriteRedis running\nWriteDatabase running\nHandelRequest running\nWriteRedis running\nWriteDatabase running\nHandelRequest Done.\nWriteDatabase Done.\nWriteRedis Done.\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000859-e4fvhf5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000859-e4fvhf5","updated":"20230727000859"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.4 valueCtx"}]},{"ID":"20230727000860-hltjfq8","Type":"NodeParagraph","Properties":{"id":"20230727000860-hltjfq8","updated":"20230727000860"},"Children":[{"Type":"NodeText","Data":"源码包中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"src/context/context.go:valueCtx"},{"Type":"NodeText","Data":" 定义了该类型context："}]},{"ID":"20230727000861-e8sdstt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000861-e8sdstt","updated":"20230727000861"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type valueCtx struct {\n    Context\n    key, val interface{}\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000862-ot4n7xy","Type":"NodeParagraph","Properties":{"id":"20230727000862-ot4n7xy","updated":"20230727000862"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"valueCtx只是在Context基础上增加了一个key-value对，用于在各级协程间传递一些数据。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000863-2ku7r1d","Type":"NodeParagraph","Properties":{"id":"20230727000863-2ku7r1d","updated":"20230727000863"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"由于valueCtx既不需要cancel，也不需要deadline，那么只需要实现Value()接口即可。"}]},{"ID":"20230727000864-rx5ga81","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000864-rx5ga81","updated":"20230727000864"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.4.1 Value（）接口实现"}]},{"ID":"20230727000865-amxzpou","Type":"NodeParagraph","Properties":{"id":"20230727000865-amxzpou","updated":"20230727000865"},"Children":[{"Type":"NodeText","Data":"由valueCtx数据结构定义可见，valueCtx.key和valueCtx.val分别代表其key和value值。 实现也很简单："}]},{"ID":"20230727000866-g7df7jb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000866-g7df7jb","updated":"20230727000866"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *valueCtx) Value(key interface{}) interface{} {\n    if c.key == key {\n        return c.val\n    }\n    return c.Context.Value(key)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000867-macjent","Type":"NodeParagraph","Properties":{"id":"20230727000867-macjent","updated":"20230727000867"},"Children":[{"Type":"NodeText","Data":"这里有个细节需要关注一下，即"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"当前context查找不到key时，会向父节点查找，如果查询不到则最终返回interface{}。也就是说，可以通过子context查询到父的value值。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000868-louxszk","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000868-louxszk","updated":"20230727000868"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.4.2 WithValue（）方法实现"}]},{"ID":"20230727000869-klh5yqe","Type":"NodeParagraph","Properties":{"id":"20230727000869-klh5yqe","updated":"20230727000869"},"Children":[{"Type":"NodeText","Data":"WithValue()实现也是非常的简单, 伪代码如下："}]},{"ID":"20230727000870-o59zq2f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000870-o59zq2f","updated":"20230727000870"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func WithValue(parent Context, key, val interface{}) Context {\n    if key == nil {\n        panic(\"nil key\")\n    }\n    return \u0026valueCtx{parent, key, val}\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000871-79h6qvo","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000871-79h6qvo","updated":"20230727000871"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.4.3 典型使用案例"}]},{"ID":"20230727000872-be1kohw","Type":"NodeParagraph","Properties":{"id":"20230727000872-be1kohw","updated":"20230727000872"},"Children":[{"Type":"NodeText","Data":"下面示例程序展示valueCtx的用法："}]},{"ID":"20230727000873-8n8weoh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000873-8n8weoh","updated":"20230727000873"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"context\"\n)\n\nfunc HandelRequest(ctx context.Context) {\n    for {\n        select {\n        case \u003c-ctx.Done():\n            fmt.Println(\"HandelRequest Done.\")\n            return\n        default:\n            fmt.Println(\"HandelRequest running, parameter: \", ctx.Value(\"parameter\"))\n            time.Sleep(2 * time.Second)\n        }\n    }\n}\n\nfunc main() {\n    ctx := context.WithValue(context.Background(), \"parameter\", \"1\")\n    go HandelRequest(ctx)\n\n    time.Sleep(10 * time.Second)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000874-4llkhrz","Type":"NodeParagraph","Properties":{"id":"20230727000874-4llkhrz","updated":"20230727000874"},"Children":[{"Type":"NodeText","Data":"上例main()中通过WithValue()方法获得一个context，需要指定一个父context、key和value。然后通将该context传递给子协程HandelRequest，子协程可以读取到context的key-value。"}]},{"ID":"20230727000875-blhdtg9","Type":"NodeParagraph","Properties":{"id":"20230727000875-blhdtg9","updated":"20230727000875"},"Children":[{"Type":"NodeText","Data":"注意："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"本例中子协程无法自动结束，因为context是不支持cancle的，也就是说\u0026lt;-ctx.Done()永远无法返回。如果需要返回，需要在创建context时指定一个可以cancel的context作为父节点，使用父节点的cancel()在适当的时机结束整个context。"}]},{"ID":"20230727000876-6z3h1zv","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000876-6z3h1zv","updated":"20230727000876"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"总结"}]},{"ID":"20230727000877-0og6lai","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000877-0og6lai","updated":"20230727000877"},"Children":[{"ID":"20230727000878-e3bayrx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000878-e3bayrx","updated":"20230727000878"},"Children":[{"ID":"20230727000879-lpa50k2","Type":"NodeParagraph","Properties":{"id":"20230727000879-lpa50k2","updated":"20230727000879"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"Context仅仅是一个接口定义，根据实现的不同，可以衍生出不同的context类型；"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]},{"ID":"20230727000880-l5qbqwd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000880-l5qbqwd","updated":"20230727000880"},"Children":[{"ID":"20230727000881-g4qfo5i","Type":"NodeParagraph","Properties":{"id":"20230727000881-g4qfo5i","updated":"20230727000881"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"cancelCtx实现了Context接口，通过WithCancel()创建cancelCtx实例；"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]},{"ID":"20230727000882-v33d30l","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000882-v33d30l","updated":"20230727000882"},"Children":[{"ID":"20230727000883-6kmx92g","Type":"NodeParagraph","Properties":{"id":"20230727000883-6kmx92g","updated":"20230727000883"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"timerCtx实现了Context接口，通过WithDeadline()和WithTimeout()创建timerCtx实例；"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]},{"ID":"20230727000884-bmt15n9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000884-bmt15n9","updated":"20230727000884"},"Children":[{"ID":"20230727000885-ck8yjqb","Type":"NodeParagraph","Properties":{"id":"20230727000885-ck8yjqb","updated":"20230727000885"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"valueCtx实现了Context接口，通过WithValue()创建valueCtx实例；"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]},{"ID":"20230727000886-lur499q","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000886-lur499q","updated":"20230727000886"},"Children":[{"ID":"20230727000887-bse4gia","Type":"NodeParagraph","Properties":{"id":"20230727000887-bse4gia","updated":"20230727000887"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"三种context实例可互为父节点，从而可以组合成不同的应用形式；"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]}]}]}]}