{"ID":"20230724231645-mbr66tv","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231645-mbr66tv","title":"encoding","updated":"20230724231645"},"Children":[{"ID":"20230724231646-hzgtxn6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231646-hzgtxn6","updated":"20230724231646"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"encoding"}]},{"ID":"20230724231647-c66f4me","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231647-c66f4me","updated":"20230724231647"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"encoding\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231648-27i2r0s","Type":"NodeParagraph","Properties":{"id":"20230724231648-27i2r0s","updated":"20230724231648"},"Children":[{"Type":"NodeText","Data":"encoding包定义了供其它包使用的可以将数据在字节水平和文本表示之间转换的接口。encoding/gob、encoding/json、encoding/xml三个包都会检查使用这些接口。因此，只要实现了这些接口一次，就可以在多个包里使用。标准包内建类型time.Time和net.IP都实现了这些接口。接口是成对的，分别产生和还原编码后的数据。"}]},{"ID":"20230724231649-shei1gf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231649-shei1gf","updated":"20230724231649"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/encoding.go?name=release#18","TextMarkTextContent":"BinaryMarshaler"}]},{"ID":"20230724231650-n4ly5eo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231650-n4ly5eo","updated":"20230724231650"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type BinaryMarshaler interface {\n    MarshalBinary() (data []byte, err error)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231651-2rwmos6","Type":"NodeParagraph","Properties":{"id":"20230724231651-2rwmos6","updated":"20230724231651"},"Children":[{"Type":"NodeText","Data":"实现了BinaryMarshaler接口的类型可以将自身序列化为binary格式。"}]},{"ID":"20230724231652-6pvrnlg","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231652-6pvrnlg","updated":"20230724231652"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/encoding.go?name=release#28","TextMarkTextContent":"BinaryUnmarshaler"}]},{"ID":"20230724231653-6f0snkx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231653-6f0snkx","updated":"20230724231653"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type BinaryUnmarshaler interface {\n    UnmarshalBinary(data []byte) error\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231654-yxmg5ld","Type":"NodeParagraph","Properties":{"id":"20230724231654-yxmg5ld","updated":"20230724231654"},"Children":[{"Type":"NodeText","Data":"实现了BinaryUnmarshaler接口的类型可以将binary格式表示的自身解序列化。"}]},{"ID":"20230724231655-u8stlbt","Type":"NodeParagraph","Properties":{"id":"20230724231655-u8stlbt","updated":"20230724231655"},"Children":[{"Type":"NodeText","Data":"UnmarshalBinary必须可以解码MarshalBinary生成的binary格式数据。本函数可能会对data内容作出修改，所以如果要保持data的数据请事先进行拷贝。"}]},{"ID":"20230724231656-niv2kos","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231656-niv2kos","updated":"20230724231656"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/encoding.go?name=release#36","TextMarkTextContent":"TextMarshaler"}]},{"ID":"20230724231657-6o6cxft","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231657-6o6cxft","updated":"20230724231657"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type TextMarshaler interface {\n    MarshalText() (text []byte, err error)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231658-zpjpr7h","Type":"NodeParagraph","Properties":{"id":"20230724231658-zpjpr7h","updated":"20230724231658"},"Children":[{"Type":"NodeText","Data":"实现了BinaryMarshaler接口的类型可以将自身序列化为utf-8编码的textual格式。"}]},{"ID":"20230724231659-9u3d4kl","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231659-9u3d4kl","updated":"20230724231659"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/encoding.go?name=release#46","TextMarkTextContent":"TextUnmarshaler"}]},{"ID":"20230724231660-cnblk7d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231660-cnblk7d","updated":"20230724231660"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type TextUnmarshaler interface {\n    UnmarshalText(text []byte) error\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231661-tg07d8y","Type":"NodeParagraph","Properties":{"id":"20230724231661-tg07d8y","updated":"20230724231661"},"Children":[{"Type":"NodeText","Data":"实现了TextUnmarshaler接口的类型可以将textual格式表示的自身解序列化。"}]},{"ID":"20230724231662-cfmgp8p","Type":"NodeParagraph","Properties":{"id":"20230724231662-cfmgp8p","updated":"20230724231662"},"Children":[{"Type":"NodeText","Data":"UnmarshalText必须可以解码MarshalText生成的textual格式数据。本函数可能会对data内容作出修改，所以如果要保持data的数据请事先进行拷贝。"}]}]}