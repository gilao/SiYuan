{"ID":"20230724231520-9u4nii6","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231520-9u4nii6","title":"crypto-tls","updated":"20230724231520"},"Children":[{"ID":"20230724231521-jae4pfp","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231521-jae4pfp","updated":"20230724231521"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"crypto-tls"}]},{"ID":"20230724231522-mp3y7n5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231522-mp3y7n5","updated":"20230724231522"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"crypto/tls\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231523-w5bjurs","Type":"NodeParagraph","Properties":{"id":"20230724231523-w5bjurs","updated":"20230724231523"},"Children":[{"Type":"NodeText","Data":"tls包实现了TLS 1.2，细节参见"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://tools.ietf.org/html/rfc5246","TextMarkTextContent":"RFC 5246"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230724231524-acyhf40","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231524-acyhf40","updated":"20230724231524"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Constants"}]},{"ID":"20230724231525-va0sjrf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231525-va0sjrf","updated":"20230724231525"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    TLS_RSA_WITH_RC4_128_SHA                uint16 = 0x0005\n    TLS_RSA_WITH_3DES_EDE_CBC_SHA           uint16 = 0x000a\n    TLS_RSA_WITH_AES_128_CBC_SHA            uint16 = 0x002f\n    TLS_RSA_WITH_AES_256_CBC_SHA            uint16 = 0x0035\n    TLS_ECDHE_ECDSA_WITH_RC4_128_SHA        uint16 = 0xc007\n    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA    uint16 = 0xc009\n    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA    uint16 = 0xc00a\n    TLS_ECDHE_RSA_WITH_RC4_128_SHA          uint16 = 0xc011\n    TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA     uint16 = 0xc012\n    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA      uint16 = 0xc013\n    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA      uint16 = 0xc014\n    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256   uint16 = 0xc02f\n    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 uint16 = 0xc02b\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231526-587qtw5","Type":"NodeParagraph","Properties":{"id":"20230724231526-587qtw5","updated":"20230724231526"},"Children":[{"Type":"NodeText","Data":"可选的加密组的ID的列表。参见：http://www.iana.org/assignments/tls-parameters/tls-parameters.xml"}]},{"ID":"20230724231527-25tsb9y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231527-25tsb9y","updated":"20230724231527"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    VersionSSL30 = 0x0300\n    VersionTLS10 = 0x0301\n    VersionTLS11 = 0x0302\n    VersionTLS12 = 0x0303\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231528-1xj6j8m","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231528-1xj6j8m","updated":"20230724231528"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/common.go?name=release#171","TextMarkTextContent":"ClientAuthType"}]},{"ID":"20230724231529-cr7j1za","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231529-cr7j1za","updated":"20230724231529"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ClientAuthType int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231530-dicm5c2","Type":"NodeParagraph","Properties":{"id":"20230724231530-dicm5c2","updated":"20230724231530"},"Children":[{"Type":"NodeText","Data":"ClientAuthType类型声明服务端将遵循的TLS客户端验证策略。"}]},{"ID":"20230724231531-3phz87d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231531-3phz87d","updated":"20230724231531"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    NoClientCert ClientAuthType = iota\n    RequestClientCert\n    RequireAnyClientCert\n    VerifyClientCertIfGiven\n    RequireAndVerifyClientCert\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231532-6neqkog","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231532-6neqkog","updated":"20230724231532"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/common.go?name=release#87","TextMarkTextContent":"CurveID"}]},{"ID":"20230724231533-ibgny8b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231533-ibgny8b","updated":"20230724231533"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type CurveID uint16\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231534-s2egs24","Type":"NodeParagraph","Properties":{"id":"20230724231534-s2egs24","updated":"20230724231534"},"Children":[{"Type":"NodeText","Data":"CurveID是TLS椭圆曲线的标识符的类型。"}]},{"ID":"20230724231535-x9i5ouw","Type":"NodeParagraph","Properties":{"id":"20230724231535-x9i5ouw","updated":"20230724231535"},"Children":[{"Type":"NodeText","Data":"参见： http://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-8"}]},{"ID":"20230724231536-80ms7nk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231536-80ms7nk","updated":"20230724231536"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    CurveP256 CurveID = 23\n    CurveP384 CurveID = 24\n    CurveP521 CurveID = 25\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231537-rsv1c1c","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231537-rsv1c1c","updated":"20230724231537"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/common.go?name=release#440","TextMarkTextContent":"Certificate"}]},{"ID":"20230724231538-g8twzrp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231538-g8twzrp","updated":"20230724231538"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Certificate struct {\n    Certificate [][]byte\n    PrivateKey  crypto.PrivateKey // 只支持rsa.PrivateKey和*ecdsa.PrivateKey类型\n    // OCSPStaple包含一个可选的OCSP staple的回复，当客户端要求时用于回复客户端\n    OCSPStaple []byte\n    // Leaf是解析后的叶证书，可以使用x509.ParseCertificate初始化，\n    // 以简化每次TLS客户端进行客户端认证时握手的过程。如果Leaf是nil，叶证书会根据需要解析。\n    Leaf *x509.Certificate\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231539-2vtlnjs","Type":"NodeParagraph","Properties":{"id":"20230724231539-2vtlnjs","updated":"20230724231539"},"Children":[{"Type":"NodeText","Data":"Certificate是一个或多个证书的链条，叶证书在最前面。"}]},{"ID":"20230724231540-1vgxk3j","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231540-1vgxk3j","updated":"20230724231540"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/tls.go?name=release#170","TextMarkTextContent":"LoadX509KeyPair"}]},{"ID":"20230724231541-z7ocvz1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231541-z7ocvz1","updated":"20230724231541"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func LoadX509KeyPair(certFile, keyFile string) (cert Certificate, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231542-av0ungy","Type":"NodeParagraph","Properties":{"id":"20230724231542-av0ungy","updated":"20230724231542"},"Children":[{"Type":"NodeText","Data":"LoadX509KeyPair读取并解析一对文件获取公钥和私钥。这些文件必须是PEM编码的。"}]},{"ID":"20230724231543-3bs7cd0","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231543-3bs7cd0","updated":"20230724231543"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/tls.go?name=release#184","TextMarkTextContent":"X509KeyPair"}]},{"ID":"20230724231544-cp4uitz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231544-cp4uitz","updated":"20230724231544"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func X509KeyPair(certPEMBlock, keyPEMBlock []byte) (cert Certificate, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231545-ibykbps","Type":"NodeParagraph","Properties":{"id":"20230724231545-ibykbps","updated":"20230724231545"},"Children":[{"Type":"NodeText","Data":"X509KeyPair解析一对PEM编码的数据获取公钥和私钥。"}]},{"ID":"20230724231546-5poxh4v","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231546-5poxh4v","updated":"20230724231546"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/common.go?name=release#183","TextMarkTextContent":"ClientSessionState"}]},{"ID":"20230724231547-to21vf9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231547-to21vf9","updated":"20230724231547"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ClientSessionState struct {\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231548-f0qzjcw","Type":"NodeParagraph","Properties":{"id":"20230724231548-f0qzjcw","updated":"20230724231548"},"Children":[{"Type":"NodeText","Data":"ClientSessionState包含客户端所需的用于恢复TLS会话的状态。"}]},{"ID":"20230724231549-eaqn4mt","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231549-eaqn4mt","updated":"20230724231549"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/common.go?name=release#195","TextMarkTextContent":"ClientSessionCache"}]},{"ID":"20230724231550-hhlyaii","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231550-hhlyaii","updated":"20230724231550"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ClientSessionCache interface {\n    // Get搜索与给出的键相关联的*ClientSessionState并用ok说明是否找到\n    Get(sessionKey string) (session *ClientSessionState, ok bool)\n    // Put将*ClientSessionState与给出的键关联并写入缓存中\n    Put(sessionKey string, cs *ClientSessionState)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231551-p7v6nga","Type":"NodeParagraph","Properties":{"id":"20230724231551-p7v6nga","updated":"20230724231551"},"Children":[{"Type":"NodeText","Data":"ClientSessionCache是ClientSessionState对象的缓存，可以被客户端用于恢复与某个服务端的TLS会话。本类型的实现期望被不同线程并行的调用。"}]},{"ID":"20230724231552-40hjzeb","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231552-40hjzeb","updated":"20230724231552"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/common.go?name=release#483","TextMarkTextContent":"NewLRUClientSessionCache"}]},{"ID":"20230724231553-kzatx3d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231553-kzatx3d","updated":"20230724231553"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewLRUClientSessionCache(capacity int) ClientSessionCache\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231554-p9gqm44","Type":"NodeParagraph","Properties":{"id":"20230724231554-p9gqm44","updated":"20230724231554"},"Children":[{"Type":"NodeText","Data":"函数使用给出的容量创建一个采用LRU策略的ClientSessionState，如果capacity\u003c1会采用默认容量。"}]},{"ID":"20230724231555-gbikwvh","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231555-gbikwvh","updated":"20230724231555"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/common.go?name=release#208","TextMarkTextContent":"Config"}]},{"ID":"20230724231556-p5qfiyg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231556-p5qfiyg","updated":"20230724231556"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Config struct {\n    // Rand提供用于生成随机数和RSA盲签名的熵源，该接口必须能安全的用于并发。\n    // 如果Rand是nil，会使用crypto/rand包的密码用随机数读取器。\n    Rand io.Reader\n    // Time返回当前时间，如果是nil会使用time.Now。\n    Time func() time.Time\n    // 不少于一个证书的链，用于提供给连接的另一端，服务端必须保证至少有一个证书。\n    Certificates []Certificate\n    // NameToCertificate映射证书名到证书。\n    // 注意证书名可以是\"*.example.com \"的格式，因此证书名不是必须为域名。\n    // 参见Config.BuildNameToCertificate方法。\n    // 如本字段为nil，Certificates字段的第一个成员会被用于所有连接。\n    NameToCertificate map[string]*Certificate\n    // RootCAs定义权威根证书，客户端会在验证服务端证书时用到本字段。\n    // 如果RootCAs是nil，TLS会使用主机的根CA池。\n    RootCAs *x509.CertPool\n    // 可以支持的应用层协议的列表\n    NextProtos []string\n    // 用于认证返回证书的主机名（除非设置了InsecureSkipVerify）。\n    // 也被用在客户端的握手里，以支持虚拟主机。\n    ServerName string\n    // ClientAuth决定服务端的认证策略，默认是NoClientCert。\n    ClientAuth ClientAuthType\n    // ClientCAs定义权威根证书，服务端会在采用ClientAuth策略时使用它来认证客户端证书。\n    ClientCAs *x509.CertPool\n    // InsecureSkipVerify控制客户端是否认证服务端的证书链和主机名。\n    // 如果InsecureSkipVerify为真，TLS连接会接受服务端提供的任何证书和该证书中的任何主机名。\n    // 此时，TLS连接容易遭受中间人攻击，这种设置只应用于测试。\n    InsecureSkipVerify bool\n    // CipherSuites是支持的加密组合列表。如果CipherSuites为nil，\n    // TLS连接会使用本包的实现支持的密码组合列表。\n    CipherSuites []uint16\n    // 本字段控制服务端是选择客户端最期望的密码组合还是服务端最期望的密码组合。\n    // 如果本字段为真，服务端会优先选择CipherSuites字段中靠前的密码组合使用。\n    PreferServerCipherSuites bool\n    // SessionTicketsDisabled可以设为假以关闭会话恢复支持。\n    SessionTicketsDisabled bool\n    // SessionTicketKey被TLS服务端用于提供哦你会话恢复服务，参见RFC 5077。\n    // 如果本字段为零值，它会在第一次服务端握手之前填写上随机数据。\n    //\n    // 如果多个服务端都在终止和同一主机的连接，它们应拥有相同的SessionTicketKey。\n    // 如果SessionTicketKey泄露了，使用该键的之前的记录和未来的TLS连接可能会被盗用。\n    SessionTicketKey [32]byte\n    // SessionCache是ClientSessionState的缓存，用于恢复TLS会话。\n    ClientSessionCache ClientSessionCache\n    // MinVersion包含可接受的最低SSL/TLS版本。如果为0，会将SSLv3作为最低版本。\n    MinVersion uint16\n    // MaxVersion包含可接受的最高SSL/TLS版本。\n    // 如果为0，会将本包使用的版本作为最高版本，目前是TLS 1.2。\n    MaxVersion uint16\n    // 本字段包含用于ECDHE握手的椭圆曲线的ID，按优先度排序。如为空，会使用默认值。\n    CurvePreferences []CurveID\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231557-c3zb7cv","Type":"NodeParagraph","Properties":{"id":"20230724231557-c3zb7cv","updated":"20230724231557"},"Children":[{"Type":"NodeText","Data":"Config结构类型用于配置TLS客户端或服务端。在本类型的值提供给TLS函数后，就不应再修改该值。Config类型值可能被重用；tls包也不会修改它。"}]},{"ID":"20230724231558-urj3yo3","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231558-urj3yo3","updated":"20230724231558"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Config) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/common.go?name=release#422","TextMarkTextContent":"BuildNameToCertificate"}]},{"ID":"20230724231559-57iswiq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231559-57iswiq","updated":"20230724231559"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Config) BuildNameToCertificate()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231560-eu3vzvo","Type":"NodeParagraph","Properties":{"id":"20230724231560-eu3vzvo","updated":"20230724231560"},"Children":[{"Type":"NodeText","Data":"BuildNameToCertificate解析c.Certificates并将每一个叶证书的CommonName和SubjectAlternateName字段用于创建c.NameToCertificate。"}]},{"ID":"20230724231561-leku4e1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231561-leku4e1","updated":"20230724231561"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/common.go?name=release#157","TextMarkTextContent":"ConnectionState"}]},{"ID":"20230724231562-v1slgq5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231562-v1slgq5","updated":"20230724231562"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ConnectionState struct {\n    Version                    uint16                // 连接使用的TLS版本\n    HandshakeComplete          bool                  // TLS握手是否完成\n    DidResume                  bool                  // 连接恢复了之前的TLS连接\n    CipherSuite                uint16                // 使用的加密程序组合\n    NegotiatedProtocol         string                // 商定的下一层协议\n    NegotiatedProtocolIsMutual bool                  // 商定的协议是服务端建议的\n    ServerName                 string                // 服务端名（仅服务端有）\n    PeerCertificates           []*x509.Certificate   // 远端提供的证书链\n    VerifiedChains             [][]*x509.Certificate // 从PeerCertificates建立的认证链\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231563-jp3uhus","Type":"NodeParagraph","Properties":{"id":"20230724231563-jp3uhus","updated":"20230724231563"},"Children":[{"Type":"NodeText","Data":"ConnectionState类型记录连接的基本TLS细节。"}]},{"ID":"20230724231564-9mmkf0u","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231564-9mmkf0u","updated":"20230724231564"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#24","TextMarkTextContent":"Conn"}]},{"ID":"20230724231565-2l4106n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231565-2l4106n","updated":"20230724231565"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Conn struct {\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231566-b9omddv","Type":"NodeParagraph","Properties":{"id":"20230724231566-b9omddv","updated":"20230724231566"},"Children":[{"Type":"NodeText","Data":"Conn代表一个安全连接。本类型实现了net.Conn接口。"}]},{"ID":"20230724231567-hadu3zp","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231567-hadu3zp","updated":"20230724231567"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#63","TextMarkTextContent":"LocalAddr"}]},{"ID":"20230724231568-qgz1o2x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231568-qgz1o2x","updated":"20230724231568"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) LocalAddr() net.Addr\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231569-dl9zn09","Type":"NodeParagraph","Properties":{"id":"20230724231569-dl9zn09","updated":"20230724231569"},"Children":[{"Type":"NodeText","Data":"LocalAddr返回本地网络地址。"}]},{"ID":"20230724231570-xy517n6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231570-xy517n6","updated":"20230724231570"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#68","TextMarkTextContent":"RemoteAddr"}]},{"ID":"20230724231571-loxssy9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231571-loxssy9","updated":"20230724231571"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) RemoteAddr() net.Addr\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231572-n6ic1cu","Type":"NodeParagraph","Properties":{"id":"20230724231572-n6ic1cu","updated":"20230724231572"},"Children":[{"Type":"NodeText","Data":"LocalAddr返回远端网络地址。"}]},{"ID":"20230724231573-mz2xoca","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231573-mz2xoca","updated":"20230724231573"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#982","TextMarkTextContent":"ConnectionState"}]},{"ID":"20230724231574-7ql4113","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231574-7ql4113","updated":"20230724231574"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) ConnectionState() ConnectionState\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231575-69wa8c2","Type":"NodeParagraph","Properties":{"id":"20230724231575-69wa8c2","updated":"20230724231575"},"Children":[{"Type":"NodeText","Data":"ConnectionState返回该连接的基本TLS细节。"}]},{"ID":"20230724231576-fxmpwx8","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231576-fxmpwx8","updated":"20230724231576"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#75","TextMarkTextContent":"SetDeadline"}]},{"ID":"20230724231577-dbhksdr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231577-dbhksdr","updated":"20230724231577"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) SetDeadline(t time.Time) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231578-stbktub","Type":"NodeParagraph","Properties":{"id":"20230724231578-stbktub","updated":"20230724231578"},"Children":[{"Type":"NodeText","Data":"SetDeadline设置该连接的读写操作绝对期限。t为Time零值表示不设置超时。在一次Write/Read方法超时后，TLS连接状态会被破坏，之后所有的读写操作都会返回同一错误。"}]},{"ID":"20230724231579-v2ai59h","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231579-v2ai59h","updated":"20230724231579"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#81","TextMarkTextContent":"SetReadDeadline"}]},{"ID":"20230724231580-a1vhshe","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231580-a1vhshe","updated":"20230724231580"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) SetReadDeadline(t time.Time) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231581-x0g7eu7","Type":"NodeParagraph","Properties":{"id":"20230724231581-x0g7eu7","updated":"20230724231581"},"Children":[{"Type":"NodeText","Data":"SetReadDeadline设置该连接的读操作绝对期限。t为Time零值表示不设置超时。"}]},{"ID":"20230724231582-elzpfkq","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231582-elzpfkq","updated":"20230724231582"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#88","TextMarkTextContent":"SetWriteDeadline"}]},{"ID":"20230724231583-l5tc95c","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231583-l5tc95c","updated":"20230724231583"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) SetWriteDeadline(t time.Time) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231584-vwch4e0","Type":"NodeParagraph","Properties":{"id":"20230724231584-vwch4e0","updated":"20230724231584"},"Children":[{"Type":"NodeText","Data":"SetReadDeadline设置该连接的写操作绝对期限。t为Time零值表示不设置超时。在一次Write方法超时后，TLS连接状态会被破坏，之后所有的写操作都会返回同一错误。"}]},{"ID":"20230724231585-qd0x4qt","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231585-qd0x4qt","updated":"20230724231585"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#963","TextMarkTextContent":"Handshake"}]},{"ID":"20230724231586-iq2nap5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231586-iq2nap5","updated":"20230724231586"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) Handshake() error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231587-izlzrj7","Type":"NodeParagraph","Properties":{"id":"20230724231587-izlzrj7","updated":"20230724231587"},"Children":[{"Type":"NodeText","Data":"Handshake执行客户端或服务端的握手协议（如果还没有执行的话）。本包的大多数应用不需要显式的调用Handsake方法：第一次Read或Write方法会自动调用本方法。"}]},{"ID":"20230724231588-ak72yyo","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231588-ak72yyo","updated":"20230724231588"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#1014","TextMarkTextContent":"VerifyHostname"}]},{"ID":"20230724231589-54dydwp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231589-54dydwp","updated":"20230724231589"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) VerifyHostname(host string) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231590-bvkv9cf","Type":"NodeParagraph","Properties":{"id":"20230724231590-bvkv9cf","updated":"20230724231590"},"Children":[{"Type":"NodeText","Data":"VerifyHostname检查用于连接到host的对等实体证书链是否合法。如果合法，它会返回nil；否则，会返回一个描述该问题的错误。"}]},{"ID":"20230724231591-do0ilgb","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231591-do0ilgb","updated":"20230724231591"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#1004","TextMarkTextContent":"OCSPResponse"}]},{"ID":"20230724231592-cyd4m6v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231592-cyd4m6v","updated":"20230724231592"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) OCSPResponse() []byte\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231593-sj2lx7d","Type":"NodeParagraph","Properties":{"id":"20230724231593-sj2lx7d","updated":"20230724231593"},"Children":[{"Type":"NodeText","Data":"OCSPResponse返回来自服务端的OCSP staple回复（如果有）。只有客户端可以使用本方法。"}]},{"ID":"20230724231594-lfgzehi","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231594-lfgzehi","updated":"20230724231594"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#883","TextMarkTextContent":"Read"}]},{"ID":"20230724231595-fpf5o2f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231595-fpf5o2f","updated":"20230724231595"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) Read(b []byte) (n int, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231596-7e6ugkm","Type":"NodeParagraph","Properties":{"id":"20230724231596-7e6ugkm","updated":"20230724231596"},"Children":[{"Type":"NodeText","Data":"Read从连接读取数据，可设置超时，参见SetDeadline和SetReadDeadline。"}]},{"ID":"20230724231597-lpfgou9","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231597-lpfgou9","updated":"20230724231597"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#841","TextMarkTextContent":"Write"}]},{"ID":"20230724231598-l9p3xr2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231598-l9p3xr2","updated":"20230724231598"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) Write(b []byte) (int, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231599-335rtpn","Type":"NodeParagraph","Properties":{"id":"20230724231599-335rtpn","updated":"20230724231599"},"Children":[{"Type":"NodeText","Data":"Write将数据写入连接，可设置超时，参见SetDeadline和SetWriteDeadline。"}]},{"ID":"20230724231600-71jra68","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231600-71jra68","updated":"20230724231600"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Conn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/conn.go?name=release#944","TextMarkTextContent":"Close"}]},{"ID":"20230724231601-ssuk1wo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231601-ssuk1wo","updated":"20230724231601"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Conn) Close() error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231602-f4s8rg2","Type":"NodeParagraph","Properties":{"id":"20230724231602-f4s8rg2","updated":"20230724231602"},"Children":[{"Type":"NodeText","Data":"Close关闭连接。"}]},{"ID":"20230724231603-v6a2p0i","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231603-v6a2p0i","updated":"20230724231603"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/tls.go?name=release#33","TextMarkTextContent":"Client"}]},{"ID":"20230724231604-tr35sci","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231604-tr35sci","updated":"20230724231604"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Client(conn net.Conn, config *Config) *Conn\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231605-ee1prg9","Type":"NodeParagraph","Properties":{"id":"20230724231605-ee1prg9","updated":"20230724231605"},"Children":[{"Type":"NodeText","Data":"Client使用conn作为下层传输接口返回一个TLS连接的客户端侧。配置参数config必须是非nil的且必须设置了ServerName或者InsecureSkipVerify字段。"}]},{"ID":"20230724231606-lssk9fp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231606-lssk9fp","updated":"20230724231606"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/tls.go?name=release#25","TextMarkTextContent":"Server"}]},{"ID":"20230724231607-k98a0rd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231607-k98a0rd","updated":"20230724231607"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Server(conn net.Conn, config *Config) *Conn\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231608-iv44id4","Type":"NodeParagraph","Properties":{"id":"20230724231608-iv44id4","updated":"20230724231608"},"Children":[{"Type":"NodeText","Data":"Server使用conn作为下层传输接口返回一个TLS连接的服务端侧。配置参数config必须是非nil的且必须含有至少一个证书。"}]},{"ID":"20230724231609-q33ujph","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231609-q33ujph","updated":"20230724231609"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/tls.go?name=release#164","TextMarkTextContent":"Dial"}]},{"ID":"20230724231610-nyy9qzs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231610-nyy9qzs","updated":"20230724231610"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Dial(network, addr string, config *Config) (*Conn, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231611-bd47sev","Type":"NodeParagraph","Properties":{"id":"20230724231611-bd47sev","updated":"20230724231611"},"Children":[{"Type":"NodeText","Data":"Dial使用net.Dial连接指定的网络和地址，然后发起TLS握手，返回生成的TLS连接。Dial会将nil的配置视为零值的配置；参见Config类型的文档获取细节。"}]},{"ID":"20230724231612-dhbuu7p","Type":"NodeParagraph","Properties":{"id":"20230724231612-dhbuu7p","updated":"20230724231612"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231613-l74rxty","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231613-l74rxty","updated":"20230724231613"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/tls.go?name=release#93","TextMarkTextContent":"DialWithDialer"}]},{"ID":"20230724231614-p8xqc46","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231614-p8xqc46","updated":"20230724231614"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func DialWithDialer(dialer *net.Dialer, network, addr string, config *Config) (*Conn, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231615-5uw4pgq","Type":"NodeParagraph","Properties":{"id":"20230724231615-5uw4pgq","updated":"20230724231615"},"Children":[{"Type":"NodeText","Data":"DialWithDialer使用dialer.Dial连接指定的网络和地址，然后发起TLS握手，返回生成的TLS连接。dialer中的超时和期限设置会将连接和TLS握手作为一个整体来应用。"}]},{"ID":"20230724231616-bl9q9wz","Type":"NodeParagraph","Properties":{"id":"20230724231616-bl9q9wz","updated":"20230724231616"},"Children":[{"Type":"NodeText","Data":"DialWithDialer会将nil的配置视为零值的配置；参见Config类型的文档获取细节。"}]},{"ID":"20230724231617-v66m1nq","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231617-v66m1nq","updated":"20230724231617"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/tls.go?name=release#69","TextMarkTextContent":"Listen"}]},{"ID":"20230724231618-js8v95a","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231618-js8v95a","updated":"20230724231618"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Listen(network, laddr string, config *Config) (net.Listener, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231619-eylcf6g","Type":"NodeParagraph","Properties":{"id":"20230724231619-eylcf6g","updated":"20230724231619"},"Children":[{"Type":"NodeText","Data":"函数创建一个TLS监听器，使用net.Listen函数接收给定地址上的连接。配置参数config必须是非nil的且必须含有至少一个证书。"}]},{"ID":"20230724231620-jtklgt0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231620-jtklgt0","updated":"20230724231620"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/crypto/tls/tls.go?name=release#58","TextMarkTextContent":"NewListener"}]},{"ID":"20230724231621-jshx986","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231621-jshx986","updated":"20230724231621"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewListener(inner net.Listener, config *Config) net.Listener\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231622-9goxvk2","Type":"NodeParagraph","Properties":{"id":"20230724231622-9goxvk2","updated":"20230724231622"},"Children":[{"Type":"NodeText","Data":"函数创建一个TLS监听器，该监听器接受inner接收到的每一个连接，并调用Server函数包装这些连接。配置参数config必须是非nil的且必须含有至少一个证书。"}]}]}