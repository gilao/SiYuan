{"ID":"20230724231407-a8fvybp","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231407-a8fvybp","title":"encoding-xml","updated":"20230724231407"},"Children":[{"ID":"20230724231408-f1r1d7t","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231408-f1r1d7t","updated":"20230724231408"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"encoding-xml"}]},{"ID":"20230724231409-l06q6af","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231409-l06q6af","updated":"20230724231409"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"encoding/xml\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231410-ww35hc5","Type":"NodeParagraph","Properties":{"id":"20230724231410-ww35hc5","updated":"20230724231410"},"Children":[{"Type":"NodeText","Data":"Package xml implements a simple XML 1.0 parser that understands XML name spaces."}]},{"ID":"20230724231411-0v0sx4h","Type":"NodeParagraph","Properties":{"id":"20230724231411-0v0sx4h","updated":"20230724231411"},"Children":[{"Type":"NodeText","Data":"包xml实现了一个简单的XML1.0解析器，它可以理解xml名称空间。"}]},{"ID":"20230724231412-24otg6u","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231412-24otg6u","updated":"20230724231412"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Constants"}]},{"ID":"20230724231413-a9htjuk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231413-a9htjuk","updated":"20230724231413"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    // 适用于本包Marshal输出的一般性XML header\n    // 本常数并不会自动添加到本包的输出里，这里提供主要是出于便利的目的\n    Header = `\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e` + \"\\n\"\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231414-gncpjol","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231414-gncpjol","updated":"20230724231414"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Variables"}]},{"ID":"20230724231415-wtdzc33","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231415-wtdzc33","updated":"20230724231415"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var HTMLAutoClose = htmlAutoClose\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231416-8ga6q26","Type":"NodeParagraph","Properties":{"id":"20230724231416-8ga6q26","updated":"20230724231416"},"Children":[{"Type":"NodeText","Data":"HTMLAutoClose是应当考虑到自动关闭的HTML元素的集合。"}]},{"ID":"20230724231417-bqw5bha","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231417-bqw5bha","updated":"20230724231417"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var HTMLEntity = htmlEntity\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231418-wvib5o2","Type":"NodeParagraph","Properties":{"id":"20230724231418-wvib5o2","updated":"20230724231418"},"Children":[{"Type":"NodeText","Data":"HTMLEntity是标准HTML entity字符到其翻译的映射。"}]},{"ID":"20230724231419-mp9b7sn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231419-mp9b7sn","updated":"20230724231419"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#29","TextMarkTextContent":"SyntaxError"}]},{"ID":"20230724231420-5errojs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231420-5errojs","updated":"20230724231420"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type SyntaxError struct {\n    Msg  string\n    Line int\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231421-dp39ue4","Type":"NodeParagraph","Properties":{"id":"20230724231421-dp39ue4","updated":"20230724231421"},"Children":[{"Type":"NodeText","Data":"SyntaxError代表XML输入流的格式错误。"}]},{"ID":"20230724231422-20a6iwz","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231422-20a6iwz","updated":"20230724231422"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*SyntaxError) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#34","TextMarkTextContent":"Error"}]},{"ID":"20230724231423-56w7c9c","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231423-56w7c9c","updated":"20230724231423"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (e *SyntaxError) Error() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231424-w82fn3s","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231424-w82fn3s","updated":"20230724231424"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/typeinfo.go?name=release#336","TextMarkTextContent":"TagPathError"}]},{"ID":"20230724231425-s1bempb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231425-s1bempb","updated":"20230724231425"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type TagPathError struct {\n    Struct       reflect.Type\n    Field1, Tag1 string\n    Field2, Tag2 string\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231426-0r0qh3l","Type":"NodeParagraph","Properties":{"id":"20230724231426-0r0qh3l","updated":"20230724231426"},"Children":[{"Type":"NodeText","Data":"反序列化时，如果字段标签的路径有冲突，就会返回TagPathError。"}]},{"ID":"20230724231427-dczbb7c","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231427-dczbb7c","updated":"20230724231427"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*TagPathError) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/typeinfo.go?name=release#342","TextMarkTextContent":"Error"}]},{"ID":"20230724231428-tf55zm8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231428-tf55zm8","updated":"20230724231428"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (e *TagPathError) Error() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231429-ypusdmk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231429-ypusdmk","updated":"20230724231429"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#914","TextMarkTextContent":"UnsupportedTypeError"}]},{"ID":"20230724231430-n8zcyfl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231430-n8zcyfl","updated":"20230724231430"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type UnsupportedTypeError struct {\n    Type reflect.Type\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231431-pr97h9s","Type":"NodeParagraph","Properties":{"id":"20230724231431-pr97h9s","updated":"20230724231431"},"Children":[{"Type":"NodeText","Data":"当序列化时，如果遇到不能转化为XML的类型，就会返回UnsupportedTypeError。"}]},{"ID":"20230724231432-yp25lk9","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231432-yp25lk9","updated":"20230724231432"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*UnsupportedTypeError) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#918","TextMarkTextContent":"Error"}]},{"ID":"20230724231433-rrf7edw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231433-rrf7edw","updated":"20230724231433"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (e *UnsupportedTypeError) Error() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231434-cwvwljc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231434-cwvwljc","updated":"20230724231434"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/read.go?name=release#137","TextMarkTextContent":"UnmarshalError"}]},{"ID":"20230724231435-94rgy7f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231435-94rgy7f","updated":"20230724231435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type UnmarshalError string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231436-pzicmdi","Type":"NodeParagraph","Properties":{"id":"20230724231436-pzicmdi","updated":"20230724231436"},"Children":[{"Type":"NodeText","Data":"UnmarshalError代表反序列化时出现的错误。"}]},{"ID":"20230724231437-er2jt7n","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231437-er2jt7n","updated":"20230724231437"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (UnmarshalError) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/read.go?name=release#139","TextMarkTextContent":"Error"}]},{"ID":"20230724231438-74m8p96","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231438-74m8p96","updated":"20230724231438"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (e UnmarshalError) Error() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231439-qqbg28d","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231439-qqbg28d","updated":"20230724231439"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#83","TextMarkTextContent":"CharData"}]},{"ID":"20230724231440-42f9yxh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231440-42f9yxh","updated":"20230724231440"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type CharData []byte\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231441-b6ibymy","Type":"NodeParagraph","Properties":{"id":"20230724231441-b6ibymy","updated":"20230724231441"},"Children":[{"Type":"NodeText","Data":"CharData类型代表XML字符数据（原始文本），其中XML转义序列已经被它们所代表的字符取代。"}]},{"ID":"20230724231442-8o3bbq4","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231442-8o3bbq4","updated":"20230724231442"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (CharData) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#91","TextMarkTextContent":"Copy"}]},{"ID":"20230724231443-e3yp0w7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231443-e3yp0w7","updated":"20230724231443"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c CharData) Copy() CharData\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231444-un81zuk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231444-un81zuk","updated":"20230724231444"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#95","TextMarkTextContent":"Comment"}]},{"ID":"20230724231445-83kr12b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231445-83kr12b","updated":"20230724231445"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Comment []byte\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231446-nfy0r0d","Type":"NodeParagraph","Properties":{"id":"20230724231446-nfy0r0d","updated":"20230724231446"},"Children":[{"Type":"NodeText","Data":"Comment代表XML注释，格式为\u003c!--comment--\u003e，切片中不包含注释标记\u003c!—和--\u003e。"}]},{"ID":"20230724231447-mh2kklm","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231447-mh2kklm","updated":"20230724231447"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Comment) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#97","TextMarkTextContent":"Copy"}]},{"ID":"20230724231448-1py14xg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231448-1py14xg","updated":"20230724231448"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c Comment) Copy() Comment\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231449-eyplk5m","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231449-eyplk5m","updated":"20230724231449"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#112","TextMarkTextContent":"Directive"}]},{"ID":"20230724231450-4nelhxp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231450-4nelhxp","updated":"20230724231450"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Directive []byte\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231451-tzylrvp","Type":"NodeParagraph","Properties":{"id":"20230724231451-tzylrvp","updated":"20230724231451"},"Children":[{"Type":"NodeText","Data":"Directive代表XML指示，格式为\u003c!directive\u003e，切片中不包含标记\u003c!和\u003e。"}]},{"ID":"20230724231452-p2w8648","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231452-p2w8648","updated":"20230724231452"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Directive) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#114","TextMarkTextContent":"Copy"}]},{"ID":"20230724231453-gjk6g5k","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231453-gjk6g5k","updated":"20230724231453"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (d Directive) Copy() Directive\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231454-hgisaic","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231454-hgisaic","updated":"20230724231454"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#100","TextMarkTextContent":"ProcInst"}]},{"ID":"20230724231455-3exrcha","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231455-3exrcha","updated":"20230724231455"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ProcInst struct {\n    Target string\n    Inst   []byte\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231456-a2pqibi","Type":"NodeParagraph","Properties":{"id":"20230724231456-a2pqibi","updated":"20230724231456"},"Children":[{"Type":"NodeText","Data":"ProcInst代表XML处理指令，格式为\u003c?target inst?\u003e。"}]},{"ID":"20230724231457-d5w4nn6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231457-d5w4nn6","updated":"20230724231457"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (ProcInst) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#105","TextMarkTextContent":"Copy"}]},{"ID":"20230724231458-oz9rs8p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231458-oz9rs8p","updated":"20230724231458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (p ProcInst) Copy() ProcInst\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231459-zk706y5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231459-zk706y5","updated":"20230724231459"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#43","TextMarkTextContent":"Name"}]},{"ID":"20230724231460-26v4bdm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231460-26v4bdm","updated":"20230724231460"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Name struct {\n    Space, Local string\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231461-ltfzg6l","Type":"NodeParagraph","Properties":{"id":"20230724231461-ltfzg6l","updated":"20230724231461"},"Children":[{"Type":"NodeText","Data":"Name代表一个XML名称（Local字段），并指定名字空间（Space）。Decoder.Token方法返回的Token中，Space标识符是典型的URL而不是被解析的文档里的短前缀。"}]},{"ID":"20230724231462-bqwshxe","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231462-bqwshxe","updated":"20230724231462"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#48","TextMarkTextContent":"Attr"}]},{"ID":"20230724231463-klvqxip","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231463-klvqxip","updated":"20230724231463"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Attr struct {\n    Name  Name\n    Value string\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231464-l6efbga","Type":"NodeParagraph","Properties":{"id":"20230724231464-l6efbga","updated":"20230724231464"},"Children":[{"Type":"NodeText","Data":"Attr代表一个XML元素的一条属性（Name=Value）"}]},{"ID":"20230724231465-jqu2keh","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231465-jqu2keh","updated":"20230724231465"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#58","TextMarkTextContent":"StartElement"}]},{"ID":"20230724231466-gtsx0xb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231466-gtsx0xb","updated":"20230724231466"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type StartElement struct {\n    Name Name\n    Attr []Attr\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231467-k4akmsc","Type":"NodeParagraph","Properties":{"id":"20230724231467-k4akmsc","updated":"20230724231467"},"Children":[{"Type":"NodeText","Data":"StartElement代表一个XML起始元素。"}]},{"ID":"20230724231468-1yxyl2t","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231468-1yxyl2t","updated":"20230724231468"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (StartElement) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#63","TextMarkTextContent":"Copy"}]},{"ID":"20230724231469-g6byxd6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231469-g6byxd6","updated":"20230724231469"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (e StartElement) Copy() StartElement\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231470-qjqe627","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231470-qjqe627","updated":"20230724231470"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (StartElement) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#71","TextMarkTextContent":"End"}]},{"ID":"20230724231471-h8rquse","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231471-h8rquse","updated":"20230724231471"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (e StartElement) End() EndElement\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231472-eq3vscl","Type":"NodeParagraph","Properties":{"id":"20230724231472-eq3vscl","updated":"20230724231472"},"Children":[{"Type":"NodeText","Data":"返回e对应的XML结束元素。"}]},{"ID":"20230724231473-1vpzrop","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231473-1vpzrop","updated":"20230724231473"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#76","TextMarkTextContent":"EndElement"}]},{"ID":"20230724231474-v8vh6k8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231474-v8vh6k8","updated":"20230724231474"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type EndElement struct {\n    Name Name\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231475-onx7ced","Type":"NodeParagraph","Properties":{"id":"20230724231475-onx7ced","updated":"20230724231475"},"Children":[{"Type":"NodeText","Data":"EndElement代表一个XML结束元素。"}]},{"ID":"20230724231476-3s5d2d0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231476-3s5d2d0","updated":"20230724231476"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#55","TextMarkTextContent":"Token"}]},{"ID":"20230724231477-ybhyz7q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231477-ybhyz7q","updated":"20230724231477"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Token interface{}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231478-y2a1i9s","Type":"NodeParagraph","Properties":{"id":"20230724231478-y2a1i9s","updated":"20230724231478"},"Children":[{"Type":"NodeText","Data":"Token接口用于保存token类型（CharData、Comment、Directive、ProcInst、StartElement、EndElement）的值。"}]},{"ID":"20230724231479-cpmlw2l","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231479-cpmlw2l","updated":"20230724231479"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#117","TextMarkTextContent":"CopyToken"}]},{"ID":"20230724231480-pve9hy6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231480-pve9hy6","updated":"20230724231480"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func CopyToken(t Token) Token\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231481-gp8rgf4","Type":"NodeParagraph","Properties":{"id":"20230724231481-gp8rgf4","updated":"20230724231481"},"Children":[{"Type":"NodeText","Data":"CopyToken返回一个Token的拷贝。"}]},{"ID":"20230724231482-mf6amhm","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231482-mf6amhm","updated":"20230724231482"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#94","TextMarkTextContent":"Marshaler"}]},{"ID":"20230724231483-n1qivt9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231483-n1qivt9","updated":"20230724231483"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Marshaler interface {\n    MarshalXML(e *Encoder, start StartElement) error\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231484-l4rypr1","Type":"NodeParagraph","Properties":{"id":"20230724231484-l4rypr1","updated":"20230724231484"},"Children":[{"Type":"NodeText","Data":"实现了Marshaler接口的类型可以将自身序列化为合法的XML元素。"}]},{"ID":"20230724231485-r504ri9","Type":"NodeParagraph","Properties":{"id":"20230724231485-r504ri9","updated":"20230724231485"},"Children":[{"Type":"NodeText","Data":"MarshalXML方法将自身调用者编码为零或多个XML元素。 按照惯例，数组或切片会编码为一系列元素，每个成员一条。使用start作为元素标签并不是必须的，但这么做可以帮助Unmarshal方法正确的匹配XML元素和结构体字段。一个常用的策略是在同一个层次里将每个独立的值对应到期望的XML然后使用e.EncodeElement进行编码。另一个常用的策略是重复调用e.EncodeToken来一次一个token的生成XML输出。编码后的token必须组成零或多个XML元素。"}]},{"ID":"20230724231486-ln5bk6z","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231486-ln5bk6z","updated":"20230724231486"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/read.go?name=release#156","TextMarkTextContent":"Unmarshaler"}]},{"ID":"20230724231487-g11ut7w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231487-g11ut7w","updated":"20230724231487"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Unmarshaler interface {\n    UnmarshalXML(d *Decoder, start StartElement) error\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231488-tz29wvi","Type":"NodeParagraph","Properties":{"id":"20230724231488-tz29wvi","updated":"20230724231488"},"Children":[{"Type":"NodeText","Data":"实现了Unmarshaler接口的类型可以根据自身的XML元素描述反序列化自身。"}]},{"ID":"20230724231489-ey7eak2","Type":"NodeParagraph","Properties":{"id":"20230724231489-ey7eak2","updated":"20230724231489"},"Children":[{"Type":"NodeText","Data":"UnmarshalXML方法解码以start起始单个XML元素。如果它返回了错误，外层Unmarshal的调用将停止执行并返回该错误。UnmarshalXML方法必须正好“消费”一个XML元素。一个常用的策略是使用d.DecodeElement 将XML分别解码到各独立值，然后再将这些值写入UnmarshalXML的调用者。另一个常用的策略是使用d.Token一次一个token的处理XML对象。UnmarshalXML通常不使用d.RawToken。"}]},{"ID":"20230724231490-rqywkyz","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231490-rqywkyz","updated":"20230724231490"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#109","TextMarkTextContent":"MarshalerAttr"}]},{"ID":"20230724231491-g3xuugh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231491-g3xuugh","updated":"20230724231491"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type MarshalerAttr interface {\n    MarshalXMLAttr(name Name) (Attr, error)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231492-7s3pbcg","Type":"NodeParagraph","Properties":{"id":"20230724231492-7s3pbcg","updated":"20230724231492"},"Children":[{"Type":"NodeText","Data":"实现了MarshalerAttr接口的类型可以将自身序列化为合法的XML属性。"}]},{"ID":"20230724231493-xnvpmzq","Type":"NodeParagraph","Properties":{"id":"20230724231493-xnvpmzq","updated":"20230724231493"},"Children":[{"Type":"NodeText","Data":"MarshalXMLAttr返回一个值为方法调用者编码后的值的XML属性。使用name作为属性的name并非必须的，但这么做可以帮助Unmarshal方法正确的匹配属性和结构体字段。如果MarshalXMLAttr返回一个零值属性Attr{}，将不会生成属性输出。MarshalXMLAttr只用于有标签且标签有\"attr\"选项的结构体字段。"}]},{"ID":"20230724231494-801tr21","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231494-801tr21","updated":"20230724231494"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/read.go?name=release#168","TextMarkTextContent":"UnmarshalerAttr"}]},{"ID":"20230724231495-8as4in8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231495-8as4in8","updated":"20230724231495"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type UnmarshalerAttr interface {\n    UnmarshalXMLAttr(attr Attr) error\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231496-q1s4sat","Type":"NodeParagraph","Properties":{"id":"20230724231496-q1s4sat","updated":"20230724231496"},"Children":[{"Type":"NodeText","Data":"实现了UnmarshalerAttr接口的类型可以根据自身的XML属性形式的描述反序列化自身。"}]},{"ID":"20230724231497-xaw93yq","Type":"NodeParagraph","Properties":{"id":"20230724231497-xaw93yq","updated":"20230724231497"},"Children":[{"Type":"NodeText","Data":"UnmarshalXMLAttr解码单个的XML属性。如果它返回一个错误，外层的Umarshal调用会停止执行并返回该错误。UnmarshalXMLAttr只有在结构体字段的标签有\"attr\"选项时才被使用。"}]},{"ID":"20230724231498-p2uuer0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231498-p2uuer0","updated":"20230724231498"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#1910","TextMarkTextContent":"Escape"}]},{"ID":"20230724231499-w6h1wtl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231499-w6h1wtl","updated":"20230724231499"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Escape(w io.Writer, s []byte)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231500-9d5j6tf","Type":"NodeParagraph","Properties":{"id":"20230724231500-9d5j6tf","updated":"20230724231500"},"Children":[{"Type":"NodeText","Data":"Escape类似EscapeText函数但会忽略返回的错误。本函数是用于保证和Go 1.0的向后兼容。应用于Go 1.1及以后版本的代码请使用EscapeText。"}]},{"ID":"20230724231501-dm56t0x","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231501-dm56t0x","updated":"20230724231501"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#1824","TextMarkTextContent":"EscapeText"}]},{"ID":"20230724231502-ory0qxb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231502-ory0qxb","updated":"20230724231502"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func EscapeText(w io.Writer, s []byte) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231503-m2ao7xr","Type":"NodeParagraph","Properties":{"id":"20230724231503-m2ao7xr","updated":"20230724231503"},"Children":[{"Type":"NodeText","Data":"EscapeText向w中写入经过适当转义的、有明文s具有相同意义的XML文本。"}]},{"ID":"20230724231504-m1vpk1j","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231504-m1vpk1j","updated":"20230724231504"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#70","TextMarkTextContent":"Marshal"}]},{"ID":"20230724231505-ovob89r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231505-ovob89r","updated":"20230724231505"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Marshal(v interface{}) ([]byte, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231506-0m8jgnx","Type":"NodeParagraph","Properties":{"id":"20230724231506-0m8jgnx","updated":"20230724231506"},"Children":[{"Type":"NodeText","Data":"Marshal函数返回v的XML编码。"}]},{"ID":"20230724231507-zfsn3lo","Type":"NodeParagraph","Properties":{"id":"20230724231507-zfsn3lo","updated":"20230724231507"},"Children":[{"Type":"NodeText","Data":"Marshal处理数组或者切片时会序列化每一个元素。Marshal处理指针时，会序列化其指向的值；如果指针为nil，则啥也不输出。Marshal处理接口时，会序列化其内包含的具体类型值，如果接口值为nil，也是不输出。Marshal处理其余类型数据时，会输出一或多个包含数据的XML元素。"}]},{"ID":"20230724231508-amwi7md","Type":"NodeParagraph","Properties":{"id":"20230724231508-amwi7md","updated":"20230724231508"},"Children":[{"Type":"NodeText","Data":"XML元素的名字按如下优先顺序获取："}]},{"ID":"20230724231509-6wzgcxj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231509-6wzgcxj","updated":"20230724231509"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"- 如果数据是结构体，其XMLName字段的标签\n- 类型为xml.Name的XMLName字段的值\n- 数据是某结构体的字段，其标签\n- 数据是某结构体的字段，其字段名\n- 被序列化的类型的名字\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231510-jla6dvt","Type":"NodeParagraph","Properties":{"id":"20230724231510-jla6dvt","updated":"20230724231510"},"Children":[{"Type":"NodeText","Data":"一个结构体的XML元素包含该结构体所有导出字段序列化后的元素，有如下例外："}]},{"ID":"20230724231511-mwg4bvt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231511-mwg4bvt","updated":"20230724231511"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"- XMLName字段，如上所述，会省略\n- 具有标签\"-\"的字段会省略\n- 具有标签\"name,attr\"的字段会成为该XML元素的名为name的属性\n- 具有标签\",attr\"的字段会成为该XML元素的名为字段名的属性\n- 具有标签\",chardata\"的字段会作为字符数据写入，而非XML元素\n- 具有标签\",innerxml\"的字段会原样写入，而不会经过正常的序列化过程\n- 具有标签\",comment\"的字段作为XML注释写入，而不经过正常的序列化过程，该字段内不能有\"--\"字符串\n- 标签中包含\"omitempty\"选项的字段如果为空值会省略\n  空值为false、0、nil指针、nil接口、长度为0的数组、切片、映射\n- 匿名字段（其标签无效）会被处理为其字段是外层结构体的字段\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231512-3fie9e6","Type":"NodeParagraph","Properties":{"id":"20230724231512-3fie9e6","updated":"20230724231512"},"Children":[{"Type":"NodeText","Data":"如果一个字段的标签为\"a\u003eb\u003ec\"，则元素c将会嵌套进其上层元素a和b中。如果该字段相邻的字段标签指定了同样的上层元素，则会放在同一个XML元素里。"}]},{"ID":"20230724231513-l43bi3a","Type":"NodeParagraph","Properties":{"id":"20230724231513-l43bi3a","updated":"20230724231513"},"Children":[{"Type":"NodeText","Data":"参见MarshalIndent的例子。如果要求Marshal序列化通道、函数或者映射会返回错误。"}]},{"ID":"20230724231514-d4zkfey","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231514-d4zkfey","updated":"20230724231514"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#116","TextMarkTextContent":"MarshalIndent"}]},{"ID":"20230724231515-ynvqh2f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231515-ynvqh2f","updated":"20230724231515"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func MarshalIndent(v interface{}, prefix, indent string) ([]byte, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231516-yukaql5","Type":"NodeParagraph","Properties":{"id":"20230724231516-yukaql5","updated":"20230724231516"},"Children":[{"Type":"NodeText","Data":"MarshalIndent功能类似Marshal。但每个XML元素会另起一行并缩进，该行以prefix起始，后跟一或多个indent的拷贝（根据嵌套层数）。"}]},{"ID":"20230724231517-okenuop","Type":"NodeParagraph","Properties":{"id":"20230724231517-okenuop","updated":"20230724231517"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231518-r2u1f60","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231518-r2u1f60","updated":"20230724231518"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/read.go?name=release#114","TextMarkTextContent":"Unmarshal"}]},{"ID":"20230724231519-irpzwwn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231519-irpzwwn","updated":"20230724231519"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Unmarshal(data []byte, v interface{}) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231520-mmcv3yr","Type":"NodeParagraph","Properties":{"id":"20230724231520-mmcv3yr","updated":"20230724231520"},"Children":[{"Type":"NodeText","Data":"Unmarshal解析XML编码的数据并将结果存入v指向的值。v只能指向结构体、切片或者和字符串。良好格式化的数据如果不能存入v，会被丢弃。"}]},{"ID":"20230724231521-72ijogw","Type":"NodeParagraph","Properties":{"id":"20230724231521-72ijogw","updated":"20230724231521"},"Children":[{"Type":"NodeText","Data":"因为Unmarshal使用reflect包，它只能填写导出字段。本函数好似用大小写敏感的比较来匹配XML元素名和结构体的字段名/标签键名。"}]},{"ID":"20230724231522-koegg8f","Type":"NodeParagraph","Properties":{"id":"20230724231522-koegg8f","updated":"20230724231522"},"Children":[{"Type":"NodeText","Data":"Unmarshal函数使用如下规则将XML元素映射到结构体字段上。这些规则中，字段标签指的是结构体字段的标签键'xml'对应的值（参见上面的例子）："}]},{"ID":"20230724231523-tn3hebi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231523-tn3hebi","updated":"20230724231523"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"* 如果结构体字段的类型为字符串或者[]byte，且标签为\",innerxml\"，\n  Unmarshal函数直接将对应原始XML文本写入该字段，其余规则仍适用。\n* 如果结构体字段类型为xml.Name且名为XMLName，Unmarshal会将元素名写入该字段\n* 如果字段XMLName的标签的格式为\"name\"或\"namespace-URL name\"，\n  XML元素必须有给定的名字（以及可选的名字空间），否则Unmarshal会返回错误。\n* 如果XML元素的属性的名字匹配某个标签\",attr\"为字段的字段名，或者匹配某个标签为\"name,attr\"\n  的字段的标签名，Unmarshal会将该属性的值写入该字段。\n* 如果XML元素包含字符数据，该数据会存入结构体中第一个具有标签\",chardata\"的字段中，\n  该字段可以是字符串类型或者[]byte类型。如果没有这样的字段，字符数据会丢弃。\n* 如果XML元素包含注释，该数据会存入结构体中第一个具有标签\",comment\"的字段中，\n  该字段可以是字符串类型或者[]byte类型。如果没有这样的字段，字符数据会丢弃。\n* 如果XML元素包含一个子元素，其名称匹配格式为\"a\"或\"a\u003eb\u003ec\"的标签的前缀，反序列化会深入\n  XML结构中寻找具有指定名称的元素，并将最后端的元素映射到该标签所在的结构体字段。\n  以\"\u003e\"开始的标签等价于以字段名开始并紧跟着\"\u003e\" 的标签。\n* 如果XML元素包含一个子元素，其名称匹配某个结构体类型字段的XMLName字段的标签名，\n  且该结构体字段本身没有显式指定标签名，Unmarshal会将该元素映射到该字段。\n* 如果XML元素的包含一个子元素，其名称匹配够格结构体字段的字段名，且该字段没有任何模式选项\n  （\",attr\"、\",chardata\"等），Unmarshal会将该元素映射到该字段。\n* 如果XML元素包含的某个子元素不匹配以上任一条，而存在某个字段其标签为\",any\"，\n  Unmarshal会将该元素映射到该字段。\n* 匿名字段被处理为其字段好像位于外层结构体中一样。\n* 标签为\"-\"的结构体字段永不会被反序列化填写。\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231524-kf01lvk","Type":"NodeParagraph","Properties":{"id":"20230724231524-kf01lvk","updated":"20230724231524"},"Children":[{"Type":"NodeText","Data":"Unmarshal函数将XML元素写入string或[]byte时，会将该元素的字符数据串联起来作为值，目标[]byte不能是nil。"}]},{"ID":"20230724231525-e1lqw3v","Type":"NodeParagraph","Properties":{"id":"20230724231525-e1lqw3v","updated":"20230724231525"},"Children":[{"Type":"NodeText","Data":"Unmarshal函数将属性写入string或[]byte时，会将属性的值以字符串/切片形式写入。"}]},{"ID":"20230724231526-h798dh5","Type":"NodeParagraph","Properties":{"id":"20230724231526-h798dh5","updated":"20230724231526"},"Children":[{"Type":"NodeText","Data":"Unmarshal函数将XML元素写入切片时，会将切片扩展并将XML元素的子元素映射入新建的值里。"}]},{"ID":"20230724231527-ez7djcv","Type":"NodeParagraph","Properties":{"id":"20230724231527-ez7djcv","updated":"20230724231527"},"Children":[{"Type":"NodeText","Data":"Unmarshal函数将XML元素/属性写入bool值时，会将对应的字符串转化为布尔值。"}]},{"ID":"20230724231528-nzb6fzw","Type":"NodeParagraph","Properties":{"id":"20230724231528-nzb6fzw","updated":"20230724231528"},"Children":[{"Type":"NodeText","Data":"Unmarshal函数将XML元素/属性写入整数或浮点数类型时，会将对应的字符串解释为十进制数字。不会检查溢出。"}]},{"ID":"20230724231529-l8gdv3s","Type":"NodeParagraph","Properties":{"id":"20230724231529-l8gdv3s","updated":"20230724231529"},"Children":[{"Type":"NodeText","Data":"Unmarshal函数将XML元素写入xml.Name类型时，会记录元素的名称。"}]},{"ID":"20230724231530-lz4xsgv","Type":"NodeParagraph","Properties":{"id":"20230724231530-lz4xsgv","updated":"20230724231530"},"Children":[{"Type":"NodeText","Data":"Unmarshal函数将XML元素写入指针时，会申请一个新值并将XML元素映射入该值。"}]},{"ID":"20230724231531-5ksamq9","Type":"NodeParagraph","Properties":{"id":"20230724231531-5ksamq9","updated":"20230724231531"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231532-7lmhodw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231532-7lmhodw","updated":"20230724231532"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#135","TextMarkTextContent":"Decoder"}]},{"ID":"20230724231533-w6jkbf9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231533-w6jkbf9","updated":"20230724231533"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Decoder struct {\n    // Strict默认设为true，强制要求符合XML规范\n    // 如果设为false，则解析器允许输入中包含常见的错误：\n    //   * 如果元素缺少结束标签，解析器会虚构一个结束标签以保证返回值来自良好平衡的Token\n    //   * 属性值和字符数据中，未知或畸形的字符entity（以\u0026开始的序列）会丢在一边\n    //\n    // 设置：\n    //\n    //   d.Strict = false\n    //   d.AutoClose = HTMLAutoClose\n    //   d.Entity = HTMLEntity\n    //\n    // 可以创建一个能处理标准HTML的解析器。\n    //\n    // Strict模式不会强制要求XML名称空间TR，特别注意它不会拒绝使用未定义前缀的名字空间标签\n    // 这些标签会将未知前缀作为名字空间URL来记录\n    Strict bool\n    // 当Strict == false时，AutoClose指定一个元素的集合：\n    // 这些元素在开启后就立刻结束，不管有没有对应关闭标签存在\n    AutoClose []string\n    // Entity字段用于将非标准的实体名映射到替换的字符串\n    // parser的行为就好像标准实体映射存在于本字段，即使实际上本字段没有：\n    //\n    //\t\"lt\": \"\u003c\",\n    //\t\"gt\": \"\u003e\",\n    //\t\"amp\": \"\u0026\",\n    //\t\"apos\": \"'\",\n    //\t\"quot\": `\"`,\n    Entity map[string]string\n    // CharsetReader字段如果非nil，会定义一个函数来生成转换字符集的io.Reader，\n    // 将给定的非utf-8字符集转换为utf-8字符集。如果CharsetReader字段为nil\n    // 或者返回一个错误，解析将会停止并发挥该错误。CharsetReader的返回值不能都是nil\n    CharsetReader func(charset string, input io.Reader) (io.Reader, error)\n    // DefaultSpace设置未修饰标签的默认名字空间，就好像整个XML流都包装进有个具有属性\n    // xmlns=\"DefaultSpace\"的元素内\n    DefaultSpace string\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231534-0k2guun","Type":"NodeParagraph","Properties":{"id":"20230724231534-0k2guun","updated":"20230724231534"},"Children":[{"Type":"NodeText","Data":"Decoder代表一个XML解析器，可以读取输入流的部分数据，该解析器假定输入是utf-8编码的。"}]},{"ID":"20230724231535-e93szui","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231535-e93szui","updated":"20230724231535"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#205","TextMarkTextContent":"NewDecoder"}]},{"ID":"20230724231536-tl7lg93","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231536-tl7lg93","updated":"20230724231536"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewDecoder(r io.Reader) *Decoder\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231537-udhx9rp","Type":"NodeParagraph","Properties":{"id":"20230724231537-udhx9rp","updated":"20230724231537"},"Children":[{"Type":"NodeText","Data":"创建一个从r读取XML数据的解析器。如果r未实现io.ByteReader接口，NewDecoder会为其添加缓存。"}]},{"ID":"20230724231538-0hf3c9d","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231538-0hf3c9d","updated":"20230724231538"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Decoder) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/read.go?name=release#120","TextMarkTextContent":"Decode"}]},{"ID":"20230724231539-wrhe4go","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231539-wrhe4go","updated":"20230724231539"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (d *Decoder) Decode(v interface{}) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231540-4jci47k","Type":"NodeParagraph","Properties":{"id":"20230724231540-4jci47k","updated":"20230724231540"},"Children":[{"Type":"NodeText","Data":"Decode方法功能类似xml.Unmarshal函数，但会从底层读取XML数据并查找StartElement。"}]},{"ID":"20230724231541-caz98qg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231541-caz98qg","updated":"20230724231541"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Decoder) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/read.go?name=release#128","TextMarkTextContent":"DecodeElement"}]},{"ID":"20230724231542-pkcc7ez","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231542-pkcc7ez","updated":"20230724231542"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (d *Decoder) DecodeElement(v interface{}, start *StartElement) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231543-hijr8ku","Type":"NodeParagraph","Properties":{"id":"20230724231543-hijr8ku","updated":"20230724231543"},"Children":[{"Type":"NodeText","Data":"DecodeElement方法的功能类似xml.Unmarshal函数，但它会启出一个指向XML起始标签后将解析结果写入v。当客户端自己读取了一些原始XML token但仍想defer调用Unmarshal处理一些元素时很有用。"}]},{"ID":"20230724231544-a51553g","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231544-a51553g","updated":"20230724231544"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Decoder) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#238","TextMarkTextContent":"Token"}]},{"ID":"20230724231545-z36hbc7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231545-z36hbc7","updated":"20230724231545"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (d *Decoder) Token() (t Token, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231546-wm5cydl","Type":"NodeParagraph","Properties":{"id":"20230724231546-wm5cydl","updated":"20230724231546"},"Children":[{"Type":"NodeText","Data":"Token返回输入流里的下一个XML token。在输入流的结尾处，会返回(nil, io.EOF)"}]},{"ID":"20230724231547-bhemkyw","Type":"NodeParagraph","Properties":{"id":"20230724231547-bhemkyw","updated":"20230724231547"},"Children":[{"Type":"NodeText","Data":"返回的token数据里的[]byte数据引用自解析器内部的缓存，只在下一次调用Token之前有效。如要获取切片的拷贝，调用CopyToken函数或者token的Copy方法。"}]},{"ID":"20230724231548-cmltnyg","Type":"NodeParagraph","Properties":{"id":"20230724231548-cmltnyg","updated":"20230724231548"},"Children":[{"Type":"NodeText","Data":"成功调用的Token方法会将自我闭合的元素（如"},{"Type":"NodeBr"},{"Type":"NodeText","Data":"）扩展为分离的起始和结束标签。"}]},{"ID":"20230724231549-53i9x65","Type":"NodeParagraph","Properties":{"id":"20230724231549-53i9x65","updated":"20230724231549"},"Children":[{"Type":"NodeText","Data":"Token方法会保证它返回的StartElement和EndElement两种token正确的嵌套和匹配：如果本方法遇到了不正确的结束标签，会返回一个错误。"}]},{"ID":"20230724231550-8dks66q","Type":"NodeParagraph","Properties":{"id":"20230724231550-8dks66q","updated":"20230724231550"},"Children":[{"Type":"NodeText","Data":"Token方法实现了XML名字空间，细节参见http://www.w3.org/TR/REC-xml-names/。每一个包含在Token里的Name结构体，都会将Space字段设为URL标识（如果可知的话）。如果Token遇到未知的名字空间前缀，它会使用该前缀作为名字空间，而不是报错。"}]},{"ID":"20230724231551-n1j1a43","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231551-n1j1a43","updated":"20230724231551"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Decoder) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/xml.go?name=release#492","TextMarkTextContent":"RawToken"}]},{"ID":"20230724231552-mdtv6pu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231552-mdtv6pu","updated":"20230724231552"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (d *Decoder) RawToken() (Token, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231553-w857w5t","Type":"NodeParagraph","Properties":{"id":"20230724231553-w857w5t","updated":"20230724231553"},"Children":[{"Type":"NodeText","Data":"RawToken方法Token方法，但不会验证起始和结束标签，也不将名字空间前缀翻译为它们相应的URL。"}]},{"ID":"20230724231554-zeo8k94","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231554-zeo8k94","updated":"20230724231554"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Decoder) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/read.go?name=release#677","TextMarkTextContent":"Skip"}]},{"ID":"20230724231555-2iciprh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231555-2iciprh","updated":"20230724231555"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (d *Decoder) Skip() error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231556-q91q6lz","Type":"NodeParagraph","Properties":{"id":"20230724231556-q91q6lz","updated":"20230724231556"},"Children":[{"Type":"NodeText","Data":"Skip从底层读取token，直到读取到最近一次读取到的起始标签对应的结束标签。如果读取中遇到别的起始标签会进行迭代，因此可以跳过嵌套结构。如果本方法找到了对应起始标签的结束标签，会返回nil；否则返回一个描述该问题的错误。"}]},{"ID":"20230724231557-8mrtcdy","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231557-8mrtcdy","updated":"20230724231557"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#127","TextMarkTextContent":"Encoder"}]},{"ID":"20230724231558-goqi1g4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231558-goqi1g4","updated":"20230724231558"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Encoder struct {\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231559-fnbxupt","Type":"NodeParagraph","Properties":{"id":"20230724231559-fnbxupt","updated":"20230724231559"},"Children":[{"Type":"NodeText","Data":"Encoder向输出流中写入XML数据。"}]},{"ID":"20230724231560-27gdkhb","Type":"NodeParagraph","Properties":{"id":"20230724231560-27gdkhb","updated":"20230724231560"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231561-6vb6fn9","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231561-6vb6fn9","updated":"20230724231561"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#132","TextMarkTextContent":"NewEncoder"}]},{"ID":"20230724231562-hk62h4h","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231562-hk62h4h","updated":"20230724231562"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewEncoder(w io.Writer) *Encoder\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231563-wi9lbjl","Type":"NodeParagraph","Properties":{"id":"20230724231563-wi9lbjl","updated":"20230724231563"},"Children":[{"Type":"NodeText","Data":"NewEncoder创建一个写入w的*Encoder。"}]},{"ID":"20230724231564-l5qot83","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231564-l5qot83","updated":"20230724231564"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Encoder) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#152","TextMarkTextContent":"Encode"}]},{"ID":"20230724231565-yei7bj0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231565-yei7bj0","updated":"20230724231565"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (enc *Encoder) Encode(v interface{}) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231566-7qt5vrh","Type":"NodeParagraph","Properties":{"id":"20230724231566-7qt5vrh","updated":"20230724231566"},"Children":[{"Type":"NodeText","Data":"Encode将v编码为XML后写入底层。参见Marshal函数获取go到XML转换的细节。在返回前enc会调用Flush。"}]},{"ID":"20230724231567-7fzbbmc","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231567-7fzbbmc","updated":"20230724231567"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Encoder) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#167","TextMarkTextContent":"EncodeElement"}]},{"ID":"20230724231568-jqniqfy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231568-jqniqfy","updated":"20230724231568"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (enc *Encoder) EncodeElement(v interface{}, start StartElement) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231569-izgkka2","Type":"NodeParagraph","Properties":{"id":"20230724231569-izgkka2","updated":"20230724231569"},"Children":[{"Type":"NodeText","Data":"EncodeElement将v的XML编码写入底层， 并使用start作为编码的最外层。参见Marshal函数获取go到XML转换的细节。在返回前enc会调用Flush方法。"}]},{"ID":"20230724231570-lttt21k","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231570-lttt21k","updated":"20230724231570"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Encoder) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#193","TextMarkTextContent":"EncodeToken"}]},{"ID":"20230724231571-opifgu8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231571-opifgu8","updated":"20230724231571"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (enc *Encoder) EncodeToken(t Token) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231572-31g8b72","Type":"NodeParagraph","Properties":{"id":"20230724231572-31g8b72","updated":"20230724231572"},"Children":[{"Type":"NodeText","Data":"EncodeToken向底层写入一个token。如果StartElement和EndElement的匹配不正确，本方法会返回错误。"}]},{"ID":"20230724231573-w2stz0f","Type":"NodeParagraph","Properties":{"id":"20230724231573-w2stz0f","updated":"20230724231573"},"Children":[{"Type":"NodeText","Data":"EncodeToken 方法不会调用Flush，因为它通常是更大型操作如Encode或EncodeElement方法的一部分（或者用户自定义的Marshaler接口MarshalXML 方法里调用本方法），这些方法会在结束前Flush。调用者创建一个Encoder并直接使用本方法而不使用Encode或EncodeElement方法的话，必须在结束时调用Flush以保证XML数据写入底层的io.Writer接口。"}]},{"ID":"20230724231574-69352un","Type":"NodeParagraph","Properties":{"id":"20230724231574-69352un","updated":"20230724231574"},"Children":[{"Type":"NodeText","Data":"EncodeToken写入ProcInst类型Token时，只允许在底层流最开始写入目标是\"xml\"的ProcInst。"}]},{"ID":"20230724231575-ml965us","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231575-ml965us","updated":"20230724231575"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Encoder) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#246","TextMarkTextContent":"Flush"}]},{"ID":"20230724231576-8yi819m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231576-8yi819m","updated":"20230724231576"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (enc *Encoder) Flush() error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231577-pkqs1gn","Type":"NodeParagraph","Properties":{"id":"20230724231577-pkqs1gn","updated":"20230724231577"},"Children":[{"Type":"NodeText","Data":"Flush方法会将缓存中的XML数据写入底层。参见EncodeToken函数获取细节信息。"}]},{"ID":"20230724231578-zs20sd7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231578-zs20sd7","updated":"20230724231578"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Encoder) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/marshal.go?name=release#141","TextMarkTextContent":"Indent"}]},{"ID":"20230724231579-dytkqvx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231579-dytkqvx","updated":"20230724231579"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (enc *Encoder) Indent(prefix, indent string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231580-ypryp5m","Type":"NodeParagraph","Properties":{"id":"20230724231580-ypryp5m","updated":"20230724231580"},"Children":[{"Type":"NodeText","Data":"Indent函数设定编码器生成XML数据时的格式化缩进信息。细节请参见MarshalIndent函数。"}]},{"ID":"20230724231581-hka4fc0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231581-hka4fc0","updated":"20230724231581"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Bugs"}]},{"ID":"20230724231582-zc7k712","Type":"NodeParagraph","Properties":{"id":"20230724231582-zc7k712","updated":"20230724231582"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/xml/read.go?name=release#17","TextMarkTextContent":"☞"},{"Type":"NodeText","Data":" XML元素和数据结构体的映射有天生的缺陷：XML元素是依赖顺序的匿名值的集合，而结构体是不依赖顺序的命名值的集合。参见json包获取更适用于数据结构体的文本表示。"}]}]}