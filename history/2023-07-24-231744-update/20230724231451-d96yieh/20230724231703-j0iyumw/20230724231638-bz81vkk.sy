{"ID":"20230724231638-bz81vkk","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231638-bz81vkk","title":"encoding-ascii85","updated":"20230724231638"},"Children":[{"ID":"20230724231639-e1bs7vg","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231639-e1bs7vg","updated":"20230724231639"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"encoding-ascii85"}]},{"ID":"20230724231640-4o1bzzk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231640-4o1bzzk","updated":"20230724231640"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"encoding/ascii85\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231641-qow9nf9","Type":"NodeParagraph","Properties":{"id":"20230724231641-qow9nf9","updated":"20230724231641"},"Children":[{"Type":"NodeText","Data":"ascii85包实现了ascii85数据编码（5个ascii字符表示4个字节），该编码用于btoa工具和Adobe的PostScript语言和PDF文档格式。"}]},{"ID":"20230724231642-r1frsu1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231642-r1frsu1","updated":"20230724231642"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/ascii85/ascii85.go?name=release#169","TextMarkTextContent":"CorruptInputError"}]},{"ID":"20230724231643-t9semur","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231643-t9semur","updated":"20230724231643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type CorruptInputError int64\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231644-4s8lrom","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231644-4s8lrom","updated":"20230724231644"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (CorruptInputError) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/ascii85/ascii85.go?name=release#171","TextMarkTextContent":"Error"}]},{"ID":"20230724231645-kkxik4r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231645-kkxik4r","updated":"20230724231645"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (e CorruptInputError) Error() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231646-z22p7tk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231646-z22p7tk","updated":"20230724231646"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/ascii85/ascii85.go?name=release#86","TextMarkTextContent":"MaxEncodedLen"}]},{"ID":"20230724231647-kkhl9i5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231647-kkhl9i5","updated":"20230724231647"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func MaxEncodedLen(n int) int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231648-hx62ar0","Type":"NodeParagraph","Properties":{"id":"20230724231648-hx62ar0","updated":"20230724231648"},"Children":[{"Type":"NodeText","Data":"返回n字节源数据编码后的最大字节数。"}]},{"ID":"20230724231649-rxg4qar","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231649-rxg4qar","updated":"20230724231649"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/ascii85/ascii85.go?name=release#27","TextMarkTextContent":"Encode"}]},{"ID":"20230724231650-8hdwk53","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231650-8hdwk53","updated":"20230724231650"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Encode(dst, src []byte) int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231651-keqd13k","Type":"NodeParagraph","Properties":{"id":"20230724231651-keqd13k","updated":"20230724231651"},"Children":[{"Type":"NodeText","Data":"将src编码成最多MaxEncodedLen(len(src))数据写入dst，返回实际写入的字节数。编码每4字节一段进行一次，最后一个片段采用特殊的处理方式，因此不应将本函数用于处理大数据流的某一独立数据块。"}]},{"ID":"20230724231652-n6th076","Type":"NodeParagraph","Properties":{"id":"20230724231652-n6th076","updated":"20230724231652"},"Children":[{"Type":"NodeText","Data":"一般来说ascii85编码数据会被'\u003c"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"s","TextMarkTextContent":"'和'"},{"Type":"NodeText","Data":"\u003e'包括起来，函数并未添加上它们。"}]},{"ID":"20230724231653-tle5u3b","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231653-tle5u3b","updated":"20230724231653"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/ascii85/ascii85.go?name=release#189","TextMarkTextContent":"Decode"}]},{"ID":"20230724231654-owuk3mi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231654-owuk3mi","updated":"20230724231654"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Decode(dst, src []byte, flush bool) (ndst, nsrc int, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231655-452s854","Type":"NodeParagraph","Properties":{"id":"20230724231655-452s854","updated":"20230724231655"},"Children":[{"Type":"NodeText","Data":"将src解码后写入dst，返回写入dst的字节数、从src解码的字节数。如果src含有非法数据，函数将返回成功执行的数据（两个数字）和CorruptInputError。如果flush为真，则函数会认为src代表输入流的结尾，完全处理src，而不会等待另一个32字节的数据块。"}]},{"ID":"20230724231656-2io3bnn","Type":"NodeParagraph","Properties":{"id":"20230724231656-2io3bnn","updated":"20230724231656"},"Children":[{"Type":"NodeText","Data":"函数会忽略src中的空格和控制字符，一般来说ascii85编码数据会被'\u003c"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"s","TextMarkTextContent":"'和'"},{"Type":"NodeText","Data":"\u003e'包括起来，但是调用者应自行去掉它们。"}]},{"ID":"20230724231657-rpp37ov","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231657-rpp37ov","updated":"20230724231657"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/ascii85/ascii85.go?name=release#93","TextMarkTextContent":"NewEncoder"}]},{"ID":"20230724231658-gvvnj8b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231658-gvvnj8b","updated":"20230724231658"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewEncoder(w io.Writer) io.WriteCloser\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231659-jcgkvzv","Type":"NodeParagraph","Properties":{"id":"20230724231659-jcgkvzv","updated":"20230724231659"},"Children":[{"Type":"NodeText","Data":"创建一个将数据编码为ascii85流写入w的编码器。Ascii85编码算法操作32位块，写入结束后，必须调用Close方法将缓存中保留的不完整块刷新到w里。"}]},{"ID":"20230724231660-au9ybvl","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231660-au9ybvl","updated":"20230724231660"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/encoding/ascii85/ascii85.go?name=release#246","TextMarkTextContent":"NewDecoder"}]},{"ID":"20230724231661-7rfotgi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231661-7rfotgi","updated":"20230724231661"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewDecoder(r io.Reader) io.Reader\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231662-3b7agi0","Type":"NodeParagraph","Properties":{"id":"20230724231662-3b7agi0","updated":"20230724231662"},"Children":[{"Type":"NodeText","Data":"创建一个从r解码ascii85流的解码器。"}]}]}