{"ID":"20230724231636-fsj782x","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231636-fsj782x","title":"container-heap 堆","updated":"20230724231636"},"Children":[{"ID":"20230724231637-19fmqtj","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230724231637-19fmqtj","updated":"20230724231637"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"container-heap 堆"}]},{"ID":"20230724231638-3lwimsx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231638-3lwimsx","updated":"20230724231638"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"container/heap\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231639-n02h3rs","Type":"NodeParagraph","Properties":{"id":"20230724231639-n02h3rs","updated":"20230724231639"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"heap包"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"提供了对任意类型（实现了heap.Interface接口）的堆操作"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"。（最小）堆是具有“每个节点都是以其为根的子树中最小值”属性的树。"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230724231640-hobpr0f","Type":"NodeParagraph","Properties":{"id":"20230724231640-hobpr0f","updated":"20230724231640"},"Children":[{"Type":"NodeText","Data":"树的最小元素为其根元素，索引0的位置。"}]},{"ID":"20230724231641-bhec3iw","Type":"NodeParagraph","Properties":{"id":"20230724231641-bhec3iw","updated":"20230724231641"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"heap是常用的实现优先队列的方法。要创建一个优先队列，实现一个具有使用（负的）优先级作为比较的依据的Less方法的Heap接口，如此一来可用Push添加项目而用Pop取出队列最高优先级的项目。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230724231642-7k2al0l","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231642-7k2al0l","updated":"20230724231642"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/container/heap/heap.go?name=release#30","TextMarkTextContent":"Interface"}]},{"ID":"20230724231643-5ld9vxr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231643-5ld9vxr","updated":"20230724231643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Interface interface {\n    sort.Interface\n    Push(x interface{}) // 向末尾添加元素\n    Pop() interface{}   // 从末尾删除元素\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231644-cre1fs1","Type":"NodeParagraph","Properties":{"id":"20230724231644-cre1fs1","updated":"20230724231644"},"Children":[{"Type":"NodeText","Data":"任何实现了本接口的类型都可以用于构建最小堆。最小堆可以通过heap.Init建立，数据是递增顺序或者空的话也是最小堆。最小堆的约束条件是："}]},{"ID":"20230724231645-ca9kk43","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231645-ca9kk43","updated":"20230724231645"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"!h.Less(j, i) for 0 \u003c= i \u003c h.Len() and 2*i+1 \u003c= j \u003c= 2*i+2 and j \u003c h.Len()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231646-ibolnal","Type":"NodeParagraph","Properties":{"id":"20230724231646-ibolnal","updated":"20230724231646"},"Children":[{"Type":"NodeText","Data":"注意接口的Push和Pop方法是供heap包调用的，请使用heap.Push和heap.Pop来向一个堆添加或者删除元素。"}]},{"ID":"20230724231647-cmqqxvx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231647-cmqqxvx","updated":"20230724231647"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/container/heap/heap.go?name=release#41","TextMarkTextContent":"Init"},{"Type":"NodeText","Data":"  初始化"}]},{"ID":"20230724231648-xvp5z1f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231648-xvp5z1f","updated":"20230724231648"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Init(h Interface)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231649-6ao3uc9","Type":"NodeParagraph","Properties":{"id":"20230724231649-6ao3uc9","updated":"20230724231649"},"Children":[{"Type":"NodeText","Data":"一个堆在使用任何堆操作之前应先初始化。Init函数对于堆的约束性是幂等的（多次执行无意义），并可能在任何时候堆的约束性被破坏时被调用。本函数复杂度为O(n)，其中n等于h.Len()。"}]},{"ID":"20230724231650-52hpq70","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231650-52hpq70","updated":"20230724231650"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/container/heap/heap.go?name=release#52","TextMarkTextContent":"Push"},{"Type":"NodeText","Data":" 插入"}]},{"ID":"20230724231651-ipxgrb7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231651-ipxgrb7","updated":"20230724231651"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Push(h Interface, x interface{})\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231652-qwl6qci","Type":"NodeParagraph","Properties":{"id":"20230724231652-qwl6qci","updated":"20230724231652"},"Children":[{"Type":"NodeText","Data":"向堆h中插入元素x，并保持堆的约束性。复杂度O(log(n))，其中n等于h.Len()。"}]},{"ID":"20230724231653-38by97f","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231653-38by97f","updated":"20230724231653"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/container/heap/heap.go?name=release#61","TextMarkTextContent":"Pop"},{"Type":"NodeText","Data":" 提取"}]},{"ID":"20230724231654-9okmzt8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231654-9okmzt8","updated":"20230724231654"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Pop(h Interface) interface{}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231655-9ou3ybo","Type":"NodeParagraph","Properties":{"id":"20230724231655-9ou3ybo","updated":"20230724231655"},"Children":[{"Type":"NodeText","Data":"删除并返回堆h中的最小元素（不影响约束性）。复杂度O(log(n))，其中n等于h.Len()。等价于Remove(h, 0)。"}]},{"ID":"20230724231656-9wlbrdc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231656-9wlbrdc","updated":"20230724231656"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/container/heap/heap.go?name=release#71","TextMarkTextContent":"Remove"},{"Type":"NodeText","Data":" 删除"}]},{"ID":"20230724231657-j526ufc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231657-j526ufc","updated":"20230724231657"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Remove(h Interface, i int) interface{}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231658-19onfc9","Type":"NodeParagraph","Properties":{"id":"20230724231658-19onfc9","updated":"20230724231658"},"Children":[{"Type":"NodeText","Data":"删除堆中的第i个元素，并保持堆的约束性。复杂度O(log(n))，其中n等于h.Len()。"}]},{"ID":"20230724231659-s6f86yz","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231659-s6f86yz","updated":"20230724231659"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/container/heap/heap.go?name=release#85","TextMarkTextContent":"Fix"},{"Type":"NodeText","Data":" 修改"}]},{"ID":"20230724231660-ahuteqw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231660-ahuteqw","updated":"20230724231660"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Fix(h Interface, i int)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231661-u0xj2g9","Type":"NodeParagraph","Properties":{"id":"20230724231661-u0xj2g9","updated":"20230724231661"},"Children":[{"Type":"NodeText","Data":"在修改第i个元素后，调用本函数修复堆，比删除第i个元素后插入新元素更有效率。"}]},{"ID":"20230724231662-wqcjqh2","Type":"NodeParagraph","Properties":{"id":"20230724231662-wqcjqh2","updated":"20230724231662"},"Children":[{"Type":"NodeText","Data":"复杂度O(log(n))，其中n等于h.Len()。"}]}]}