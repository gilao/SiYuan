{"ID":"20230724231513-1orotbg","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231513-1orotbg","title":"Context 的使用","updated":"20230724231513"},"Children":[{"ID":"20230724231514-5ybl3jw","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230724231514-5ybl3jw","updated":"20230724231514"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"Go Context 的使用"}]},{"ID":"20230724231515-g1b13yh","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231515-g1b13yh","updated":"20230724231515"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"1. 使用"}]},{"ID":"20230724231516-w3flx29","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231516-w3flx29","updated":"20230724231516"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"1.1 核心接口Context"}]},{"ID":"20230724231517-pc3xcwf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231517-pc3xcwf","updated":"20230724231517"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Context interface {\n    // Deadline returns the time when work done on behalf of this context\n    // should be canceled. Deadline returns ok==false when no deadline is\n    // set.\n    Deadline() (deadline time.Time, ok bool)\n    // Done returns a channel that's closed when work done on behalf of this\n    // context should be canceled.\n    Done() \u003c-chan struct{}\n    // Err returns a non-nil error value after Done is closed.\n    Err() error\n    // Value returns the value associated with this context for key.\n    Value(key interface{}) interface{}\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231518-9e3dqa7","Type":"NodeParagraph","Properties":{"id":"20230724231518-9e3dqa7","updated":"20230724231518"},"Children":[{"Type":"NodeText","Data":"简单介绍一下其中的方法："},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"-","Properties":{"id":""}}]},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Done"},{"Type":"NodeText","Data":"会返回一个channel，当该context被取消的时候，该channel会被关闭，同时对应的使用该context的routine也应该结束并返回。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"-","Properties":{"id":""}}]},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Context"},{"Type":"NodeText","Data":"中的方法是协程安全的，这也就代表了在父routine中创建的context，可以传递给任意数量的routine并让他们同时访问。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"-","Properties":{"id":""}}]},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Deadline"},{"Type":"NodeText","Data":"会返回一个超时时间，routine获得了超时时间后，可以对某些io操作设定超时时间。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"-","Properties":{"id":""}}]},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Value"},{"Type":"NodeText","Data":"可以让routine共享一些数据，当然获得数据是协程安全的。"}]},{"ID":"20230724231519-6gbmnqg","Type":"NodeParagraph","Properties":{"id":"20230724231519-6gbmnqg","updated":"20230724231519"},"Children":[{"Type":"NodeText","Data":"在请求处理的过程中，会调用各层的函数，每层的函数会创建自己的routine，是一个routine树。所以，context也应该反映并实现成一棵树。"}]},{"ID":"20230724231520-2twyb4t","Type":"NodeParagraph","Properties":{"id":"20230724231520-2twyb4t","updated":"20230724231520"},"Children":[{"Type":"NodeText","Data":"要创建context树，第一步是要有一个根结点。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"context.Background"},{"Type":"NodeText","Data":"函数的返回值是一个空的context，经常作为树的根结点，它一般由接收请求的第一个routine创建，不能被取消、没有值、也没有过期时间。"}]},{"ID":"20230724231521-o8uxsvr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231521-o8uxsvr","updated":"20230724231521"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Background() Context\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231522-2kf4va4","Type":"NodeParagraph","Properties":{"id":"20230724231522-2kf4va4","updated":"20230724231522"},"Children":[{"Type":"NodeText","Data":"之后该怎么创建其它的子孙节点呢？context包为我们提供了以下函数："}]},{"ID":"20230724231523-zqzb25d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231523-zqzb25d","updated":"20230724231523"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func WithCancel(parent Context) (ctx Context, cancel CancelFunc)\nfunc WithDeadline(parent Context, deadline time.Time) (Context, CancelFunc)\nfunc WithTimeout(parent Context, timeout time.Duration) (Context, CancelFunc)\nfunc WithValue(parent Context, key interface{}, val interface{}) Context\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231524-0k8wwq5","Type":"NodeParagraph","Properties":{"id":"20230724231524-0k8wwq5","updated":"20230724231524"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"这四个函数的第一个参数都是父context，返回一个Context类型的值，这样就层层创建出不同的节点。子节点是从复制父节点得到的，并且根据接收的函数参数保存子节点的一些状态值，然后就可以将它传递给下层的routine了。"}]},{"ID":"20230724231525-2uyui68","Type":"NodeParagraph","Properties":{"id":"20230724231525-2uyui68","updated":"20230724231525"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"WithCancel"},{"Type":"NodeText","Data":"函数，返回一个额外的CancelFunc函数类型变量，该函数类型的定义为："}]},{"ID":"20230724231526-1xzz3l8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231526-1xzz3l8","updated":"20230724231526"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type CancelFunc func()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231527-qm3yteg","Type":"NodeParagraph","Properties":{"id":"20230724231527-qm3yteg","updated":"20230724231527"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"调用CancelFunc对象将撤销对应的Context对象"},{"Type":"NodeText","Data":"，"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"这样父结点的所在的环境中，获得了撤销子节点context的权利，当触发某些条件时，可以调用CancelFunc对象来终止子结点树的所有routine。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"在子节点的routine中，需要用类似下面的代码来判断何时退出routine："}]},{"ID":"20230724231528-n3k4ynv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231528-n3k4ynv","updated":"20230724231528"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"select {\n    case \u003c-cxt.Done():\n        // do some cleaning and return\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231529-3ez6t6o","Type":"NodeParagraph","Properties":{"id":"20230724231529-3ez6t6o","updated":"20230724231529"},"Children":[{"Type":"NodeText","Data":"根据cxt.Done()判断是否结束。当顶层的Request请求处理结束，或者外部取消了这次请求，就可以cancel掉顶层context，从而使整个请求的routine树得以退出。"}]},{"ID":"20230724231530-85fclue","Type":"NodeParagraph","Properties":{"id":"20230724231530-85fclue","updated":"20230724231530"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"WithDeadline"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"WithTimeout"},{"Type":"NodeText","Data":"比"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"WithCancel"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"多了一个时间参数"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，它**指示context存活的最长时间。如果超过了过期时间，会自动撤销它的子context。所以context的生命期是由父context的routine和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"deadline"},{"Type":"NodeText","Data":"共同决定的。**"}]},{"ID":"20230724231531-ixz025e","Type":"NodeParagraph","Properties":{"id":"20230724231531-ixz025e","updated":"20230724231531"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"WithValue"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"返回parent的一个副本，该副本保存了传入的key/value，而调用Context接口的Value(key)方法就可以得到val。注意在同一个context中设置key/value，若key相同，值会被覆盖。"}]},{"ID":"20230724231532-8m75j1b","Type":"NodeParagraph","Properties":{"id":"20230724231532-8m75j1b","updated":"20230724231532"},"Children":[{"Type":"NodeText","Data":"关于更多的使用示例，可参考"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://link.zhihu.com/?target=https%3A//blog.golang.org/context","TextMarkTextContent":"官方博客"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230724231533-zaaep0l","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231533-zaaep0l","updated":"20230724231533"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"2 原理"}]},{"ID":"20230724231534-nadv9al","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231534-nadv9al","updated":"20230724231534"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.1 上下文数据的存储与查询"}]},{"ID":"20230724231535-l5lz4ed","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231535-l5lz4ed","updated":"20230724231535"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type valueCtx struct {\n    Context\n    key, val interface{}\n}\n\nfunc WithValue(parent Context, key, val interface{}) Context {\n    if key == nil {\n        panic(\"nil key\")\n    }\n    ......\n    return \u0026valueCtx{parent, key, val}\n}\n\nfunc (c *valueCtx) Value(key interface{}) interface{} {\n    if c.key == key {\n        return c.val\n    }\n    return c.Context.Value(key)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231536-8tn678b","Type":"NodeParagraph","Properties":{"id":"20230724231536-8tn678b","updated":"20230724231536"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"context上下文数据的存储就像一个树，每个结点只存储一个key/value对。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"WithValue()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"保存一个key/value对，它将父context嵌入到新的子context，并在节点中保存了key/value数据。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"Value()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"查询key对应的value数据，会从当前context中查询，如果查不到，会递归查询父context中的数据。"}]},{"ID":"20230724231537-r46dbxg","Type":"NodeParagraph","Properties":{"id":"20230724231537-r46dbxg","updated":"20230724231537"},"Children":[{"Type":"NodeText","Data":"值得注意的是，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"context中的上下文数据并不是全局的，它只查询本节点及父节点们的数据，不能查询兄弟节点的数据。"}]},{"ID":"20230724231538-ccq6642","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231538-ccq6642","updated":"20230724231538"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.2 手动cancel和超时cancel"}]},{"ID":"20230724231539-hblughu","Type":"NodeParagraph","Properties":{"id":"20230724231539-hblughu","updated":"20230724231539"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"cancelCtx"},{"Type":"NodeText","Data":"中嵌入了父Context，实现了canceler接口："}]},{"ID":"20230724231540-yngg0vu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231540-yngg0vu","updated":"20230724231540"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type cancelCtx struct {\n    Context      // 保存parent Context\n    done chan struct{}\n    mu       sync.Mutex\n    children map[canceler]struct{}\n    err      error\n}\n\n// A canceler is a context type that can be canceled directly. The\n// implementations are *cancelCtx and *timerCtx.\ntype canceler interface {\n    cancel(removeFromParent bool, err error)\n    Done() \u003c-chan struct{}\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231541-ubim3w5","Type":"NodeParagraph","Properties":{"id":"20230724231541-ubim3w5","updated":"20230724231541"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"cancelCtx"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"结构体中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"children"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"保存它的所有"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"子canceler"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"， 当外部触发cancel时，会调用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"children"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"中的所有"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"cancel()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"来终止所有的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"cancelCtx"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"done"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"用来标识是否已被cancel。当外部触发cancel、或者父Context的channel关闭时，此done也会关闭。"}]},{"ID":"20230724231542-vfcxlpj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231542-vfcxlpj","updated":"20230724231542"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type timerCtx struct {\n    cancelCtx     //cancelCtx.Done()关闭的时机：1）用户调用cancel 2）deadline到了 3）父Context的done关闭了\n    timer    *time.Timer\n    deadline time.Time\n}\n\nfunc WithDeadline(parent Context, deadline time.Time) (Context, CancelFunc) {\n    ......\n    c := \u0026timerCtx{\n        cancelCtx: newCancelCtx(parent),\n        deadline:  deadline,\n    }\n    propagateCancel(parent, c)\n    d := time.Until(deadline)\n    if d \u003c= 0 {\n        c.cancel(true, DeadlineExceeded) // deadline has already passed\n        return c, func() { c.cancel(true, Canceled) }\n    }\n    c.mu.Lock()\n    defer c.mu.Unlock()\n    if c.err == nil {\n        c.timer = time.AfterFunc(d, func() {\n            c.cancel(true, DeadlineExceeded)\n        })\n    }\n    return c, func() { c.cancel(true, Canceled) }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231543-rw39xsh","Type":"NodeParagraph","Properties":{"id":"20230724231543-rw39xsh","updated":"20230724231543"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"timerCtx"},{"Type":"NodeText","Data":"结构体中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"deadline"},{"Type":"NodeText","Data":"保存了超时的时间，当超过这个时间，会触发"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"cancel"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230724231544-fs8h6ea","Type":"NodeParagraph","Properties":{"id":"20230724231544-fs8h6ea","updated":"20230724231544"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"img","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"../../Typora picture/v2-eff89f011b2f456f0f11fba2823da3bf_720w-167766128301411.jpeg","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230724231545-bm5dzxq","Type":"NodeParagraph","Properties":{"id":"20230724231545-bm5dzxq","updated":"20230724231545"},"Children":[{"Type":"NodeText","Data":"可以看出，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"cancelCtx也是一棵树，当触发cancel时，会cancel本结点和其子树的所有cancelCtx"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230724231546-5djmrp5","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231546-5djmrp5","updated":"20230724231546"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3 遇到的问题"}]},{"ID":"20230724231547-4pb5rrq","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231547-4pb5rrq","updated":"20230724231547"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.1 背景"}]},{"ID":"20230724231548-ixkfusm","Type":"NodeParagraph","Properties":{"id":"20230724231548-ixkfusm","updated":"20230724231548"},"Children":[{"Type":"NodeText","Data":"某天，为了给我们的系统接入etrace(内部的链路跟踪系统)，需要在gRpc/Mysql/Redis/MQ操作过程中传递requestId、rpcId，我们的解决方案是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Context"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230724231549-z2hw0z9","Type":"NodeParagraph","Properties":{"id":"20230724231549-z2hw0z9","updated":"20230724231549"},"Children":[{"Type":"NodeText","Data":"所有Mysql、MQ、Redis的操作接口的第一个参数都是context，如果这个context(或其父context)被cancel了，则操作会失败。"}]},{"ID":"20230724231550-4lleoe6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231550-4lleoe6","updated":"20230724231550"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (tx *Tx) QueryContext(ctx context.Context, query string, args ...interface{}) (*Rows, error)\nfunc(process func(context.Context, redis.Cmder) error) func(context.Context, redis.Cmder) error\nfunc (ch *Channel) Consume(ctx context.Context, handler Handler, queue string, dc \u003c-chan amqp.Delivery) error\nfunc (ch *Channel) Publish(ctx context.Context, exchange, key string, mandatory, immediate bool, msg Publishing) (err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231551-2wjuyun","Type":"NodeParagraph","Properties":{"id":"20230724231551-2wjuyun","updated":"20230724231551"},"Children":[{"Type":"NodeText","Data":"上线后，遇到一系列的坑......"}]},{"ID":"20230724231552-69k49nl","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231552-69k49nl","updated":"20230724231552"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2 Case 1"}]},{"ID":"20230724231553-umhadyl","Type":"NodeParagraph","Properties":{"id":"20230724231553-umhadyl","updated":"20230724231553"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"现象："},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"上线后，5分钟后所有用户登录失败，不断收到报警。"}]},{"ID":"20230724231554-i7ftphu","Type":"NodeParagraph","Properties":{"id":"20230724231554-i7ftphu","updated":"20230724231554"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"原因："},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"程序中使用localCache，会每5分钟Refresh(调用注册的回调函数)一次所缓存的变量。localCache中保存了一个context，在调用回调函数时会传进去。如果回调函数依赖context，可能会产生意外的结果。"}]},{"ID":"20230724231555-0b12jkl","Type":"NodeParagraph","Properties":{"id":"20230724231555-0b12jkl","updated":"20230724231555"},"Children":[{"Type":"NodeText","Data":"程序中，回调函数"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getAppIDAndAlias"},{"Type":"NodeText","Data":"的功能是从mysql中读取相关数据。如果ctx被cancel了，会直接返回失败。"}]},{"ID":"20230724231556-tl7pj3r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"dGV4dA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231556-tl7pj3r","updated":"20230724231556"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"dGV4dA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func getAppIDAndAlias(ctx context.Context, appKey, appSecret string) (string, string, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231557-1i7o6rk","Type":"NodeParagraph","Properties":{"id":"20230724231557-1i7o6rk","updated":"20230724231557"},"Children":[{"Type":"NodeText","Data":"第一次localCache.Get(ctx, appKey, appSeret)传的ctx是gRpc call传进来的context，而gRpc在请求结束或失败时会cancel掉context，导致之后cache Refresh()时，执行失败。"}]},{"ID":"20230724231558-jkb3lnc","Type":"NodeParagraph","Properties":{"id":"20230724231558-jkb3lnc","updated":"20230724231558"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"解决方法："},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"在Refresh时不使用localCache的context，使用一个不会cancel的context。"}]},{"ID":"20230724231559-yih3aaw","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231559-yih3aaw","updated":"20230724231559"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.3 Case 2"}]},{"ID":"20230724231560-of0m3gq","Type":"NodeParagraph","Properties":{"id":"20230724231560-of0m3gq","updated":"20230724231560"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"现象："},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"上线后，不断收到报警(sys err过多)。看log/etrace产生2种sys err："}]},{"ID":"20230724231561-y97loq0","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230724231561-y97loq0","updated":"20230724231561"},"Children":[{"ID":"20230724231562-ep9ylkm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230724231562-ep9ylkm","updated":"20230724231562"},"Children":[{"ID":"20230724231563-r88xcf9","Type":"NodeParagraph","Properties":{"id":"20230724231563-r88xcf9","updated":"20230724231563"},"Children":[{"Type":"NodeText","Data":"context canceled"}]}]},{"ID":"20230724231564-0hi059y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230724231564-0hi059y","updated":"20230724231564"},"Children":[{"ID":"20230724231565-5lszicx","Type":"NodeParagraph","Properties":{"id":"20230724231565-5lszicx","updated":"20230724231565"},"Children":[{"Type":"NodeText","Data":"sql: Transaction has already been committed or rolled back"}]}]}]},{"ID":"20230724231566-ushp18q","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231566-ushp18q","updated":"20230724231566"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.3.1 背景及原因"}]},{"ID":"20230724231567-xoag3bw","Type":"NodeParagraph","Properties":{"id":"20230724231567-xoag3bw","updated":"20230724231567"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"img","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"../../Typora picture/v2-7104badb8672c8e53950b992f2f70449_720w-167766128602913.jpeg","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230724231568-zyrcx4v","Type":"NodeParagraph","Properties":{"id":"20230724231568-zyrcx4v","updated":"20230724231568"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Ticket"},{"Type":"NodeText","Data":"是处理Http请求的服务，它使用Restful风格的协议。由于程序内部使用的是gRpc协议，需要某个组件进行协议转换，我们引入了"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://link.zhihu.com/?target=https%3A//github.com/grpc-ecosystem/grpc-gateway","TextMarkTextContent":"grpc-gateway"},{"Type":"NodeText","Data":"，用它来实现Restful转成gRpc的互转。"}]},{"ID":"20230724231569-pooavlh","Type":"NodeParagraph","Properties":{"id":"20230724231569-pooavlh","updated":"20230724231569"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"复现"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"context canceled"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"的流程如下："}]},{"ID":"20230724231570-z56imjq","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230724231570-z56imjq","updated":"20230724231570"},"Children":[{"ID":"20230724231571-o8ld5nd","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230724231571-o8ld5nd","updated":"20230724231571"},"Children":[{"ID":"20230724231572-vjbttpa","Type":"NodeParagraph","Properties":{"id":"20230724231572-vjbttpa","updated":"20230724231572"},"Children":[{"Type":"NodeText","Data":"客户端发送http restful请求。"}]}]},{"ID":"20230724231573-sgi4lsz","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20230724231573-sgi4lsz","updated":"20230724231573"},"Children":[{"ID":"20230724231574-uipo3bo","Type":"NodeParagraph","Properties":{"id":"20230724231574-uipo3bo","updated":"20230724231574"},"Children":[{"Type":"NodeText","Data":"grpc-gateway与客户端建立连接，接收请求，转换参数，调用后面的grpc-server。"}]}]},{"ID":"20230724231575-qm97hgl","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20230724231575-qm97hgl","updated":"20230724231575"},"Children":[{"ID":"20230724231576-eg98fzd","Type":"NodeParagraph","Properties":{"id":"20230724231576-eg98fzd","updated":"20230724231576"},"Children":[{"Type":"NodeText","Data":"grpc-server处理请求。其中，grpc-server会对每个请求启一个stream，由这个stream创建context。"}]}]},{"ID":"20230724231577-nnbhvlq","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20230724231577-nnbhvlq","updated":"20230724231577"},"Children":[{"ID":"20230724231578-p547bc9","Type":"NodeParagraph","Properties":{"id":"20230724231578-p547bc9","updated":"20230724231578"},"Children":[{"Type":"NodeText","Data":"客户端连接断开。"}]}]},{"ID":"20230724231579-4wzuuu9","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20230724231579-4wzuuu9","updated":"20230724231579"},"Children":[{"ID":"20230724231580-lcuyioe","Type":"NodeParagraph","Properties":{"id":"20230724231580-lcuyioe","updated":"20230724231580"},"Children":[{"Type":"NodeText","Data":"grpc-gateway收到连接断开的信号，导致context cancel。grpc client在发送rpc请求后由于外部异常使它的请求终止了(即它的context被cancel)，会发一个RST_STREAM。"}]}]},{"ID":"20230724231581-y7algdi","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20230724231581-y7algdi","updated":"20230724231581"},"Children":[{"ID":"20230724231582-mnnb6ne","Type":"NodeParagraph","Properties":{"id":"20230724231582-mnnb6ne","updated":"20230724231582"},"Children":[{"Type":"NodeText","Data":"grpc server收到后，马上终止请求（即grpc server的stream context被cancel）。"}]}]}]},{"ID":"20230724231583-zvzt44a","Type":"NodeParagraph","Properties":{"id":"20230724231583-zvzt44a","updated":"20230724231583"},"Children":[{"Type":"NodeText","Data":"可以看出，是因为gRpc handler在处理过程中连接被断开。"}]},{"ID":"20230724231584-f85su6h","Type":"NodeParagraph","Properties":{"id":"20230724231584-f85su6h","updated":"20230724231584"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"sql: Transaction has already been committed or rolled back"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"产生的原因："}]},{"ID":"20230724231585-kj6rqbt","Type":"NodeParagraph","Properties":{"id":"20230724231585-kj6rqbt","updated":"20230724231585"},"Children":[{"Type":"NodeText","Data":"程序中使用了官方database包来执行db transaction。其中，在db.BeginTx时，会启一个协程awaitDone："}]},{"ID":"20230724231586-bjozijp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"dGV4dA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231586-bjozijp","updated":"20230724231586"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"dGV4dA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (tx *Tx) awaitDone() {\n    // Wait for either the transaction to be committed or rolled\n    // back, or for the associated context to be closed.\n    \u003c-tx.ctx.Done()\n\n    // Discard and close the connection used to ensure the\n    // transaction is closed and the resources are released.  This\n    // rollback does nothing if the transaction has already been\n    // committed or rolled back.\n    tx.rollback(true)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231587-vbh7zfc","Type":"NodeParagraph","Properties":{"id":"20230724231587-vbh7zfc","updated":"20230724231587"},"Children":[{"Type":"NodeText","Data":"在context被cancel时，会进行rollback()，而rollback时，会操作原子变量。之后，在另一个协程中tx.Commit()时，会判断原子变量，如果变了，会抛出错误。"}]},{"ID":"20230724231588-vocbrkm","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231588-vocbrkm","updated":"20230724231588"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.3.2 解决方法"}]},{"ID":"20230724231589-2dryhb5","Type":"NodeParagraph","Properties":{"id":"20230724231589-2dryhb5","updated":"20230724231589"},"Children":[{"Type":"NodeText","Data":"这两个error都是由连接断开导致的，是正常的。可忽略这两个error。"}]},{"ID":"20230724231590-w15ej9d","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231590-w15ej9d","updated":"20230724231590"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.4 Case 3"}]},{"ID":"20230724231591-nue35ks","Type":"NodeParagraph","Properties":{"id":"20230724231591-nue35ks","updated":"20230724231591"},"Children":[{"Type":"NodeText","Data":"上线后，每两天左右有1~2次的mysql事务阻塞，导致请求耗时达到120秒。在盘古(内部的mysql运维平台)中查询到所有阻塞的事务在处理同一条记录。"}]},{"ID":"20230724231592-0ndxaz5","Type":"NodeParagraph","Properties":{"id":"20230724231592-0ndxaz5","updated":"20230724231592"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"img","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"../../Typora picture/v2-948f64209f6dc3d5f660ecbf696df6ef_720w-167766129110915.webp","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230724231593-wzts48s","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231593-wzts48s","updated":"20230724231593"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.4.1 处理过程"}]},{"ID":"20230724231594-5x147ja","Type":"NodeParagraph","Properties":{"id":"20230724231594-5x147ja","updated":"20230724231594"},"Children":[{"Type":"NodeText","Data":"\\1. 初步怀疑是跨机房的多个事务操作同一条记录导致的。由于跨机房操作，耗时会增加，导致阻塞了其他机房执行的db事务。"}]},{"ID":"20230724231595-bto3h5c","Type":"NodeParagraph","Properties":{"id":"20230724231595-bto3h5c","updated":"20230724231595"},"Children":[{"Type":"NodeText","Data":"\\2. 出现此现象时，暂时将某个接口降级。降低多个事务操作同一记录的概率。"}]},{"ID":"20230724231596-fgttlqj","Type":"NodeParagraph","Properties":{"id":"20230724231596-fgttlqj","updated":"20230724231596"},"Children":[{"Type":"NodeText","Data":"\\3. 减少事务的个数。"}]},{"ID":"20230724231597-gthtjt9","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230724231597-gthtjt9","updated":"20230724231597"},"Children":[{"ID":"20230724231598-x6i6ubd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230724231598-x6i6ubd","updated":"20230724231598"},"Children":[{"ID":"20230724231599-scvw685","Type":"NodeParagraph","Properties":{"id":"20230724231599-scvw685","updated":"20230724231599"},"Children":[{"Type":"NodeText","Data":"将单条sql的事务去掉"}]}]},{"ID":"20230724231600-fn7mb1p","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230724231600-fn7mb1p","updated":"20230724231600"},"Children":[{"ID":"20230724231601-f13876d","Type":"NodeParagraph","Properties":{"id":"20230724231601-f13876d","updated":"20230724231601"},"Children":[{"Type":"NodeText","Data":"通过业务逻辑的转移减少不必要的事务"}]}]}]},{"ID":"20230724231602-t022kh3","Type":"NodeParagraph","Properties":{"id":"20230724231602-t022kh3","updated":"20230724231602"},"Children":[{"Type":"NodeText","Data":"\\4. 调整db参数"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"innodb_lock_wait_timeout"},{"Type":"NodeText","Data":"(120s-\u003e50s)。这个参数指示mysql在执行事务时阻塞的最大时间，将这个时间减少，来减少整个操作的耗时。考虑过在程序中指定事务的超时时间，但是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"innodb_lock_wait_timeout"},{"Type":"NodeText","Data":"要么是全局，要么是session的。担心影响到session上的其它sql，所以没设置。"}]},{"ID":"20230724231603-59ltlpg","Type":"NodeParagraph","Properties":{"id":"20230724231603-59ltlpg","updated":"20230724231603"},"Children":[{"Type":"NodeText","Data":"\\5. 考虑使用分布式锁来减少操作同一条记录的事务的并发量。但由于时间关系，没做这块的改进。"}]},{"ID":"20230724231604-z8v1ns2","Type":"NodeParagraph","Properties":{"id":"20230724231604-z8v1ns2","updated":"20230724231604"},"Children":[{"Type":"NodeText","Data":"\\6. DAL同事发现有事务没提交，查看代码，找到root cause。"}]},{"ID":"20230724231605-4vy6ekw","Type":"NodeParagraph","Properties":{"id":"20230724231605-4vy6ekw","updated":"20230724231605"},"Children":[{"Type":"NodeText","Data":"原因是golang官方包database/sql会在某种竞态条件下，导致事务既没有commit，也没有rollback。"}]},{"ID":"20230724231606-eg3x9kv","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231606-eg3x9kv","updated":"20230724231606"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.4.2 源码描述"}]},{"ID":"20230724231607-228mgi9","Type":"NodeParagraph","Properties":{"id":"20230724231607-228mgi9","updated":"20230724231607"},"Children":[{"Type":"NodeText","Data":"开始事务"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://link.zhihu.com/?target=https%3A//github.com/golang/go/blob/master/src/database/sql/sql.go%23L1595","TextMarkTextContent":"BeginTxx()"},{"Type":"NodeText","Data":"时会启一个协程："}]},{"ID":"20230724231608-9b7cce7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"dGV4dA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231608-9b7cce7","updated":"20230724231608"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"dGV4dA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// awaitDone blocks until the context in Tx is canceled and rolls back\n// the transaction if it's not already done.\nfunc (tx *Tx) awaitDone() {\n    // Wait for either the transaction to be committed or rolled\n    // back, or for the associated context to be closed.\n    \u003c-tx.ctx.Done()\n\n    // Discard and close the connection used to ensure the\n    // transaction is closed and the resources are released.  This\n    // rollback does nothing if the transaction has already been\n    // committed or rolled back.\n    tx.rollback(true)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231609-4g8jxo7","Type":"NodeParagraph","Properties":{"id":"20230724231609-4g8jxo7","updated":"20230724231609"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"tx.rollback(true)"},{"Type":"NodeText","Data":"中，会先判断原子变量tx.done是否为1，如果1，则返回；如果是0，则加1，并进行rollback操作。"}]},{"ID":"20230724231610-dqdo9tn","Type":"NodeParagraph","Properties":{"id":"20230724231610-dqdo9tn","updated":"20230724231610"},"Children":[{"Type":"NodeText","Data":"在提交事务Commit()时，会先操作原子变量tx.done，然后判断context是否被cancel了，如果被cancel，则返回；如果没有，则进行commit操作。"}]},{"ID":"20230724231611-t6x94ia","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"dGV4dA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231611-t6x94ia","updated":"20230724231611"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"dGV4dA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// Commit commits the transaction.\nfunc (tx *Tx) Commit() error {\n    if !atomic.CompareAndSwapInt32(\u0026tx.done, 0, 1) {\n        return ErrTxDone\n    }\n\n    select {\n    default:\n    case \u003c-tx.ctx.Done():\n        return tx.ctx.Err()\n    }\n    var err error\n    withLock(tx.dc, func() {\n        err = tx.txi.Commit()\n    })\n    if err != driver.ErrBadConn {\n        tx.closePrepared()\n    }\n    tx.close(err)\n    return err\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231612-whrhkzm","Type":"NodeParagraph","Properties":{"id":"20230724231612-whrhkzm","updated":"20230724231612"},"Children":[{"Type":"NodeText","Data":"如果先进行commit()过程中，先操作原子变量，然后context被cancel，之后另一个协程在进行rollback()会因为原子变量置为1而返回。导致commit()没有执行，rollback()也没有执行。"}]},{"ID":"20230724231613-k8ygh80","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231613-k8ygh80","updated":"20230724231613"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.4.3 解决方法"}]},{"ID":"20230724231614-zqtc3ae","Type":"NodeParagraph","Properties":{"id":"20230724231614-zqtc3ae","updated":"20230724231614"},"Children":[{"Type":"NodeText","Data":"解决方法可以是如下任一个："}]},{"ID":"20230724231615-pay2g8x","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230724231615-pay2g8x","updated":"20230724231615"},"Children":[{"ID":"20230724231616-skbdp0m","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230724231616-skbdp0m","updated":"20230724231616"},"Children":[{"ID":"20230724231617-vofrvlw","Type":"NodeParagraph","Properties":{"id":"20230724231617-vofrvlw","updated":"20230724231617"},"Children":[{"Type":"NodeText","Data":"在执行事务时传进去一个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"不会cancel的context"}]}]},{"ID":"20230724231618-a28qet1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230724231618-a28qet1","updated":"20230724231618"},"Children":[{"ID":"20230724231619-jnj5jeu","Type":"NodeParagraph","Properties":{"id":"20230724231619-jnj5jeu","updated":"20230724231619"},"Children":[{"Type":"NodeText","Data":"修正"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"database/sql"},{"Type":"NodeText","Data":"源码，然后在编译时指定新的go编译镜像"}]}]}]},{"ID":"20230724231620-frpbs7i","Type":"NodeParagraph","Properties":{"id":"20230724231620-frpbs7i","updated":"20230724231620"},"Children":[{"Type":"NodeText","Data":"我们之后给Golang提交了"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://link.zhihu.com/?target=https%3A//github.com/golang/go/commit/bcf964de5e16486cec2e102c929768778f50eea2","TextMarkTextContent":"patch"},{"Type":"NodeText","Data":"，修正了此问题(已合入go 1.9.3)。"}]},{"ID":"20230724231621-p93syza","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231621-p93syza","updated":"20230724231621"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"4 经验教训"}]},{"ID":"20230724231622-qlaxn3t","Type":"NodeParagraph","Properties":{"id":"20230724231622-qlaxn3t","updated":"20230724231622"},"Children":[{"Type":"NodeText","Data":"由于go大量的官方库、第三方库使用了context，所以调用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"接收context的函数"},{"Type":"NodeText","Data":"时要小心，要清楚context在什么时候cancel，什么行为会触发cancel。笔者在程序经常使用gRpc传出来的context，产生了一些非预期的结果，之后花时间总结了gRpc、内部基础库中context的生命期及行为，以避免出现同样的问题。"}]}]}