{"ID":"20230724231451-tkqybyo","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231451-tkqybyo","title":"net-rpc","updated":"20230724231451"},"Children":[{"ID":"20230724231452-6n47heb","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231452-6n47heb","updated":"20230724231452"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"net-rpc"}]},{"ID":"20230724231453-4vc50z7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231453-4vc50z7","updated":"20230724231453"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"net/rpc\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231454-ac7esze","Type":"NodeParagraph","Properties":{"id":"20230724231454-ac7esze","updated":"20230724231454"},"Children":[{"Type":"NodeText","Data":"rpc包提供了通过网络或其他I/O连接对一个对象的导出方法的访问。服务端注册一个对象，使它作为一个服务被暴露，服务的名字是该对象的类型名。注册之后，对象的导出方法就可以被远程访问。服务端可以注册多个不同类型的对象（服务），但注册具有相同类型的多个对象是错误的。"}]},{"ID":"20230724231455-d4xxjto","Type":"NodeParagraph","Properties":{"id":"20230724231455-d4xxjto","updated":"20230724231455"},"Children":[{"Type":"NodeText","Data":"只有满足如下标准的方法才能用于远程访问，其余方法会被忽略："}]},{"ID":"20230724231456-9v2r2ps","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231456-9v2r2ps","updated":"20230724231456"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"- 方法是导出的\n- 方法有两个参数，都是导出类型或内建类型\n- 方法的第二个参数是指针\n- 方法只有一个error接口类型的返回值\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231457-1qcceqy","Type":"NodeParagraph","Properties":{"id":"20230724231457-1qcceqy","updated":"20230724231457"},"Children":[{"Type":"NodeText","Data":"事实上，方法必须看起来像这样："}]},{"ID":"20230724231458-8hgywo4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231458-8hgywo4","updated":"20230724231458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (t *T) MethodName(argType T1, replyType *T2) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231459-30lfpjh","Type":"NodeParagraph","Properties":{"id":"20230724231459-30lfpjh","updated":"20230724231459"},"Children":[{"Type":"NodeText","Data":"其中T、T1和T2都能被encoding/gob包序列化。这些限制即使使用不同的编解码器也适用。（未来，对定制的编解码器可能会使用较宽松一点的限制）"}]},{"ID":"20230724231460-220r8he","Type":"NodeParagraph","Properties":{"id":"20230724231460-220r8he","updated":"20230724231460"},"Children":[{"Type":"NodeText","Data":"方法的第一个参数代表调用者提供的参数；第二个参数代表返回给调用者的参数。方法的返回值，如果非nil，将被作为字符串回传，在客户端看来就和errors.New创建的一样。如果返回了错误，回复的参数将不会被发送给客户端。"}]},{"ID":"20230724231461-ujv2o32","Type":"NodeParagraph","Properties":{"id":"20230724231461-ujv2o32","updated":"20230724231461"},"Children":[{"Type":"NodeText","Data":"服务端可能会单个连接上调用ServeConn管理请求。更典型地，它会创建一个网络监听器然后调用Accept；或者，对于HTTP监听器，调用HandleHTTP和http.Serve。"}]},{"ID":"20230724231462-f7y95uw","Type":"NodeParagraph","Properties":{"id":"20230724231462-f7y95uw","updated":"20230724231462"},"Children":[{"Type":"NodeText","Data":"想要使用服务的客户端会创建一个连接，然后用该连接调用NewClient。"}]},{"ID":"20230724231463-3w8731m","Type":"NodeParagraph","Properties":{"id":"20230724231463-3w8731m","updated":"20230724231463"},"Children":[{"Type":"NodeText","Data":"更方便的函数Dial（DialHTTP）会在一个原始的连接（或HTTP连接）上依次执行这两个步骤。"}]},{"ID":"20230724231464-q0i367w","Type":"NodeParagraph","Properties":{"id":"20230724231464-q0i367w","updated":"20230724231464"},"Children":[{"Type":"NodeText","Data":"生成的Client类型值有两个方法，Call和Go，它们的参数为要调用的服务和方法、一个包含参数的指针、一个用于接收接个的指针。"}]},{"ID":"20230724231465-j4nu8th","Type":"NodeParagraph","Properties":{"id":"20230724231465-j4nu8th","updated":"20230724231465"},"Children":[{"Type":"NodeText","Data":"Call方法会等待远端调用完成，而Go方法异步的发送调用请求并使用返回的Call结构体类型的Done通道字段传递完成信号。"}]},{"ID":"20230724231466-3un4vyn","Type":"NodeParagraph","Properties":{"id":"20230724231466-3un4vyn","updated":"20230724231466"},"Children":[{"Type":"NodeText","Data":"除非设置了显式的编解码器，本包默认使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://godoc.org/encoding/gob","TextMarkTextContent":"encoding/gob"},{"Type":"NodeText","Data":"包来传输数据。"}]},{"ID":"20230724231467-zly88pv","Type":"NodeParagraph","Properties":{"id":"20230724231467-zly88pv","updated":"20230724231467"},"Children":[{"Type":"NodeText","Data":"这是一个简单的例子。一个服务端想要导出Arith类型的一个对象："}]},{"ID":"20230724231468-cpx706s","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231468-cpx706s","updated":"20230724231468"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package server\ntype Args struct {\n\tA, B int\n}\ntype Quotient struct {\n\tQuo, Rem int\n}\ntype Arith int\nfunc (t *Arith) Multiply(args *Args, reply *int) error {\n\t*reply = args.A * args.B\n\treturn nil\n}\nfunc (t *Arith) Divide(args *Args, quo *Quotient) error {\n\tif args.B == 0 {\n\t\treturn errors.New(\"divide by zero\")\n\t}\n\tquo.Quo = args.A / args.B\n\tquo.Rem = args.A % args.B\n\treturn nil\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231469-fmbm52j","Type":"NodeParagraph","Properties":{"id":"20230724231469-fmbm52j","updated":"20230724231469"},"Children":[{"Type":"NodeText","Data":"服务端会调用（用于HTTP服务）："}]},{"ID":"20230724231470-okz6c78","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231470-okz6c78","updated":"20230724231470"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"arith := new(Arith)\nrpc.Register(arith)\nrpc.HandleHTTP()\nl, e := net.Listen(\"tcp\", \":1234\")\nif e != nil {\n\tlog.Fatal(\"listen error:\", e)\n}\ngo http.Serve(l, nil)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231471-f5b5ks4","Type":"NodeParagraph","Properties":{"id":"20230724231471-f5b5ks4","updated":"20230724231471"},"Children":[{"Type":"NodeText","Data":"此时，客户端可看到服务\"Arith\"及它的方法\"Arith.Multiply\"、\"Arith.Divide\"。要调用方法，客户端首先呼叫服务端："}]},{"ID":"20230724231472-p0lyse1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231472-p0lyse1","updated":"20230724231472"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"client, err := rpc.DialHTTP(\"tcp\", serverAddress + \":1234\")\nif err != nil {\n\tlog.Fatal(\"dialing:\", err)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231473-nnlj63d","Type":"NodeParagraph","Properties":{"id":"20230724231473-nnlj63d","updated":"20230724231473"},"Children":[{"Type":"NodeText","Data":"然后，客户端可以执行远程调用："}]},{"ID":"20230724231474-6w2r66e","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231474-6w2r66e","updated":"20230724231474"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// Synchronous call\nargs := \u0026server.Args{7,8}\nvar reply int\nerr = client.Call(\"Arith.Multiply\", args, \u0026reply)\nif err != nil {\n\tlog.Fatal(\"arith error:\", err)\n}\nfmt.Printf(\"Arith: %d*%d=%d\", args.A, args.B, reply)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231475-b443lc9","Type":"NodeParagraph","Properties":{"id":"20230724231475-b443lc9","updated":"20230724231475"},"Children":[{"Type":"NodeText","Data":"或："}]},{"ID":"20230724231476-z57hz6k","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231476-z57hz6k","updated":"20230724231476"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// Asynchronous call\nquotient := new(Quotient)\ndivCall := client.Go(\"Arith.Divide\", args, quotient, nil)\nreplyCall := \u003c-divCall.Done\t// will be equal to divCall\n// check errors, print, etc.\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231477-o5yxdbg","Type":"NodeParagraph","Properties":{"id":"20230724231477-o5yxdbg","updated":"20230724231477"},"Children":[{"Type":"NodeText","Data":"服务端的实现应为客户端提供简单、类型安全的包装。"}]},{"ID":"20230724231478-bouvryk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231478-bouvryk","updated":"20230724231478"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Constants"}]},{"ID":"20230724231479-xt00xah","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231479-xt00xah","updated":"20230724231479"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    // HandleHTTP使用的默认值\n    DefaultRPCPath   = \"/_goRPC_\"\n    DefaultDebugPath = \"/debug/rpc\"\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231480-xhtkvbe","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231480-xhtkvbe","updated":"20230724231480"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Variables"}]},{"ID":"20230724231481-cpmmdn4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231481-cpmmdn4","updated":"20230724231481"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var DefaultServer = NewServer()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231482-dghasx5","Type":"NodeParagraph","Properties":{"id":"20230724231482-dghasx5","updated":"20230724231482"},"Children":[{"Type":"NodeText","Data":"DefaultServer是*Server的默认实例，本包和Server方法同名的函数都是对其方法的封装。"}]},{"ID":"20230724231483-wokuu8x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231483-wokuu8x","updated":"20230724231483"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var ErrShutdown = errors.New(\"connection is shut down\")\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231484-n826onv","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231484-n826onv","updated":"20230724231484"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#20","TextMarkTextContent":"ServerError"}]},{"ID":"20230724231485-0hyxk0h","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231485-0hyxk0h","updated":"20230724231485"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ServerError string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231486-eqbccke","Type":"NodeParagraph","Properties":{"id":"20230724231486-eqbccke","updated":"20230724231486"},"Children":[{"Type":"NodeText","Data":"ServerError represents an error that has been returned from the remote side of the RPC connection."}]},{"ID":"20230724231487-8mb8h12","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231487-8mb8h12","updated":"20230724231487"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (ServerError) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#22","TextMarkTextContent":"Error"}]},{"ID":"20230724231488-bxktm54","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231488-bxktm54","updated":"20230724231488"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (e ServerError) Error() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231489-lnwsgvo","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231489-lnwsgvo","updated":"20230724231489"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#167","TextMarkTextContent":"Request"}]},{"ID":"20230724231490-g0hullf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231490-g0hullf","updated":"20230724231490"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Request struct {\n    ServiceMethod string // 格式：\"Service.Method\"\n    Seq           uint64 // 由客户端选择的序列号\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231491-xt2m8pp","Type":"NodeParagraph","Properties":{"id":"20230724231491-xt2m8pp","updated":"20230724231491"},"Children":[{"Type":"NodeText","Data":"Request是每个RPC调用请求的头域。它是被内部使用的，这里的文档用于帮助debug，如分析网络拥堵时。"}]},{"ID":"20230724231492-oqdc1eq","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231492-oqdc1eq","updated":"20230724231492"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#176","TextMarkTextContent":"Response"}]},{"ID":"20230724231493-4ixmuq8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231493-4ixmuq8","updated":"20230724231493"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Response struct {\n    ServiceMethod string // 对应请求的同一字段\n    Seq           uint64 // 对应请求的同一字段\n    Error         string // 可能的错误\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231494-rk7lx8e","Type":"NodeParagraph","Properties":{"id":"20230724231494-rk7lx8e","updated":"20230724231494"},"Children":[{"Type":"NodeText","Data":"Response是每个RPC调用回复的头域。它是被内部使用的，这里的文档用于帮助debug，如分析网络拥堵时。"}]},{"ID":"20230724231495-dmcyddn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231495-dmcyddn","updated":"20230724231495"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#62","TextMarkTextContent":"ClientCodec"}]},{"ID":"20230724231496-ksegg2o","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231496-ksegg2o","updated":"20230724231496"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ClientCodec interface {\n    // 本方法必须能安全的被多个go程同时使用\n    WriteRequest(*Request, interface{}) error\n    ReadResponseHeader(*Response) error\n    ReadResponseBody(interface{}) error\n    Close() error\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231497-wplf7le","Type":"NodeParagraph","Properties":{"id":"20230724231497-wplf7le","updated":"20230724231497"},"Children":[{"Type":"NodeText","Data":"ClientCodec接口实现了RPC会话的客户端一侧RPC请求的写入和RPC回复的读取。客户端调用WriteRequest来写入请求到连接，然后成对调用ReadRsponseHeader和ReadResponseBody以读取回复。客户端在结束该连接的事务时调用Close方法。ReadResponseBody可以使用nil参数调用，以强制回复的主体被读取然后丢弃。"}]},{"ID":"20230724231498-xartvcb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231498-xartvcb","updated":"20230724231498"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#618","TextMarkTextContent":"ServerCodec"}]},{"ID":"20230724231499-vrby1yb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231499-vrby1yb","updated":"20230724231499"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ServerCodec interface {\n    ReadRequestHeader(*Request) error\n    ReadRequestBody(interface{}) error\n    // 本方法必须能安全的被多个go程同时使用\n    WriteResponse(*Response, interface{}) error\n    Close() error\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231500-s1uc2rz","Type":"NodeParagraph","Properties":{"id":"20230724231500-s1uc2rz","updated":"20230724231500"},"Children":[{"Type":"NodeText","Data":"ServerCodec接口实现了RPC会话的服务端一侧RPC请求的读取和RPC回复的写入。服务端通过成对调用方法ReadRequestHeader和ReadRequestBody从连接读取请求，然后调用WriteResponse来写入回复。服务端在结束该连接的事务时调用Close方法。ReadRequestBody可以使用nil参数调用，以强制请求的主体被读取然后丢弃。"}]},{"ID":"20230724231501-rt737r1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231501-rt737r1","updated":"20230724231501"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#29","TextMarkTextContent":"Call"}]},{"ID":"20230724231502-92nlqoj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231502-92nlqoj","updated":"20230724231502"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Call struct {\n    ServiceMethod string      // 调用的服务和方法的名称\n    Args          interface{} // 函数的参数（下层为结构体指针）\n    Reply         interface{} // 函数的回复（下层为结构体指针）\n    Error         error       // 在调用结束后，保管错误的状态\n    Done          chan *Call  // 对其的接收操作会阻塞，直到远程调用结束\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231503-e8aq1q9","Type":"NodeParagraph","Properties":{"id":"20230724231503-e8aq1q9","updated":"20230724231503"},"Children":[{"Type":"NodeText","Data":"Call类型代表一个执行中/执行完毕的RPC会话。"}]},{"ID":"20230724231504-p0s7zyx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231504-p0s7zyx","updated":"20230724231504"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#41","TextMarkTextContent":"Client"}]},{"ID":"20230724231505-rhyi9ui","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231505-rhyi9ui","updated":"20230724231505"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Client struct {\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231506-5sru3t4","Type":"NodeParagraph","Properties":{"id":"20230724231506-5sru3t4","updated":"20230724231506"},"Children":[{"Type":"NodeText","Data":"Client类型代表RPC客户端。同一个客户端可能有多个未返回的调用，也可能被多个go程同时使用。"}]},{"ID":"20230724231507-9569ur6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231507-9569ur6","updated":"20230724231507"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#188","TextMarkTextContent":"NewClient"}]},{"ID":"20230724231508-9c4wzsb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231508-9c4wzsb","updated":"20230724231508"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewClient(conn io.ReadWriteCloser) *Client\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231509-yffcn2i","Type":"NodeParagraph","Properties":{"id":"20230724231509-yffcn2i","updated":"20230724231509"},"Children":[{"Type":"NodeText","Data":"NewClient返回一个新的Client，以管理对连接另一端的服务的请求。它添加缓冲到连接的写入侧，以便将回复的头域和有效负载作为一个单元发送。"}]},{"ID":"20230724231510-emkedk5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231510-emkedk5","updated":"20230724231510"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#196","TextMarkTextContent":"NewClientWithCodec"}]},{"ID":"20230724231511-66dsywa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231511-66dsywa","updated":"20230724231511"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewClientWithCodec(codec ClientCodec) *Client\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231512-dnc3ff5","Type":"NodeParagraph","Properties":{"id":"20230724231512-dnc3ff5","updated":"20230724231512"},"Children":[{"Type":"NodeText","Data":"NewClientWithCodec类似NewClient，但使用指定的编解码器，以编码请求主体和解码回复主体。"}]},{"ID":"20230724231513-i27s4tk","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231513-i27s4tk","updated":"20230724231513"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#269","TextMarkTextContent":"Dial"}]},{"ID":"20230724231514-ijcllj3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231514-ijcllj3","updated":"20230724231514"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Dial(network, address string) (*Client, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231515-4ktic5j","Type":"NodeParagraph","Properties":{"id":"20230724231515-4ktic5j","updated":"20230724231515"},"Children":[{"Type":"NodeText","Data":"Dial在指定的网络和地址与RPC服务端连接。"}]},{"ID":"20230724231516-f4wevcc","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231516-f4wevcc","updated":"20230724231516"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#236","TextMarkTextContent":"DialHTTP"}]},{"ID":"20230724231517-t0g0tjt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231517-t0g0tjt","updated":"20230724231517"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func DialHTTP(network, address string) (*Client, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231518-cd5uatq","Type":"NodeParagraph","Properties":{"id":"20230724231518-cd5uatq","updated":"20230724231518"},"Children":[{"Type":"NodeText","Data":"DialHTTP在指定的网络和地址与在默认HTTP RPC路径监听的HTTP RPC服务端连接。"}]},{"ID":"20230724231519-jgt0n0o","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231519-jgt0n0o","updated":"20230724231519"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#242","TextMarkTextContent":"DialHTTPPath"}]},{"ID":"20230724231520-zvb5f0x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231520-zvb5f0x","updated":"20230724231520"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func DialHTTPPath(network, address, path string) (*Client, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231521-hpza45y","Type":"NodeParagraph","Properties":{"id":"20230724231521-hpza45y","updated":"20230724231521"},"Children":[{"Type":"NodeText","Data":"DialHTTPPath在指定的网络、地址和路径与HTTP RPC服务端连接。"}]},{"ID":"20230724231522-ux3jeth","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231522-ux3jeth","updated":"20230724231522"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Client) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#314","TextMarkTextContent":"Call"}]},{"ID":"20230724231523-p8eh52x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231523-p8eh52x","updated":"20230724231523"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (client *Client) Call(serviceMethod string, args interface{}, reply interface{}) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231524-nws40tc","Type":"NodeParagraph","Properties":{"id":"20230724231524-nws40tc","updated":"20230724231524"},"Children":[{"Type":"NodeText","Data":"Call调用指定的方法，等待调用返回，将结果写入reply，然后返回执行的错误状态。"}]},{"ID":"20230724231525-vjpa0fe","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231525-vjpa0fe","updated":"20230724231525"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Client) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#292","TextMarkTextContent":"Go"}]},{"ID":"20230724231526-4dsko8n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231526-4dsko8n","updated":"20230724231526"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (client *Client) Go(serviceMethod string, args interface{}, reply interface{}, done chan *Call) *Call\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231527-a68kk1h","Type":"NodeParagraph","Properties":{"id":"20230724231527-a68kk1h","updated":"20230724231527"},"Children":[{"Type":"NodeText","Data":"Go异步的调用函数。本方法Call结构体类型指针的返回值代表该次远程调用。通道类型的参数done会在本次调用完成时发出信号（通过返回本次Go方法的返回值）。如果done为nil，Go会申请一个新的通道（写入返回值的Done字段）；如果done非nil，done必须有缓冲，否则Go方法会故意崩溃。"}]},{"ID":"20230724231528-qjcc7z0","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231528-qjcc7z0","updated":"20230724231528"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Client) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/client.go?name=release#277","TextMarkTextContent":"Close"}]},{"ID":"20230724231529-5ii6sqs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231529-5ii6sqs","updated":"20230724231529"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (client *Client) Close() error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231530-icliw3m","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231530-icliw3m","updated":"20230724231530"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#184","TextMarkTextContent":"Server"}]},{"ID":"20230724231531-vv137jt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231531-vv137jt","updated":"20230724231531"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Server struct {\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231532-9ow0z6l","Type":"NodeParagraph","Properties":{"id":"20230724231532-9ow0z6l","updated":"20230724231532"},"Children":[{"Type":"NodeText","Data":"Server代表RPC服务端。"}]},{"ID":"20230724231533-n8gzf5z","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231533-n8gzf5z","updated":"20230724231533"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#194","TextMarkTextContent":"NewServer"}]},{"ID":"20230724231534-02i07yr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231534-02i07yr","updated":"20230724231534"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewServer() *Server\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231535-v1kfkdu","Type":"NodeParagraph","Properties":{"id":"20230724231535-v1kfkdu","updated":"20230724231535"},"Children":[{"Type":"NodeText","Data":"NewServer创建并返回一个*Server。"}]},{"ID":"20230724231536-k6tqdr7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231536-k6tqdr7","updated":"20230724231536"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#227","TextMarkTextContent":"Register"}]},{"ID":"20230724231537-otc5dcm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231537-otc5dcm","updated":"20230724231537"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (server *Server) Register(rcvr interface{}) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231538-rvt2vuo","Type":"NodeParagraph","Properties":{"id":"20230724231538-rvt2vuo","updated":"20230724231538"},"Children":[{"Type":"NodeText","Data":"Register在server注册并公布rcvr的方法集中满足如下要求的方法："}]},{"ID":"20230724231539-ny2xkmk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231539-ny2xkmk","updated":"20230724231539"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"- 方法是导出的\n- 方法有两个参数，都是导出类型或内建类型\n- 方法的第二个参数是指针\n- 方法只有一个error接口类型的返回值\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231540-apd8584","Type":"NodeParagraph","Properties":{"id":"20230724231540-apd8584","updated":"20230724231540"},"Children":[{"Type":"NodeText","Data":"如果rcvr不是一个导出类型的值，或者该类型没有满足要求的方法，Register会返回错误。Register也会使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://godoc.org/log","TextMarkTextContent":"log"},{"Type":"NodeText","Data":"包将错误写入日志。客户端可以使用格式为\"Type.Method\"的字符串访问这些方法，其中Type是rcvr的具体类型。"}]},{"ID":"20230724231541-7nlbard","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231541-7nlbard","updated":"20230724231541"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#233","TextMarkTextContent":"RegisterName"}]},{"ID":"20230724231542-2ck9v5a","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231542-2ck9v5a","updated":"20230724231542"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (server *Server) RegisterName(name string, rcvr interface{}) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231543-ix1mx5d","Type":"NodeParagraph","Properties":{"id":"20230724231543-ix1mx5d","updated":"20230724231543"},"Children":[{"Type":"NodeText","Data":"RegisterName类似Register，但使用提供的name代替rcvr的具体类型名作为服务名。"}]},{"ID":"20230724231544-aj2zy86","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231544-aj2zy86","updated":"20230724231544"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#592","TextMarkTextContent":"Accept"}]},{"ID":"20230724231545-bgt8ynv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231545-bgt8ynv","updated":"20230724231545"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (server *Server) Accept(lis net.Listener)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231546-0r1j2ke","Type":"NodeParagraph","Properties":{"id":"20230724231546-0r1j2ke","updated":"20230724231546"},"Children":[{"Type":"NodeText","Data":"Accept接收监听器l获取的连接，然后服务每一个连接。Accept会阻塞，调用者应另开线程：\"go server.Accept(l)\""}]},{"ID":"20230724231547-f92kkt0","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231547-f92kkt0","updated":"20230724231547"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#427","TextMarkTextContent":"ServeConn"}]},{"ID":"20230724231548-jna5wnv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231548-jna5wnv","updated":"20230724231548"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (server *Server) ServeConn(conn io.ReadWriteCloser)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231549-3mff0ds","Type":"NodeParagraph","Properties":{"id":"20230724231549-3mff0ds","updated":"20230724231549"},"Children":[{"Type":"NodeText","Data":"ServeConn在单个连接上执行server。ServeConn会阻塞，服务该连接直到客户端挂起。调用者一般应另开线程调用本函数：\"go server.ServeConn(conn)\"。ServeConn在该连接使用gob（参见encoding/gob包）有线格式。要使用其他的编解码器，可调用ServeCodec方法。"}]},{"ID":"20230724231550-k3n0rs1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231550-k3n0rs1","updated":"20230724231550"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#435","TextMarkTextContent":"ServeCodec"}]},{"ID":"20230724231551-lwphipz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231551-lwphipz","updated":"20230724231551"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (server *Server) ServeCodec(codec ServerCodec)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231552-b2mrsnl","Type":"NodeParagraph","Properties":{"id":"20230724231552-b2mrsnl","updated":"20230724231552"},"Children":[{"Type":"NodeText","Data":"ServeCodec类似ServeConn，但使用指定的编解码器，以编码请求主体和解码回复主体。"}]},{"ID":"20230724231553-wudpfpv","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231553-wudpfpv","updated":"20230724231553"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#460","TextMarkTextContent":"ServeRequest"}]},{"ID":"20230724231554-tirdeof","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231554-tirdeof","updated":"20230724231554"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (server *Server) ServeRequest(codec ServerCodec) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231555-ih3ruxo","Type":"NodeParagraph","Properties":{"id":"20230724231555-ih3ruxo","updated":"20230724231555"},"Children":[{"Type":"NodeText","Data":"ServeRequest类似ServeCodec，但异步的服务单个请求。它不会在调用结束后关闭codec。"}]},{"ID":"20230724231556-acb9iek","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231556-acb9iek","updated":"20230724231556"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#657","TextMarkTextContent":"ServeHTTP"}]},{"ID":"20230724231557-hpo78em","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231557-hpo78em","updated":"20230724231557"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (server *Server) ServeHTTP(w http.ResponseWriter, req *http.Request)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231558-krkihvu","Type":"NodeParagraph","Properties":{"id":"20230724231558-krkihvu","updated":"20230724231558"},"Children":[{"Type":"NodeText","Data":"ServeHTTP实现了回应RPC请求的http.Handler接口。"}]},{"ID":"20230724231559-b09amuq","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231559-b09amuq","updated":"20230724231559"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#676","TextMarkTextContent":"HandleHTTP"}]},{"ID":"20230724231560-9yc3810","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231560-9yc3810","updated":"20230724231560"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (server *Server) HandleHTTP(rpcPath, debugPath string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231561-mvgwiuc","Type":"NodeParagraph","Properties":{"id":"20230724231561-mvgwiuc","updated":"20230724231561"},"Children":[{"Type":"NodeText","Data":"HandleHTTP注册server的RPC信息HTTP处理器对应到rpcPath，注册server的debug信息HTTP处理器对应到debugPath。HandleHTTP会注册到http.DefaultServeMux。之后，仍需要调用http.Serve()，一般会另开线程：\"go http.Serve(l, nil)\""}]},{"ID":"20230724231562-zhpz58s","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231562-zhpz58s","updated":"20230724231562"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#603","TextMarkTextContent":"Register"}]},{"ID":"20230724231563-l3xhq7n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231563-l3xhq7n","updated":"20230724231563"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Register(rcvr interface{}) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231564-zntbmg9","Type":"NodeParagraph","Properties":{"id":"20230724231564-zntbmg9","updated":"20230724231564"},"Children":[{"Type":"NodeText","Data":"Register在DefaultServer注册并公布rcvr的方法。"}]},{"ID":"20230724231565-peqpybm","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231565-peqpybm","updated":"20230724231565"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#607","TextMarkTextContent":"RegisterName"}]},{"ID":"20230724231566-1cbl8op","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231566-1cbl8op","updated":"20230724231566"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func RegisterName(name string, rcvr interface{}) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231567-qaeubhw","Type":"NodeParagraph","Properties":{"id":"20230724231567-qaeubhw","updated":"20230724231567"},"Children":[{"Type":"NodeText","Data":"RegisterName函数类似Register函数，但使用提供的name代替rcvr的具体类型名作为服务名。"}]},{"ID":"20230724231568-ia1zm9z","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231568-ia1zm9z","updated":"20230724231568"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#651","TextMarkTextContent":"Accept"}]},{"ID":"20230724231569-qt35851","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231569-qt35851","updated":"20230724231569"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Accept(lis net.Listener)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231570-lvm2vx8","Type":"NodeParagraph","Properties":{"id":"20230724231570-lvm2vx8","updated":"20230724231570"},"Children":[{"Type":"NodeText","Data":"Accept接收监听器l获取的连接，然后将每一个连接交给DefaultServer服务。Accept会阻塞，调用者应另开线程：\"go server.Accept(l)\""}]},{"ID":"20230724231571-ikqu0ws","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231571-ikqu0ws","updated":"20230724231571"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#632","TextMarkTextContent":"ServeConn"}]},{"ID":"20230724231572-rb6pmag","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231572-rb6pmag","updated":"20230724231572"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ServeConn(conn io.ReadWriteCloser)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231573-ikkrbx3","Type":"NodeParagraph","Properties":{"id":"20230724231573-ikkrbx3","updated":"20230724231573"},"Children":[{"Type":"NodeText","Data":"ServeConn在单个连接上执行DefaultServer。ServeConn会阻塞，服务该连接直到客户端挂起。调用者一般应另开线程调用本函数：\"go ServeConn(conn)\"。ServeConn在该连接使用gob（参见encoding/gob包）有线格式。要使用其他的编解码器，可调用ServeCodec方法。"}]},{"ID":"20230724231574-cz8msvx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231574-cz8msvx","updated":"20230724231574"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#638","TextMarkTextContent":"ServeCodec"}]},{"ID":"20230724231575-vpmmni1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231575-vpmmni1","updated":"20230724231575"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ServeCodec(codec ServerCodec)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231576-abi68is","Type":"NodeParagraph","Properties":{"id":"20230724231576-abi68is","updated":"20230724231576"},"Children":[{"Type":"NodeText","Data":"ServeCodec类似ServeConn，但使用指定的编解码器，以编码请求主体和解码回复主体。"}]},{"ID":"20230724231577-zwkd1xo","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231577-zwkd1xo","updated":"20230724231577"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#644","TextMarkTextContent":"ServeRequest"}]},{"ID":"20230724231578-vrgcz11","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231578-vrgcz11","updated":"20230724231578"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ServeRequest(codec ServerCodec) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231579-ts4cljs","Type":"NodeParagraph","Properties":{"id":"20230724231579-ts4cljs","updated":"20230724231579"},"Children":[{"Type":"NodeText","Data":"ServeRequest类似ServeCodec，但异步的服务单个请求。它不会在调用结束后关闭codec。"}]},{"ID":"20230724231580-uz67994","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231580-uz67994","updated":"20230724231580"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/rpc/server.go?name=release#684","TextMarkTextContent":"HandleHTTP"}]},{"ID":"20230724231581-f4nn093","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231581-f4nn093","updated":"20230724231581"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func HandleHTTP()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231582-1246rfb","Type":"NodeParagraph","Properties":{"id":"20230724231582-1246rfb","updated":"20230724231582"},"Children":[{"Type":"NodeText","Data":"HandleHTTP函数注册DefaultServer的RPC信息HTTP处理器对应到DefaultRPCPath，和DefaultServer的debug处理器对应到DefaultDebugPath。HandleHTTP函数会注册到http.DefaultServeMux。之后，仍需要调用http.Serve()，一般会另开线程：\"go http.Serve(l, nil)\""}]}]}