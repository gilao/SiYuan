{"ID":"20230724231155-pqupid6","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231155-pqupid6","title":"reflect","updated":"20230724231155"},"Children":[{"ID":"20230724231156-ql50534","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231156-ql50534","updated":"20230724231156"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"reflect"}]},{"ID":"20230724231157-duxmrxu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231157-duxmrxu","updated":"20230724231157"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"reflect\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231158-fuvvfiw","Type":"NodeParagraph","Properties":{"id":"20230724231158-fuvvfiw","updated":"20230724231158"},"Children":[{"Type":"NodeText","Data":"reflect包实现了运行时反射，允许程序操作任意类型的对象。典型用法是用静态类型interface{}保存一个值，通过调用TypeOf获取其动态类型信息，该函数返回一个Type类型值。调用ValueOf函数返回一个Value类型值，该值代表运行时的数据。Zero接受一个Type类型参数并返回一个代表该类型零值的Value类型值。"}]},{"ID":"20230724231159-jybt95p","Type":"NodeParagraph","Properties":{"id":"20230724231159-jybt95p","updated":"20230724231159"},"Children":[{"Type":"NodeText","Data":"参见\"The Laws of Reflection\"获取go反射的介绍：http://golang.org/doc/articles/laws_of_reflection.html"}]},{"ID":"20230724231160-6k7kzzc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231160-6k7kzzc","updated":"20230724231160"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Constants"}]},{"ID":"20230724231161-t6u8cgv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231161-t6u8cgv","updated":"20230724231161"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    SelectSend    // case Chan \u003c- Send\n    SelectRecv    // case \u003c-Chan:\n    SelectDefault // default\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231162-796ipsr","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231162-796ipsr","updated":"20230724231162"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#187","TextMarkTextContent":"ValueError"}]},{"ID":"20230724231163-1up3lw8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231163-1up3lw8","updated":"20230724231163"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ValueError struct {\n    Method string\n    Kind   Kind\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231164-efm0bqa","Type":"NodeParagraph","Properties":{"id":"20230724231164-efm0bqa","updated":"20230724231164"},"Children":[{"Type":"NodeText","Data":"当一个Value类型值调用它不支持的方法时，将导致ValueError。具体情况参见各个方法。"}]},{"ID":"20230724231165-9sa3whk","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231165-9sa3whk","updated":"20230724231165"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ValueError) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#192","TextMarkTextContent":"Error"}]},{"ID":"20230724231166-1dlaca8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231166-1dlaca8","updated":"20230724231166"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (e *ValueError) Error() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231167-mn6vagj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231167-mn6vagj","updated":"20230724231167"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#208","TextMarkTextContent":"Kind"}]},{"ID":"20230724231168-6771l9v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231168-6771l9v","updated":"20230724231168"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Kind uint\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231169-46ro7ut","Type":"NodeParagraph","Properties":{"id":"20230724231169-46ro7ut","updated":"20230724231169"},"Children":[{"Type":"NodeText","Data":"Kind代表Type类型值表示的具体分类。零值表示非法分类。"}]},{"ID":"20230724231170-8v2d1dc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231170-8v2d1dc","updated":"20230724231170"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    Invalid Kind = iota\n    Bool\n    Int\n    Int8\n    Int16\n    Int32\n    Int64\n    Uint\n    Uint8\n    Uint16\n    Uint32\n    Uint64\n    Uintptr\n    Float32\n    Float64\n    Complex64\n    Complex128\n    Array\n    Chan\n    Func\n    Interface\n    Map\n    Ptr\n    Slice\n    String\n    Struct\n    UnsafePointer\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231171-pu5widv","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231171-pu5widv","updated":"20230724231171"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Kind) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#406","TextMarkTextContent":"String"}]},{"ID":"20230724231172-p3sqohw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231172-p3sqohw","updated":"20230724231172"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (k Kind) String() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231173-so4f02n","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231173-so4f02n","updated":"20230724231173"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1914","TextMarkTextContent":"StringHeader"}]},{"ID":"20230724231174-0iswa72","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231174-0iswa72","updated":"20230724231174"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type StringHeader struct {\n    Data uintptr\n    Len  int\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231175-4q5s3wy","Type":"NodeParagraph","Properties":{"id":"20230724231175-4q5s3wy","updated":"20230724231175"},"Children":[{"Type":"NodeText","Data":"StringHeader代表一个运行时的字符串。它不保证使用的可移植性、安全性；它的实现在未来的版本里也可能会改变。而且，Data字段也不能保证它指向的数据不会被当成垃圾收集，因此程序必须维护一个独立的、类型正确的指向底层数据的指针。"}]},{"ID":"20230724231176-ds89ckk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231176-ds89ckk","updated":"20230724231176"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1931","TextMarkTextContent":"SliceHeader"}]},{"ID":"20230724231177-rfi1nu4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231177-rfi1nu4","updated":"20230724231177"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type SliceHeader struct {\n    Data uintptr\n    Len  int\n    Cap  int\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231178-nliaw5c","Type":"NodeParagraph","Properties":{"id":"20230724231178-nliaw5c","updated":"20230724231178"},"Children":[{"Type":"NodeText","Data":"SliceHeader代表一个运行时的切片。它不保证使用的可移植性、安全性；它的实现在未来的版本里也可能会改变。而且，Data字段也不能保证它指向的数据不会被当成垃圾收集，因此程序必须维护一个独立的、类型正确的指向底层数据的指针。"}]},{"ID":"20230724231179-i3h3e8p","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231179-i3h3e8p","updated":"20230724231179"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#734","TextMarkTextContent":"StructField"}]},{"ID":"20230724231180-5kmz4xi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231180-5kmz4xi","updated":"20230724231180"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type StructField struct {\n    // Name是字段的名字。PkgPath是非导出字段的包路径，对导出字段该字段为\"\"。\n    // 参见http://golang.org/ref/spec#Uniqueness_of_identifiers\n    Name    string\n    PkgPath string\n    Type      Type      // 字段的类型\n    Tag       StructTag // 字段的标签\n    Offset    uintptr   // 字段在结构体中的字节偏移量\n    Index     []int     // 用于Type.FieldByIndex时的索引切片\n    Anonymous bool      // 是否匿名字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231181-xx3f1p7","Type":"NodeParagraph","Properties":{"id":"20230724231181-xx3f1p7","updated":"20230724231181"},"Children":[{"Type":"NodeText","Data":"StructField类型描述结构体中的一个字段的信息。"}]},{"ID":"20230724231182-rr7bmvg","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231182-rr7bmvg","updated":"20230724231182"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#757","TextMarkTextContent":"StructTag"}]},{"ID":"20230724231183-cwyjw5e","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231183-cwyjw5e","updated":"20230724231183"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type StructTag string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231184-p4s197p","Type":"NodeParagraph","Properties":{"id":"20230724231184-p4s197p","updated":"20230724231184"},"Children":[{"Type":"NodeText","Data":"StructTag是结构体字段的标签。"}]},{"ID":"20230724231185-9jvm56r","Type":"NodeParagraph","Properties":{"id":"20230724231185-9jvm56r","updated":"20230724231185"},"Children":[{"Type":"NodeText","Data":"一般来说，标签字符串是（可选的）空格分隔的一连串"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"key:\u0026quot;value\u0026quot;"},{"Type":"NodeText","Data":"对。每个键都是不包含控制字符、空格、双引号、冒号的非空字符串。每个值都应被双引号括起来，使用go字符串字面语法。"}]},{"ID":"20230724231186-amixutw","Type":"NodeParagraph","Properties":{"id":"20230724231186-amixutw","updated":"20230724231186"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231187-ml7lhf0","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231187-ml7lhf0","updated":"20230724231187"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (StructTag) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#763","TextMarkTextContent":"Get"}]},{"ID":"20230724231188-nw0c8ap","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231188-nw0c8ap","updated":"20230724231188"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (tag StructTag) Get(key string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231189-zorze5k","Type":"NodeParagraph","Properties":{"id":"20230724231189-zorze5k","updated":"20230724231189"},"Children":[{"Type":"NodeText","Data":"Get方法返回标签字符串中键key对应的值。如果标签中没有该键，会返回\"\"。如果标签不符合标准格式，Get的返回值是不确定的。"}]},{"ID":"20230724231190-af422bu","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231190-af422bu","updated":"20230724231190"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#280","TextMarkTextContent":"ChanDir"}]},{"ID":"20230724231191-13w1j31","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231191-13w1j31","updated":"20230724231191"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ChanDir int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231192-o1u9dfs","Type":"NodeParagraph","Properties":{"id":"20230724231192-o1u9dfs","updated":"20230724231192"},"Children":[{"Type":"NodeText","Data":"ChanDir表示通道类型的方向。"}]},{"ID":"20230724231193-jov2dja","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231193-jov2dja","updated":"20230724231193"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    RecvDir ChanDir             = 1 \u003c\u003c iota // \u003c-chan\n    SendDir                                 // chan\u003c-\n    BothDir = RecvDir | SendDir             // chan\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231194-91wmv2f","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231194-91wmv2f","updated":"20230724231194"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (ChanDir) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#688","TextMarkTextContent":"String"}]},{"ID":"20230724231195-qqihne7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231195-qqihne7","updated":"20230724231195"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (d ChanDir) String() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231196-y6rhwjk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231196-y6rhwjk","updated":"20230724231196"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2074","TextMarkTextContent":"SelectDir"}]},{"ID":"20230724231197-daguwgr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231197-daguwgr","updated":"20230724231197"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type SelectDir int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231198-9v91zfi","Type":"NodeParagraph","Properties":{"id":"20230724231198-9v91zfi","updated":"20230724231198"},"Children":[{"Type":"NodeText","Data":"SelectDir描述一个SelectCase的通信方向。"}]},{"ID":"20230724231199-vdo3ql6","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231199-vdo3ql6","updated":"20230724231199"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2102","TextMarkTextContent":"SelectCase"}]},{"ID":"20230724231200-g67bphe","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231200-g67bphe","updated":"20230724231200"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type SelectCase struct {\n    Dir  SelectDir // case的方向\n    Chan Value     // 使用的通道（收/发）\n    Send Value     // 用于发送的值\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231201-s72vbop","Type":"NodeParagraph","Properties":{"id":"20230724231201-s72vbop","updated":"20230724231201"},"Children":[{"Type":"NodeText","Data":"SelectCase描述select操作中的单条case。Case的类型由通信方向Dir决定。"}]},{"ID":"20230724231202-oav1cry","Type":"NodeParagraph","Properties":{"id":"20230724231202-oav1cry","updated":"20230724231202"},"Children":[{"Type":"NodeText","Data":"如果Dir是SelectDefault，该条case代表default case。Chan和Send字段必须是Value零值。"}]},{"ID":"20230724231203-rrj9y92","Type":"NodeParagraph","Properties":{"id":"20230724231203-rrj9y92","updated":"20230724231203"},"Children":[{"Type":"NodeText","Data":"如果Dir是SelectSend，该条case代表一个发送操作。Chan字段底层必须是一个chan类型，Send的底层必须是可以直接赋值给该chan类型成员类型的类型。如果Chan是Value零值，则不管Send字段是不是零值，该条case都会被忽略。"}]},{"ID":"20230724231204-pv8utxb","Type":"NodeParagraph","Properties":{"id":"20230724231204-pv8utxb","updated":"20230724231204"},"Children":[{"Type":"NodeText","Data":"如果Dir是SelectRecv，该条case代表一个接收操作。Chan字段底层必须是一个chan类型，而Send必须是一个Value零值。如果Chan是Value零值，该条case会被忽略，但Send字段仍需是Value零值。当该条case被执行时，接收到的值会被Select返回。"}]},{"ID":"20230724231205-ouvdhtp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231205-ouvdhtp","updated":"20230724231205"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2115","TextMarkTextContent":"Select"}]},{"ID":"20230724231206-hw7mbtd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231206-hw7mbtd","updated":"20230724231206"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Select(cases []SelectCase) (chosen int, recv Value, recvOK bool)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231207-l3bfs8u","Type":"NodeParagraph","Properties":{"id":"20230724231207-l3bfs8u","updated":"20230724231207"},"Children":[{"Type":"NodeText","Data":"Select函数执行cases切片描述的select操作。 类似go的select语句，它会阻塞直到至少一条case可以执行，从可执行的case中（伪）随机的选择一条，并执行该条case。它会返回选择执行的case的索引，以及如果执行的是接收case时，会返回接收到的值，以及一个布尔值说明该值是否对应于通道中某次发送的值（用以区分通道关闭时接收到的零值，此时recvOK会设为false）。"}]},{"ID":"20230724231208-tgp39js","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231208-tgp39js","updated":"20230724231208"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#384","TextMarkTextContent":"Method"}]},{"ID":"20230724231209-wk8vpyk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231209-wk8vpyk","updated":"20230724231209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Method struct {\n    // Name是方法名。PkgPath是非导出字段的包路径，对导出字段该字段为\"\"。\n    // 结合PkgPath和Name可以从方法集中指定一个方法。\n    // 参见http://golang.org/ref/spec#Uniqueness_of_identifiers\n    Name    string\n    PkgPath string\n    Type  Type  // 方法类型\n    Func  Value // 方法的值\n    Index int   // 用于Type.Method的索引\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231210-ml4b0zu","Type":"NodeParagraph","Properties":{"id":"20230724231210-ml4b0zu","updated":"20230724231210"},"Children":[{"Type":"NodeText","Data":"Method代表一个方法。"}]},{"ID":"20230724231211-u2jnj6y","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231211-u2jnj6y","updated":"20230724231211"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#32","TextMarkTextContent":"Type"}]},{"ID":"20230724231212-m4v1tmv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231212-m4v1tmv","updated":"20230724231212"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Type interface {\n    // Kind返回该接口的具体分类\n    Kind() Kind\n    // Name返回该类型在自身包内的类型名，如果是未命名类型会返回\"\"\n    Name() string\n    // PkgPath返回类型的包路径，即明确指定包的import路径，如\"encoding/base64\"\n    // 如果类型为内建类型(string, error)或未命名类型(*T, struct{}, []int)，会返回\"\"\n    PkgPath() string\n    // 返回类型的字符串表示。该字符串可能会使用短包名（如用base64代替\"encoding/base64\"）\n    // 也不保证每个类型的字符串表示不同。如果要比较两个类型是否相等，请直接用Type类型比较。\n    String() string\n    // 返回要保存一个该类型的值需要多少字节；类似unsafe.Sizeof\n    Size() uintptr\n    // 返回当从内存中申请一个该类型值时，会对齐的字节数\n    Align() int\n    // 返回当该类型作为结构体的字段时，会对齐的字节数\n    FieldAlign() int\n    // 如果该类型实现了u代表的接口，会返回真\n    Implements(u Type) bool\n    // 如果该类型的值可以直接赋值给u代表的类型，返回真\n    AssignableTo(u Type) bool\n    // 如该类型的值可以转换为u代表的类型，返回真\n    ConvertibleTo(u Type) bool\n    // 返回该类型的字位数。如果该类型的Kind不是Int、Uint、Float或Complex，会panic\n    Bits() int\n    // 返回array类型的长度，如非数组类型将panic\n    Len() int\n    // 返回该类型的元素类型，如果该类型的Kind不是Array、Chan、Map、Ptr或Slice，会panic\n    Elem() Type\n    // 返回map类型的键的类型。如非映射类型将panic\n    Key() Type\n    // 返回一个channel类型的方向，如非通道类型将会panic\n    ChanDir() ChanDir\n    // 返回struct类型的字段数（匿名字段算作一个字段），如非结构体类型将panic\n    NumField() int\n    // 返回struct类型的第i个字段的类型，如非结构体或者i不在[0, NumField())内将会panic\n    Field(i int) StructField\n    // 返回索引序列指定的嵌套字段的类型，\n    // 等价于用索引中每个值链式调用本方法，如非结构体将会panic\n    FieldByIndex(index []int) StructField\n    // 返回该类型名为name的字段（会查找匿名字段及其子字段），\n    // 布尔值说明是否找到，如非结构体将panic\n    FieldByName(name string) (StructField, bool)\n    // 返回该类型第一个字段名满足函数match的字段，布尔值说明是否找到，如非结构体将会panic\n    FieldByNameFunc(match func(string) bool) (StructField, bool)\n    // 如果函数类型的最后一个输入参数是\"...\"形式的参数，IsVariadic返回真\n    // 如果这样，t.In(t.NumIn() - 1)返回参数的隐式的实际类型（声明类型的切片）\n    // 如非函数类型将panic\n    IsVariadic() bool\n    // 返回func类型的参数个数，如果不是函数，将会panic\n    NumIn() int\n    // 返回func类型的第i个参数的类型，如非函数或者i不在[0, NumIn())内将会panic\n    In(i int) Type\n    // 返回func类型的返回值个数，如果不是函数，将会panic\n    NumOut() int\n    // 返回func类型的第i个返回值的类型，如非函数或者i不在[0, NumOut())内将会panic\n    Out(i int) Type\n    // 返回该类型的方法集中方法的数目\n    // 匿名字段的方法会被计算；主体类型的方法会屏蔽匿名字段的同名方法；\n    // 匿名字段导致的歧义方法会滤除\n    NumMethod() int\n    // 返回该类型方法集中的第i个方法，i不在[0, NumMethod())范围内时，将导致panic\n    // 对非接口类型T或*T，返回值的Type字段和Func字段描述方法的未绑定函数状态\n    // 对接口类型，返回值的Type字段描述方法的签名，Func字段为nil\n    Method(int) Method\n    // 根据方法名返回该类型方法集中的方法，使用一个布尔值说明是否发现该方法\n    // 对非接口类型T或*T，返回值的Type字段和Func字段描述方法的未绑定函数状态\n    // 对接口类型，返回值的Type字段描述方法的签名，Func字段为nil\n    MethodByName(string) (Method, bool)\n    // 内含隐藏或非导出方法\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231213-ads5f4r","Type":"NodeParagraph","Properties":{"id":"20230724231213-ads5f4r","updated":"20230724231213"},"Children":[{"Type":"NodeText","Data":"Type类型用来表示一个go类型。"}]},{"ID":"20230724231214-xda5xk5","Type":"NodeParagraph","Properties":{"id":"20230724231214-xda5xk5","updated":"20230724231214"},"Children":[{"Type":"NodeText","Data":"不是所有go类型的Type值都能使用所有方法。请参见每个方法的文档获取使用限制。在调用有分类限定的方法时，应先使用Kind方法获知类型的分类。调用该分类不支持的方法会导致运行时的panic。"}]},{"ID":"20230724231215-69pump4","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231215-69pump4","updated":"20230724231215"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#1005","TextMarkTextContent":"TypeOf"}]},{"ID":"20230724231216-26hbazr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231216-26hbazr","updated":"20230724231216"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func TypeOf(i interface{}) Type\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231217-33tatmf","Type":"NodeParagraph","Properties":{"id":"20230724231217-33tatmf","updated":"20230724231217"},"Children":[{"Type":"NodeText","Data":"TypeOf返回接口中保存的值的类型，TypeOf(nil)会返回nil。"}]},{"ID":"20230724231218-oec67rm","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231218-oec67rm","updated":"20230724231218"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#1044","TextMarkTextContent":"PtrTo"}]},{"ID":"20230724231219-984bzde","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231219-984bzde","updated":"20230724231219"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func PtrTo(t Type) Type\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231220-l1rz8dx","Type":"NodeParagraph","Properties":{"id":"20230724231220-l1rz8dx","updated":"20230724231220"},"Children":[{"Type":"NodeText","Data":"PtrTo返回类型t的指针的类型。"}]},{"ID":"20230724231221-bnv5f30","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231221-bnv5f30","updated":"20230724231221"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#1702","TextMarkTextContent":"SliceOf"}]},{"ID":"20230724231222-k8n7lfk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231222-k8n7lfk","updated":"20230724231222"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func SliceOf(t Type) Type\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231223-i9qnl4g","Type":"NodeParagraph","Properties":{"id":"20230724231223-i9qnl4g","updated":"20230724231223"},"Children":[{"Type":"NodeText","Data":"SliceOf返回类型t的切片的类型。"}]},{"ID":"20230724231224-vnoj20o","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231224-vnoj20o","updated":"20230724231224"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#1507","TextMarkTextContent":"MapOf"}]},{"ID":"20230724231225-5m6gr1c","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231225-5m6gr1c","updated":"20230724231225"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func MapOf(key, elem Type) Type\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231226-t3zyfn9","Type":"NodeParagraph","Properties":{"id":"20230724231226-t3zyfn9","updated":"20230724231226"},"Children":[{"Type":"NodeText","Data":"MapOf返回一个键类型为key，值类型为elem的映射类型。如果key代表的类型不是合法的映射键类型（即它未实现go的==操作符），本函数会panic。"}]},{"ID":"20230724231227-zr4kcoj","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231227-zr4kcoj","updated":"20230724231227"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#1437","TextMarkTextContent":"ChanOf"}]},{"ID":"20230724231228-8aeq488","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231228-8aeq488","updated":"20230724231228"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ChanOf(dir ChanDir, t Type) Type\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231229-0ba2nha","Type":"NodeParagraph","Properties":{"id":"20230724231229-0ba2nha","updated":"20230724231229"},"Children":[{"Type":"NodeText","Data":"ChanOf返回元素类型为t、方向为dir的通道类型。运行时GC强制将通道的元素类型的大小限定为64kb。如果t的尺寸大于或等于该限制，本函数将会panic。"}]},{"ID":"20230724231230-1wt76n6","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231230-1wt76n6","updated":"20230724231230"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#61","TextMarkTextContent":"Value"}]},{"ID":"20230724231231-sllw5bq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231231-sllw5bq","updated":"20230724231231"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Value struct {\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231232-39jjaqh","Type":"NodeParagraph","Properties":{"id":"20230724231232-39jjaqh","updated":"20230724231232"},"Children":[{"Type":"NodeText","Data":"Value为go值提供了反射接口。"}]},{"ID":"20230724231233-xga9j9b","Type":"NodeParagraph","Properties":{"id":"20230724231233-xga9j9b","updated":"20230724231233"},"Children":[{"Type":"NodeText","Data":"不是所有go类型值的Value表示都能使用所有方法。请参见每个方法的文档获取使用限制。在调用有分类限定的方法时，应先使用Kind方法获知该值的分类。调用该分类不支持的方法会导致运行时的panic。"}]},{"ID":"20230724231234-1dmckv4","Type":"NodeParagraph","Properties":{"id":"20230724231234-1dmckv4","updated":"20230724231234"},"Children":[{"Type":"NodeText","Data":"Value类型的零值表示不持有某个值。零值的IsValid方法返回false，其Kind方法返回Invalid，而String方法返回\"\u003cinvalid Value\u003e\"，所有其它方法都会panic。绝大多数函数和方法都永远不返回Value零值。如果某个函数/方法返回了非法的Value，它的文档必须显式的说明具体情况。"}]},{"ID":"20230724231235-tj5dfga","Type":"NodeParagraph","Properties":{"id":"20230724231235-tj5dfga","updated":"20230724231235"},"Children":[{"Type":"NodeText","Data":"如果某个go类型值可以安全的用于多线程并发操作，它的Value表示也可以安全的用于并发。"}]},{"ID":"20230724231236-dv3pskz","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231236-dv3pskz","updated":"20230724231236"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2268","TextMarkTextContent":"ValueOf"}]},{"ID":"20230724231237-kxi0ia9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231237-kxi0ia9","updated":"20230724231237"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ValueOf(i interface{}) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231238-wmd7sqh","Type":"NodeParagraph","Properties":{"id":"20230724231238-wmd7sqh","updated":"20230724231238"},"Children":[{"Type":"NodeText","Data":"ValueOf返回一个初始化为i接口保管的具体值的Value，ValueOf(nil)返回Value零值。"}]},{"ID":"20230724231239-e7yjgz9","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231239-e7yjgz9","updated":"20230724231239"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2288","TextMarkTextContent":"Zero"}]},{"ID":"20230724231240-17pp67b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231240-17pp67b","updated":"20230724231240"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Zero(typ Type) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231241-dr2w56f","Type":"NodeParagraph","Properties":{"id":"20230724231241-dr2w56f","updated":"20230724231241"},"Children":[{"Type":"NodeText","Data":"Zero返回一个持有类型typ的零值的Value。注意持有零值的Value和Value零值是两回事。Value零值表示不持有任何值。例如Zero(TypeOf(42))返回一个Kind为Int、值为0的Value。Zero的返回值不能设置也不会寻址。"}]},{"ID":"20230724231242-rm8su5t","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231242-rm8su5t","updated":"20230724231242"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2302","TextMarkTextContent":"New"}]},{"ID":"20230724231243-0l3n4hb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231243-0l3n4hb","updated":"20230724231243"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func New(typ Type) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231244-r7cg1yp","Type":"NodeParagraph","Properties":{"id":"20230724231244-r7cg1yp","updated":"20230724231244"},"Children":[{"Type":"NodeText","Data":"New返回一个Value类型值，该值持有一个指向类型为typ的新申请的零值的指针，返回值的Type为PtrTo(typ)。"}]},{"ID":"20230724231245-jicuyji","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231245-jicuyji","updated":"20230724231245"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2313","TextMarkTextContent":"NewAt"}]},{"ID":"20230724231246-nmba8ll","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231246-nmba8ll","updated":"20230724231246"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewAt(typ Type, p unsafe.Pointer) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231247-6qvtr34","Type":"NodeParagraph","Properties":{"id":"20230724231247-6qvtr34","updated":"20230724231247"},"Children":[{"Type":"NodeText","Data":"NewAt返回一个Value类型值，该值持有一个指向类型为typ、地址为p的值的指针。"}]},{"ID":"20230724231248-wirirbz","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231248-wirirbz","updated":"20230724231248"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2259","TextMarkTextContent":"Indirect"}]},{"ID":"20230724231249-i9ktyrf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231249-i9ktyrf","updated":"20230724231249"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Indirect(v Value) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231250-qwb9haj","Type":"NodeParagraph","Properties":{"id":"20230724231250-qwb9haj","updated":"20230724231250"},"Children":[{"Type":"NodeText","Data":"返回持有v持有的指针指向的值的Value。如果v持有nil指针，会返回Value零值；如果v不持有指针，会返回v。"}]},{"ID":"20230724231251-fbci92t","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231251-fbci92t","updated":"20230724231251"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2214","TextMarkTextContent":"MakeSlice"}]},{"ID":"20230724231252-a7edpvu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231252-a7edpvu","updated":"20230724231252"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func MakeSlice(typ Type, len, cap int) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231253-odc6vcj","Type":"NodeParagraph","Properties":{"id":"20230724231253-odc6vcj","updated":"20230724231253"},"Children":[{"Type":"NodeText","Data":"MakeSlice创建一个新申请的元素类型为typ，长度len容量cap的切片类型的Value值。"}]},{"ID":"20230724231254-iapgvl2","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231254-iapgvl2","updated":"20230724231254"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2248","TextMarkTextContent":"MakeMap"}]},{"ID":"20230724231255-0y9bct3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231255-0y9bct3","updated":"20230724231255"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func MakeMap(typ Type) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231256-kx6bt10","Type":"NodeParagraph","Properties":{"id":"20230724231256-kx6bt10","updated":"20230724231256"},"Children":[{"Type":"NodeText","Data":"MakeMap创建一个特定映射类型的Value值。"}]},{"ID":"20230724231257-gxk9qmm","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231257-gxk9qmm","updated":"20230724231257"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2233","TextMarkTextContent":"MakeChan"}]},{"ID":"20230724231258-kacv19o","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231258-kacv19o","updated":"20230724231258"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func MakeChan(typ Type, buffer int) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231259-jy56vbr","Type":"NodeParagraph","Properties":{"id":"20230724231259-jy56vbr","updated":"20230724231259"},"Children":[{"Type":"NodeText","Data":"MakeChan创建一个元素类型为typ、有buffer个缓存的通道类型的Value值。"}]},{"ID":"20230724231260-m91ytu9","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231260-m91ytu9","updated":"20230724231260"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/makefunc.go?name=release#43","TextMarkTextContent":"MakeFunc"}]},{"ID":"20230724231261-2u4leqh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231261-2u4leqh","updated":"20230724231261"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func MakeFunc(typ Type, fn func(args []Value) (results []Value)) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231262-trj9pof","Type":"NodeParagraph","Properties":{"id":"20230724231262-trj9pof","updated":"20230724231262"},"Children":[{"Type":"NodeText","Data":"MakeFunc返回一个具有给定类型、包装函数fn的函数的Value封装。当被调用时，该函数会："}]},{"ID":"20230724231263-tnrusx9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231263-tnrusx9","updated":"20230724231263"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"- 将提供给它的参数转化为Value切片\n- 执行results := fn(args)\n- 将results中每一个result依次排列作为返回值\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231264-dtj11en","Type":"NodeParagraph","Properties":{"id":"20230724231264-dtj11en","updated":"20230724231264"},"Children":[{"Type":"NodeText","Data":"函数fn的实现可以假设参数Value切片匹配typ类型指定的参数数目和类型。如果typ表示一个可变参数函数类型，参数切片中最后一个Value本身必须是一个包含所有可变参数的切片。fn返回的结果Value切片也必须匹配typ类型指定的结果数目和类型。"}]},{"ID":"20230724231265-232ahw2","Type":"NodeParagraph","Properties":{"id":"20230724231265-232ahw2","updated":"20230724231265"},"Children":[{"Type":"NodeText","Data":"Value.Call方法允许程序员使用Value调用一个有类型约束的函数；反过来，MakeFunc方法允许程序员使用Value实现一个有类型约束的函数。"}]},{"ID":"20230724231266-nk8yrjt","Type":"NodeParagraph","Properties":{"id":"20230724231266-nk8yrjt","updated":"20230724231266"},"Children":[{"Type":"NodeText","Data":"下例是一个用MakeFunc创建一个生成不同参数类型的swap函数的代码及其说明。"}]},{"ID":"20230724231267-1zpesww","Type":"NodeParagraph","Properties":{"id":"20230724231267-1zpesww","updated":"20230724231267"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231268-9giilf8","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231268-9giilf8","updated":"20230724231268"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1980","TextMarkTextContent":"Append"}]},{"ID":"20230724231269-ee68s6s","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231269-ee68s6s","updated":"20230724231269"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Append(s Value, x ...Value) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231270-gu78q71","Type":"NodeParagraph","Properties":{"id":"20230724231270-gu78q71","updated":"20230724231270"},"Children":[{"Type":"NodeText","Data":"向切片类型的Value值s中添加一系列值，x等Value值持有的值必须能直接赋值给s持有的切片的元素类型。"}]},{"ID":"20230724231271-2gihpq6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231271-2gihpq6","updated":"20230724231271"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1991","TextMarkTextContent":"AppendSlice"}]},{"ID":"20230724231272-z86l1q4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231272-z86l1q4","updated":"20230724231272"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func AppendSlice(s, t Value) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231273-q1mv78v","Type":"NodeParagraph","Properties":{"id":"20230724231273-q1mv78v","updated":"20230724231273"},"Children":[{"Type":"NodeText","Data":"类似Append函数，但接受一个切片类型的Value值。将切片t的每一个值添加到s。"}]},{"ID":"20230724231274-7asiltw","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231274-7asiltw","updated":"20230724231274"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1148","TextMarkTextContent":"IsValid"}]},{"ID":"20230724231275-4e25nqu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231275-4e25nqu","updated":"20230724231275"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) IsValid() bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231276-23mbtaf","Type":"NodeParagraph","Properties":{"id":"20230724231276-23mbtaf","updated":"20230724231276"},"Children":[{"Type":"NodeText","Data":"IsValid返回v是否持有一个值。如果v是Value零值会返回假，此时v除了IsValid、String、Kind之外的方法都会导致panic。绝大多数函数和方法都永远不返回Value零值。如果某个函数/方法返回了非法的Value，它的文档必须显式的说明具体情况。"}]},{"ID":"20230724231277-7ulodiq","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231277-7ulodiq","updated":"20230724231277"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1123","TextMarkTextContent":"IsNil"}]},{"ID":"20230724231278-1z8dnd1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231278-1z8dnd1","updated":"20230724231278"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) IsNil() bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231279-lnsa4xq","Type":"NodeParagraph","Properties":{"id":"20230724231279-lnsa4xq","updated":"20230724231279"},"Children":[{"Type":"NodeText","Data":"IsNil报告v持有的值是否为nil。v持有的值的分类必须是通道、函数、接口、映射、指针、切片之一；否则IsNil函数会导致panic。注意IsNil并不总是等价于go语言中值与nil的常规比较。例如：如果v是通过使用某个值为nil的接口调用ValueOf函数创建的，v.IsNil()返回真，但是如果v是Value零值，会panic。"}]},{"ID":"20230724231280-ez5m6mm","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231280-ez5m6mm","updated":"20230724231280"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1154","TextMarkTextContent":"Kind"}]},{"ID":"20230724231281-eztlg29","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231281-eztlg29","updated":"20230724231281"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Kind() Kind\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231282-99w7i58","Type":"NodeParagraph","Properties":{"id":"20230724231282-99w7i58","updated":"20230724231282"},"Children":[{"Type":"NodeText","Data":"Kind返回v持有的值的分类，如果v是Value零值，返回值为Invalid"}]},{"ID":"20230724231283-pef5chp","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231283-pef5chp","updated":"20230724231283"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1834","TextMarkTextContent":"Type"}]},{"ID":"20230724231284-5iy0wz3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231284-5iy0wz3","updated":"20230724231284"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Type() Type\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231285-2e0vg7p","Type":"NodeParagraph","Properties":{"id":"20230724231285-2e0vg7p","updated":"20230724231285"},"Children":[{"Type":"NodeText","Data":"返回v持有的值的类型的Type表示。"}]},{"ID":"20230724231286-10rknp1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231286-10rknp1","updated":"20230724231286"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2355","TextMarkTextContent":"Convert"}]},{"ID":"20230724231287-uz6pcux","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231287-uz6pcux","updated":"20230724231287"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Convert(t Type) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231288-qvl8d5v","Type":"NodeParagraph","Properties":{"id":"20230724231288-qvl8d5v","updated":"20230724231288"},"Children":[{"Type":"NodeText","Data":"Convert将v持有的值转换为类型为t的值，并返回该值的Value封装。如果go转换规则不支持这种转换，会panic。"}]},{"ID":"20230724231289-soeql80","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231289-soeql80","updated":"20230724231289"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#831","TextMarkTextContent":"Elem"}]},{"ID":"20230724231290-4a1x1xf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231290-4a1x1xf","updated":"20230724231290"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Elem() Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231291-8seg7pf","Type":"NodeParagraph","Properties":{"id":"20230724231291-8seg7pf","updated":"20230724231291"},"Children":[{"Type":"NodeText","Data":"Elem返回v持有的接口保管的值的Value封装，或者v持有的指针指向的值的Value封装。如果v的Kind不是Interface或Ptr会panic；如果v持有的值为nil，会返回Value零值。"}]},{"ID":"20230724231292-9xz5qz5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231292-9xz5qz5","updated":"20230724231292"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#352","TextMarkTextContent":"Bool"}]},{"ID":"20230724231293-w27gedv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231293-w27gedv","updated":"20230724231293"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Bool() bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231294-2jrqws9","Type":"NodeParagraph","Properties":{"id":"20230724231294-2jrqws9","updated":"20230724231294"},"Children":[{"Type":"NodeText","Data":"返回v持有的布尔值，如果v的Kind不是Bool会panic"}]},{"ID":"20230724231295-gr6kr3q","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231295-gr6kr3q","updated":"20230724231295"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1031","TextMarkTextContent":"Int"}]},{"ID":"20230724231296-fy0d0fd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231296-fy0d0fd","updated":"20230724231296"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Int() int64\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231297-fcjlmtg","Type":"NodeParagraph","Properties":{"id":"20230724231297-fcjlmtg","updated":"20230724231297"},"Children":[{"Type":"NodeText","Data":"返回v持有的有符号整数（表示为int64），如果v的Kind不是Int、Int8、Int16、Int32、Int64会panic"}]},{"ID":"20230724231298-tbv3z4m","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231298-tbv3z4m","updated":"20230724231298"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1361","TextMarkTextContent":"OverflowInt"}]},{"ID":"20230724231299-710qeus","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231299-710qeus","updated":"20230724231299"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) OverflowInt(x int64) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231300-l59fvdk","Type":"NodeParagraph","Properties":{"id":"20230724231300-l59fvdk","updated":"20230724231300"},"Children":[{"Type":"NodeText","Data":"如果v持有值的类型不能无溢出的表示x，会返回真。如果v的Kind不是Int、Int8、Int16、Int32、Int64会panic"}]},{"ID":"20230724231301-t36jk1u","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231301-t36jk1u","updated":"20230724231301"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1867","TextMarkTextContent":"Uint"}]},{"ID":"20230724231302-pn3pnp6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231302-pn3pnp6","updated":"20230724231302"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Uint() uint64\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231303-kb06zox","Type":"NodeParagraph","Properties":{"id":"20230724231303-kb06zox","updated":"20230724231303"},"Children":[{"Type":"NodeText","Data":"返回v持有的无符号整数（表示为uint64），如v的Kind不是Uint、Uintptr、Uint8、Uint16、Uint32、Uint64会panic"}]},{"ID":"20230724231304-1kl2man","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231304-1kl2man","updated":"20230724231304"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1374","TextMarkTextContent":"OverflowUint"}]},{"ID":"20230724231305-6w5w3z7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231305-6w5w3z7","updated":"20230724231305"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) OverflowUint(x uint64) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231306-vhvxxn3","Type":"NodeParagraph","Properties":{"id":"20230724231306-vhvxxn3","updated":"20230724231306"},"Children":[{"Type":"NodeText","Data":"如果v持有值的类型不能无溢出的表示x，会返回真。如果v的Kind不是Uint、Uintptr、Uint8、Uint16、Uint32、Uint64会panic"}]},{"ID":"20230724231307-qmx1ox1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231307-qmx1ox1","updated":"20230724231307"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#948","TextMarkTextContent":"Float"}]},{"ID":"20230724231308-09r2jgq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231308-09r2jgq","updated":"20230724231308"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Float() float64\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231309-a8zehvg","Type":"NodeParagraph","Properties":{"id":"20230724231309-a8zehvg","updated":"20230724231309"},"Children":[{"Type":"NodeText","Data":"返回v持有的浮点数（表示为float64），如果v的Kind不是Float32、Float64会panic"}]},{"ID":"20230724231310-iu9rbbk","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231310-iu9rbbk","updated":"20230724231310"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1341","TextMarkTextContent":"OverflowFloat"}]},{"ID":"20230724231311-dhzcvlh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231311-dhzcvlh","updated":"20230724231311"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) OverflowFloat(x float64) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231312-m8j2p85","Type":"NodeParagraph","Properties":{"id":"20230724231312-m8j2p85","updated":"20230724231312"},"Children":[{"Type":"NodeText","Data":"如果v持有值的类型不能无溢出的表示x，会返回真。如果v的Kind不是Float32、Float64会panic"}]},{"ID":"20230724231313-wzywkzd","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231313-wzywkzd","updated":"20230724231313"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#812","TextMarkTextContent":"Complex"}]},{"ID":"20230724231314-eo5kxpu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231314-eo5kxpu","updated":"20230724231314"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Complex() complex128\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231315-njhq71w","Type":"NodeParagraph","Properties":{"id":"20230724231315-njhq71w","updated":"20230724231315"},"Children":[{"Type":"NodeText","Data":"返回v持有的复数（表示为complex64），如果v的Kind不是Complex64、Complex128会panic"}]},{"ID":"20230724231316-omzctqd","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231316-omzctqd","updated":"20230724231316"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1328","TextMarkTextContent":"OverflowComplex"}]},{"ID":"20230724231317-0c4qkbd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231317-0c4qkbd","updated":"20230724231317"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) OverflowComplex(x complex128) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231318-cq4c1qp","Type":"NodeParagraph","Properties":{"id":"20230724231318-cq4c1qp","updated":"20230724231318"},"Children":[{"Type":"NodeText","Data":"如果v持有值的类型不能无溢出的表示x，会返回真。如果v的Kind不是Complex64、Complex128会panic"}]},{"ID":"20230724231319-o952tq8","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231319-o952tq8","updated":"20230724231319"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1399","TextMarkTextContent":"Pointer"}]},{"ID":"20230724231320-uzj1iat","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231320-uzj1iat","updated":"20230724231320"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Pointer() uintptr\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231321-1bn9t4x","Type":"NodeParagraph","Properties":{"id":"20230724231321-1bn9t4x","updated":"20230724231321"},"Children":[{"Type":"NodeText","Data":"将v持有的值作为一个指针返回。本方法返回值不是unsafe.Pointer类型，以避免程序员不显式导入unsafe包却得到unsafe.Pointer类型表示的指针。如果v的Kind不是Chan、Func、Map、Ptr、Slice或UnsafePointer会panic。"}]},{"ID":"20230724231322-kikcslr","Type":"NodeParagraph","Properties":{"id":"20230724231322-kikcslr","updated":"20230724231322"},"Children":[{"Type":"NodeText","Data":"如果v的Kind是Func，返回值是底层代码的指针，但并不足以用于区分不同的函数；只能保证当且仅当v持有函数类型零值nil时，返回值为0。"}]},{"ID":"20230724231323-zdxrl96","Type":"NodeParagraph","Properties":{"id":"20230724231323-zdxrl96","updated":"20230724231323"},"Children":[{"Type":"NodeText","Data":"如果v的Kind是Slice，返回值是指向切片第一个元素的指针。如果持有的切片为nil，返回值为0；如果持有的切片没有元素但不是nil，返回值不会是0。"}]},{"ID":"20230724231324-ak9vw9h","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231324-ak9vw9h","updated":"20230724231324"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#362","TextMarkTextContent":"Bytes"}]},{"ID":"20230724231325-4ea0btz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231325-4ea0btz","updated":"20230724231325"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Bytes() []byte\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231326-z8sec1b","Type":"NodeParagraph","Properties":{"id":"20230724231326-z8sec1b","updated":"20230724231326"},"Children":[{"Type":"NodeText","Data":"返回v持有的[]byte类型值。如果v持有的值的类型不是[]byte会panic。"}]},{"ID":"20230724231327-mqy6foc","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231327-mqy6foc","updated":"20230724231327"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1800","TextMarkTextContent":"String"}]},{"ID":"20230724231328-kra36qd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231328-kra36qd","updated":"20230724231328"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) String() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231329-jt29ln6","Type":"NodeParagraph","Properties":{"id":"20230724231329-jt29ln6","updated":"20230724231329"},"Children":[{"Type":"NodeText","Data":"返回v持有的值的字符串表示。因为go的String方法的惯例，Value的String方法比较特别。和其他获取v持有值的方法不同：v的Kind是String时，返回该字符串；v的Kind不是String时也不会panic而是返回格式为\"\u003cT value\u003e\"的字符串，其中T是v持有值的类型。"}]},{"ID":"20230724231330-hmp39nt","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231330-hmp39nt","updated":"20230724231330"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1105","TextMarkTextContent":"InterfaceData"}]},{"ID":"20230724231331-s36t59d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231331-s36t59d","updated":"20230724231331"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) InterfaceData() [2]uintptr\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231332-yncpm6n","Type":"NodeParagraph","Properties":{"id":"20230724231332-yncpm6n","updated":"20230724231332"},"Children":[{"Type":"NodeText","Data":"返回v持有的接口类型值的数据。如果v的Kind不是Interface会panic"}]},{"ID":"20230724231333-3z527p6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231333-3z527p6","updated":"20230724231333"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1698","TextMarkTextContent":"Slice"}]},{"ID":"20230724231334-hqoumpf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231334-hqoumpf","updated":"20230724231334"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Slice(i, j int) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231335-w7xf63d","Type":"NodeParagraph","Properties":{"id":"20230724231335-w7xf63d","updated":"20230724231335"},"Children":[{"Type":"NodeText","Data":"返回v[i:j]（v持有的切片的子切片的Value封装）；如果v的Kind不是Array、Slice或String会panic。如果v是一个不可寻址的数组，或者索引出界，也会panic"}]},{"ID":"20230724231336-pc7j7q3","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231336-pc7j7q3","updated":"20230724231336"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1752","TextMarkTextContent":"Slice3"}]},{"ID":"20230724231337-uq2kpqn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231337-uq2kpqn","updated":"20230724231337"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Slice3(i, j, k int) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231338-ap0ieuq","Type":"NodeParagraph","Properties":{"id":"20230724231338-ap0ieuq","updated":"20230724231338"},"Children":[{"Type":"NodeText","Data":"是Slice的3参数版本，返回v[i:j:k] ；如果v的Kind不是Array、Slice或String会panic。如果v是一个不可寻址的数组，或者索引出界，也会panic。"}]},{"ID":"20230724231339-695gw7o","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231339-695gw7o","updated":"20230724231339"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#788","TextMarkTextContent":"Cap"}]},{"ID":"20230724231340-bz81tpv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231340-bz81tpv","updated":"20230724231340"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Cap() int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231341-k941fwa","Type":"NodeParagraph","Properties":{"id":"20230724231341-k941fwa","updated":"20230724231341"},"Children":[{"Type":"NodeText","Data":"返回v持有值的容量，如果v的Kind不是Array、Chan、Slice会panic"}]},{"ID":"20230724231342-zc2ptfl","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231342-zc2ptfl","updated":"20230724231342"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1160","TextMarkTextContent":"Len"}]},{"ID":"20230724231343-xllutxa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231343-xllutxa","updated":"20230724231343"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Len() int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231344-gclow9o","Type":"NodeParagraph","Properties":{"id":"20230724231344-gclow9o","updated":"20230724231344"},"Children":[{"Type":"NodeText","Data":"返回v持有值的长度，如果v的Kind不是Array、Chan、Slice、Map、String会panic"}]},{"ID":"20230724231345-djnwsxr","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231345-djnwsxr","updated":"20230724231345"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#969","TextMarkTextContent":"Index"}]},{"ID":"20230724231346-2jy3591","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231346-2jy3591","updated":"20230724231346"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Index(i int) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231347-rxb2i9q","Type":"NodeParagraph","Properties":{"id":"20230724231347-rxb2i9q","updated":"20230724231347"},"Children":[{"Type":"NodeText","Data":"返回v持有值的第i个元素。如果v的Kind不是Array、Chan、Slice、String，或者i出界，会panic"}]},{"ID":"20230724231348-5jju4fe","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231348-5jju4fe","updated":"20230724231348"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1184","TextMarkTextContent":"MapIndex"}]},{"ID":"20230724231349-rupmhbd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231349-rupmhbd","updated":"20230724231349"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) MapIndex(key Value) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231350-uiyfv4g","Type":"NodeParagraph","Properties":{"id":"20230724231350-uiyfv4g","updated":"20230724231350"},"Children":[{"Type":"NodeText","Data":"返回v持有值里key持有值为键对应的值的Value封装。如果v的Kind不是Map会panic。如果未找到对应值或者v持有值是nil映射，会返回Value零值。key的持有值必须可以直接赋值给v持有值类型的键类型。"}]},{"ID":"20230724231351-cfrn20f","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231351-cfrn20f","updated":"20230724231351"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1229","TextMarkTextContent":"MapKeys"}]},{"ID":"20230724231352-pflytc4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231352-pflytc4","updated":"20230724231352"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) MapKeys() []Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231353-cs3awwz","Type":"NodeParagraph","Properties":{"id":"20230724231353-cs3awwz","updated":"20230724231353"},"Children":[{"Type":"NodeText","Data":"返回一个包含v持有值中所有键的Value封装的切片，该切片未排序。如果v的Kind不是Map会panic。如果v持有值是nil，返回空切片（非nil）。"}]},{"ID":"20230724231354-i4gtu0j","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231354-i4gtu0j","updated":"20230724231354"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1320","TextMarkTextContent":"NumField"}]},{"ID":"20230724231355-cbqi7vy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231355-cbqi7vy","updated":"20230724231355"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) NumField() int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231356-wbn23ie","Type":"NodeParagraph","Properties":{"id":"20230724231356-wbn23ie","updated":"20230724231356"},"Children":[{"Type":"NodeText","Data":"返回v持有的结构体类型值的字段数，如果v的Kind不是Struct会panic"}]},{"ID":"20230724231357-po1p8yc","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231357-po1p8yc","updated":"20230724231357"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#866","TextMarkTextContent":"Field"}]},{"ID":"20230724231358-cw1yqfm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231358-cw1yqfm","updated":"20230724231358"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Field(i int) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231359-rrrxcrl","Type":"NodeParagraph","Properties":{"id":"20230724231359-rrrxcrl","updated":"20230724231359"},"Children":[{"Type":"NodeText","Data":"返回结构体的第i个字段（的Value封装）。如果v的Kind不是Struct或i出界会panic"}]},{"ID":"20230724231360-dd0ovhy","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231360-dd0ovhy","updated":"20230724231360"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#907","TextMarkTextContent":"FieldByIndex"}]},{"ID":"20230724231361-36vbfvb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231361-36vbfvb","updated":"20230724231361"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) FieldByIndex(index []int) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231362-79an5hz","Type":"NodeParagraph","Properties":{"id":"20230724231362-79an5hz","updated":"20230724231362"},"Children":[{"Type":"NodeText","Data":"返回索引序列指定的嵌套字段的Value表示，等价于用索引中的值链式调用本方法，如v的Kind非Struct将会panic"}]},{"ID":"20230724231363-228chn1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231363-228chn1","updated":"20230724231363"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#926","TextMarkTextContent":"FieldByName"}]},{"ID":"20230724231364-vttpsl4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231364-vttpsl4","updated":"20230724231364"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) FieldByName(name string) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231365-xc6ykdo","Type":"NodeParagraph","Properties":{"id":"20230724231365-xc6ykdo","updated":"20230724231365"},"Children":[{"Type":"NodeText","Data":"返回该类型名为name的字段（的Value封装）（会查找匿名字段及其子字段），如果v的Kind不是Struct会panic；如果未找到会返回Value零值。"}]},{"ID":"20230724231366-4rt9bt2","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231366-4rt9bt2","updated":"20230724231366"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#938","TextMarkTextContent":"FieldByNameFunc"}]},{"ID":"20230724231367-w3mvzaj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231367-w3mvzaj","updated":"20230724231367"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) FieldByNameFunc(match func(string) bool) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231368-ik82126","Type":"NodeParagraph","Properties":{"id":"20230724231368-ik82126","updated":"20230724231368"},"Children":[{"Type":"NodeText","Data":"返回该类型第一个字段名满足match的字段（的Value封装）（会查找匿名字段及其子字段），如果v的Kind不是Struct会panic；如果未找到会返回Value零值。"}]},{"ID":"20230724231369-kzyz73d","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231369-kzyz73d","updated":"20230724231369"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1435","TextMarkTextContent":"Recv"}]},{"ID":"20230724231370-xfp1141","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231370-xfp1141","updated":"20230724231370"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Recv() (x Value, ok bool)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231371-3uyewz7","Type":"NodeParagraph","Properties":{"id":"20230724231371-3uyewz7","updated":"20230724231371"},"Children":[{"Type":"NodeText","Data":"方法从v持有的通道接收并返回一个值（的Value封装）。如果v的Kind不是Chan会panic。方法会阻塞直到获取到值。如果返回值x对应于某个发送到v持有的通道的值，ok为真；如果因为通道关闭而返回，x为Value零值而ok为假。"}]},{"ID":"20230724231372-a0sf2hc","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231372-a0sf2hc","updated":"20230724231372"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1817","TextMarkTextContent":"TryRecv"}]},{"ID":"20230724231373-y1i9tq4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231373-y1i9tq4","updated":"20230724231373"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) TryRecv() (x Value, ok bool)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231374-9mzfuky","Type":"NodeParagraph","Properties":{"id":"20230724231374-9mzfuky","updated":"20230724231374"},"Children":[{"Type":"NodeText","Data":"TryRecv尝试从v持有的通道接收一个值，但不会阻塞。如果v的Kind不是Chan会panic。如果方法成功接收到一个值，会返回该值（的Value封装）和true；如果不能无阻塞的接收到值，返回Value零值和false；如果因为通道关闭而返回，返回值x是持有通道元素类型的零值的Value和false。"}]},{"ID":"20230724231375-1abes8h","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231375-1abes8h","updated":"20230724231375"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1470","TextMarkTextContent":"Send"}]},{"ID":"20230724231376-fnuygl4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231376-fnuygl4","updated":"20230724231376"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Send(x Value)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231377-its5z9o","Type":"NodeParagraph","Properties":{"id":"20230724231377-its5z9o","updated":"20230724231377"},"Children":[{"Type":"NodeText","Data":"方法向v持有的通道发送x持有的值。如果v的Kind不是Chan，或者x的持有值不能直接赋值给v持有通道的元素类型，会panic。"}]},{"ID":"20230724231378-rw2bi7r","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231378-rw2bi7r","updated":"20230724231378"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1827","TextMarkTextContent":"TrySend"}]},{"ID":"20230724231379-huor5bo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231379-huor5bo","updated":"20230724231379"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) TrySend(x Value) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231380-ygpkg4j","Type":"NodeParagraph","Properties":{"id":"20230724231380-ygpkg4j","updated":"20230724231380"},"Children":[{"Type":"NodeText","Data":"TrySend尝试向v持有的通道发送x持有的值，但不会阻塞。如果v的Kind不是Chan会panic。如果成功发送会返回真，否则返回假。x的持有值必须可以直接赋值给v持有通道的元素类型。"}]},{"ID":"20230724231381-h9489li","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231381-h9489li","updated":"20230724231381"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#804","TextMarkTextContent":"Close"}]},{"ID":"20230724231382-aw2na3z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231382-aw2na3z","updated":"20230724231382"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Close()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231383-6gstzf7","Type":"NodeParagraph","Properties":{"id":"20230724231383-6gstzf7","updated":"20230724231383"},"Children":[{"Type":"NodeText","Data":"关闭v持有的通道，如果v的Kind不是Chan会panic"}]},{"ID":"20230724231384-nvfwzwt","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231384-nvfwzwt","updated":"20230724231384"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#408","TextMarkTextContent":"Call"}]},{"ID":"20230724231385-ns4eyn8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231385-ns4eyn8","updated":"20230724231385"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Call(in []Value) []Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231386-iewnh0m","Type":"NodeParagraph","Properties":{"id":"20230724231386-iewnh0m","updated":"20230724231386"},"Children":[{"Type":"NodeText","Data":"Call方法使用输入的参数in调用v持有的函数。例如，如果len(in) == 3，v.Call(in)代表调用v(in[0], in[1], in[2])（其中Value值表示其持有值）。如果v的Kind不是Func会panic。它返回函数所有输出结果的Value封装的切片。和go代码一样，每一个输入实参的持有值都必须可以直接赋值给函数对应输入参数的类型。如果v持有值是可变参数函数，Call方法会自行创建一个代表可变参数的切片，将对应可变参数的值都拷贝到里面。"}]},{"ID":"20230724231387-45ldfy8","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231387-45ldfy8","updated":"20230724231387"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#421","TextMarkTextContent":"CallSlice"}]},{"ID":"20230724231388-4kgdh66","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231388-4kgdh66","updated":"20230724231388"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) CallSlice(in []Value) []Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231389-4ybbsvh","Type":"NodeParagraph","Properties":{"id":"20230724231389-4ybbsvh","updated":"20230724231389"},"Children":[{"Type":"NodeText","Data":"CallSlice调用v持有的可变参数函数，会将切片类型的in[len(in)-1]（的成员）分配给v的最后的可变参数。例如，如果len(in) == 3，v.Call(in)代表调用v(in[0], in[1], in[2])（其中Value值表示其持有值，可变参数函数的可变参数位置提供一个切片并跟三个点号代表\"解切片\"）。如果v的Kind不是Func或者v的持有值不是可变参数函数，会panic。它返回函数所有输出结果的Value封装的切片。和go代码一样，每一个输入实参的持有值都必须可以直接赋值给函数对应输入参数的类型。"}]},{"ID":"20230724231390-2bg167q","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231390-2bg167q","updated":"20230724231390"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1289","TextMarkTextContent":"NumMethod"}]},{"ID":"20230724231391-g8ezm9r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231391-g8ezm9r","updated":"20230724231391"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) NumMethod() int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231392-oewzain","Type":"NodeParagraph","Properties":{"id":"20230724231392-oewzain","updated":"20230724231392"},"Children":[{"Type":"NodeText","Data":"返回v持有值的方法集的方法数目。"}]},{"ID":"20230724231393-48373xw","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231393-48373xw","updated":"20230724231393"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1272","TextMarkTextContent":"Method"}]},{"ID":"20230724231394-02klz1x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231394-02klz1x","updated":"20230724231394"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Method(i int) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231395-ejxpzjt","Type":"NodeParagraph","Properties":{"id":"20230724231395-ejxpzjt","updated":"20230724231395"},"Children":[{"Type":"NodeText","Data":"返回v持有值类型的第i个方法的已绑定（到v的持有值的）状态的函数形式的Value封装。返回值调用Call方法时不应包含接收者；返回值持有的函数总是使用v的持有者作为接收者（即第一个参数）。如果i出界，或者v的持有值是接口类型的零值（nil），会panic。"}]},{"ID":"20230724231396-e8obf7x","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231396-e8obf7x","updated":"20230724231396"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1304","TextMarkTextContent":"MethodByName"}]},{"ID":"20230724231397-cejfgja","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231397-cejfgja","updated":"20230724231397"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) MethodByName(name string) Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231398-w9dpz3z","Type":"NodeParagraph","Properties":{"id":"20230724231398-w9dpz3z","updated":"20230724231398"},"Children":[{"Type":"NodeText","Data":"返回v的名为name的方法的已绑定（到v的持有值的）状态的函数形式的Value封装。返回值调用Call方法时不应包含接收者；返回值持有的函数总是使用v的持有者作为接收者（即第一个参数）。如果未找到该方法，会返回一个Value零值。"}]},{"ID":"20230724231399-35fmq4n","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231399-35fmq4n","updated":"20230724231399"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#387","TextMarkTextContent":"CanAddr"}]},{"ID":"20230724231400-78m0zzp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231400-78m0zzp","updated":"20230724231400"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) CanAddr() bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231401-2kdi5vp","Type":"NodeParagraph","Properties":{"id":"20230724231401-2kdi5vp","updated":"20230724231401"},"Children":[{"Type":"NodeText","Data":"返回是否可以获取v持有值的指针。可以获取指针的值被称为可寻址的。如果一个值是切片或可寻址数组的元素、可寻址结构体的字段、或从指针解引用得到的，该值即为可寻址的。"}]},{"ID":"20230724231402-9j6jk1u","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231402-9j6jk1u","updated":"20230724231402"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#343","TextMarkTextContent":"Addr"}]},{"ID":"20230724231403-1wtlbs7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231403-1wtlbs7","updated":"20230724231403"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Addr() Value\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231404-s8h03gk","Type":"NodeParagraph","Properties":{"id":"20230724231404-s8h03gk","updated":"20230724231404"},"Children":[{"Type":"NodeText","Data":"函数返回一个持有指向v持有者的指针的Value封装。如果v.CanAddr()返回假，调用本方法会panic。Addr一般用于获取结构体字段的指针或者切片的元素（的Value封装）以便调用需要指针类型接收者的方法。"}]},{"ID":"20230724231405-f9k6rni","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231405-f9k6rni","updated":"20230724231405"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1897","TextMarkTextContent":"UnsafeAddr"}]},{"ID":"20230724231406-sb6bxv8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231406-sb6bxv8","updated":"20230724231406"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) UnsafeAddr() uintptr\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231407-sbxilto","Type":"NodeParagraph","Properties":{"id":"20230724231407-sbxilto","updated":"20230724231407"},"Children":[{"Type":"NodeText","Data":"返回指向v持有数据的地址的指针（表示为uintptr）以用作高级用途，如果v不可寻址会panic。"}]},{"ID":"20230724231408-xzx9vt1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231408-xzx9vt1","updated":"20230724231408"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1057","TextMarkTextContent":"CanInterface"}]},{"ID":"20230724231409-8i7cyu5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231409-8i7cyu5","updated":"20230724231409"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) CanInterface() bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231410-qrpu9zy","Type":"NodeParagraph","Properties":{"id":"20230724231410-qrpu9zy","updated":"20230724231410"},"Children":[{"Type":"NodeText","Data":"如果CanInterface返回真，v可以不导致panic的调用Interface方法。"}]},{"ID":"20230724231411-pmfv9rw","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231411-pmfv9rw","updated":"20230724231411"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1069","TextMarkTextContent":"Interface"}]},{"ID":"20230724231412-e7jtjfj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231412-e7jtjfj","updated":"20230724231412"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Interface() (i interface{})\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231413-s717wwv","Type":"NodeParagraph","Properties":{"id":"20230724231413-s717wwv","updated":"20230724231413"},"Children":[{"Type":"NodeText","Data":"本方法返回v当前持有的值（表示为/保管在interface{}类型），等价于："}]},{"ID":"20230724231414-qmw9byy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231414-qmw9byy","updated":"20230724231414"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var i interface{} = (v's underlying value)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231415-fgre0un","Type":"NodeParagraph","Properties":{"id":"20230724231415-fgre0un","updated":"20230724231415"},"Children":[{"Type":"NodeText","Data":"如果v是通过访问非导出结构体字段获取的，会导致panic。"}]},{"ID":"20230724231416-a8jzwh0","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231416-a8jzwh0","updated":"20230724231416"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#396","TextMarkTextContent":"CanSet"}]},{"ID":"20230724231417-6pip1pl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231417-6pip1pl","updated":"20230724231417"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) CanSet() bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231418-eu0qogh","Type":"NodeParagraph","Properties":{"id":"20230724231418-eu0qogh","updated":"20230724231418"},"Children":[{"Type":"NodeText","Data":"如果v持有的值可以被修改，CanSet就会返回真。只有一个Value持有值可以被寻址同时又不是来自非导出字段时，它才可以被修改。如果CanSet返回假，调用Set或任何限定类型的设置函数（如SetBool、SetInt64）都会panic。"}]},{"ID":"20230724231419-0vihadp","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231419-0vihadp","updated":"20230724231419"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1518","TextMarkTextContent":"SetBool"}]},{"ID":"20230724231420-t1i4l8z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231420-t1i4l8z","updated":"20230724231420"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetBool(x bool)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231421-ohvjv6w","Type":"NodeParagraph","Properties":{"id":"20230724231421-ohvjv6w","updated":"20230724231421"},"Children":[{"Type":"NodeText","Data":"设置v的持有值。如果v的Kind不是Bool或者v.CanSet()返回假，会panic。"}]},{"ID":"20230724231422-a1pn2v9","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231422-a1pn2v9","updated":"20230724231422"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1576","TextMarkTextContent":"SetInt"}]},{"ID":"20230724231423-kkcc8ha","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231423-kkcc8ha","updated":"20230724231423"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetInt(x int64)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231424-wjkub4o","Type":"NodeParagraph","Properties":{"id":"20230724231424-wjkub4o","updated":"20230724231424"},"Children":[{"Type":"NodeText","Data":"设置v的持有值。如果v的Kind不是Int、Int8、Int16、Int32、Int64之一或者v.CanSet()返回假，会panic。"}]},{"ID":"20230724231425-o31nyx1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231425-o31nyx1","updated":"20230724231425"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1659","TextMarkTextContent":"SetUint"}]},{"ID":"20230724231426-0r8aage","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231426-0r8aage","updated":"20230724231426"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetUint(x uint64)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231427-3sf82h6","Type":"NodeParagraph","Properties":{"id":"20230724231427-3sf82h6","updated":"20230724231427"},"Children":[{"Type":"NodeText","Data":"设置v的持有值。如果v的Kind不是Uint、Uintptr、Uint8、Uint16、Uint32、Uint64或者v.CanSet()返回假，会panic。"}]},{"ID":"20230724231428-e5xd9l0","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231428-e5xd9l0","updated":"20230724231428"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1562","TextMarkTextContent":"SetFloat"}]},{"ID":"20230724231429-a7f7xb2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231429-a7f7xb2","updated":"20230724231429"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetFloat(x float64)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231430-s8ymnft","Type":"NodeParagraph","Properties":{"id":"20230724231430-s8ymnft","updated":"20230724231430"},"Children":[{"Type":"NodeText","Data":"设置v的持有值。如果v的Kind不是Float32、Float64或者v.CanSet()返回假，会panic。"}]},{"ID":"20230724231431-gtzfpmw","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231431-gtzfpmw","updated":"20230724231431"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1548","TextMarkTextContent":"SetComplex"}]},{"ID":"20230724231432-xu2alp5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231432-xu2alp5","updated":"20230724231432"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetComplex(x complex128)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231433-5cglri1","Type":"NodeParagraph","Properties":{"id":"20230724231433-5cglri1","updated":"20230724231433"},"Children":[{"Type":"NodeText","Data":"设置v的持有值。如果v的Kind不是Complex64、Complex128或者v.CanSet()返回假，会panic。"}]},{"ID":"20230724231434-wcm4gui","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231434-wcm4gui","updated":"20230724231434"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1526","TextMarkTextContent":"SetBytes"}]},{"ID":"20230724231435-o9jgj4x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231435-o9jgj4x","updated":"20230724231435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetBytes(x []byte)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231436-7q6w0ki","Type":"NodeParagraph","Properties":{"id":"20230724231436-7q6w0ki","updated":"20230724231436"},"Children":[{"Type":"NodeText","Data":"设置v的持有值。如果v持有值不是[]byte类型或者v.CanSet()返回假，会panic。"}]},{"ID":"20230724231437-kfyk66k","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231437-kfyk66k","updated":"20230724231437"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1689","TextMarkTextContent":"SetString"}]},{"ID":"20230724231438-kyodcz9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231438-kyodcz9","updated":"20230724231438"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetString(x string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231439-jxmjt2o","Type":"NodeParagraph","Properties":{"id":"20230724231439-jxmjt2o","updated":"20230724231439"},"Children":[{"Type":"NodeText","Data":"设置v的持有值。如果v的Kind不是String或者v.CanSet()返回假，会panic。"}]},{"ID":"20230724231440-v105b3k","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231440-v105b3k","updated":"20230724231440"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1681","TextMarkTextContent":"SetPointer"}]},{"ID":"20230724231441-v36qu4v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231441-v36qu4v","updated":"20230724231441"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetPointer(x unsafe.Pointer)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231442-hkrmfv8","Type":"NodeParagraph","Properties":{"id":"20230724231442-hkrmfv8","updated":"20230724231442"},"Children":[{"Type":"NodeText","Data":"设置v的持有值。如果v的Kind不是UnsafePointer或者v.CanSet()返回假，会panic。"}]},{"ID":"20230724231443-mhqpncz","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231443-mhqpncz","updated":"20230724231443"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1610","TextMarkTextContent":"SetCap"}]},{"ID":"20230724231444-mpivuq5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231444-mpivuq5","updated":"20230724231444"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetCap(n int)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231445-zz2hqc6","Type":"NodeParagraph","Properties":{"id":"20230724231445-zz2hqc6","updated":"20230724231445"},"Children":[{"Type":"NodeText","Data":"设定v持有值的容量。如果v的Kind不是Slice或者n出界（小于长度或超出容量），将导致panic"}]},{"ID":"20230724231446-9efzcd7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231446-9efzcd7","updated":"20230724231446"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1597","TextMarkTextContent":"SetLen"}]},{"ID":"20230724231447-3dihj2y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231447-3dihj2y","updated":"20230724231447"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetLen(n int)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231448-9jdy075","Type":"NodeParagraph","Properties":{"id":"20230724231448-9jdy075","updated":"20230724231448"},"Children":[{"Type":"NodeText","Data":"设定v持有值的长度。如果v的Kind不是Slice或者n出界（小于零或超出容量），将导致panic"}]},{"ID":"20230724231449-rl01fsr","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231449-rl01fsr","updated":"20230724231449"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1626","TextMarkTextContent":"SetMapIndex"}]},{"ID":"20230724231450-4428hdv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231450-4428hdv","updated":"20230724231450"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) SetMapIndex(key, val Value)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231451-ynhkt3l","Type":"NodeParagraph","Properties":{"id":"20230724231451-ynhkt3l","updated":"20230724231451"},"Children":[{"Type":"NodeText","Data":"用来给v的映射类型持有值添加/修改键值对，如果val是Value零值，则是删除键值对。如果v的Kind不是Map，或者v的持有值是nil，将会panic。key的持有值必须可以直接赋值给v持有值类型的键类型。val的持有值必须可以直接赋值给v持有值类型的值类型。"}]},{"ID":"20230724231452-pwbrr7c","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231452-pwbrr7c","updated":"20230724231452"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Value) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#1499","TextMarkTextContent":"Set"}]},{"ID":"20230724231453-pmyt3l7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231453-pmyt3l7","updated":"20230724231453"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (v Value) Set(x Value)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231454-r1gu93d","Type":"NodeParagraph","Properties":{"id":"20230724231454-r1gu93d","updated":"20230724231454"},"Children":[{"Type":"NodeText","Data":"将v的持有值修改为x的持有值。如果v.CanSet()返回假，会panic。x的持有值必须能直接赋给v持有值的类型。"}]},{"ID":"20230724231455-pgbr9r6","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231455-pgbr9r6","updated":"20230724231455"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/value.go?name=release#2005","TextMarkTextContent":"Copy"}]},{"ID":"20230724231456-avfi5tr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231456-avfi5tr","updated":"20230724231456"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Copy(dst, src Value) int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231457-t281g9i","Type":"NodeParagraph","Properties":{"id":"20230724231457-t281g9i","updated":"20230724231457"},"Children":[{"Type":"NodeText","Data":"将src中的值拷贝到dst，直到src被耗尽或者dst被装满，要求这二者都是slice或array，且元素类型相同。"}]},{"ID":"20230724231458-4g467tf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231458-4g467tf","updated":"20230724231458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/deepequal.go?name=release#135","TextMarkTextContent":"DeepEqual"}]},{"ID":"20230724231459-bnab4x6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231459-bnab4x6","updated":"20230724231459"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func DeepEqual(a1, a2 interface{}) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231460-wgefq5p","Type":"NodeParagraph","Properties":{"id":"20230724231460-wgefq5p","updated":"20230724231460"},"Children":[{"Type":"NodeText","Data":"用来判断两个值是否深度一致：除了类型相同；在可以时（主要是基本类型）会使用"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"；但还会比较array、slice的成员，map的键值对，结构体字段进行深入比对。map的键值对，对键只使用"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，但值会继续往深层比对。DeepEqual函数可以正确处理循环的类型。函数类型只有都会nil时才相等；空切片不等于nil切片；还会考虑array、slice的长度、map键值对数。"}]},{"ID":"20230724231461-znqy72a","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231461-znqy72a","updated":"20230724231461"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Bugs"}]},{"ID":"20230724231462-2pbqw2n","Type":"NodeParagraph","Properties":{"id":"20230724231462-2pbqw2n","updated":"20230724231462"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/reflect/type.go?name=release#192","TextMarkTextContent":"☞"},{"Type":"NodeText","Data":"FieldByName及相关的函数会将名称相同的结构体字段视为相同的字段，即使它们是来自不同包的非导出字段。这导致如果结构体类型t包含多个名为x的字段的话（被不同的包嵌入）t.FieldByName(\"x\")的行为没有良好的定义。FieldByName可能会返回其中一个名为x的字段，也可能报告说没有这个字段。细节参见golang.org/issue/4876。"}]}]}