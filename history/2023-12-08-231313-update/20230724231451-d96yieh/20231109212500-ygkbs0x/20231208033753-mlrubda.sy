{"ID":"20231208033753-mlrubda","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f5a5","id":"20231208033753-mlrubda","tags":"公众号-凉凉的知识库,Go-ServeMux","title":"深入理解Go标准库-ServeMux 的使用与模式匹配","updated":"20231208034611"},"Children":[{"ID":"20231208033814-7tdo0oa","Type":"NodeParagraph","Properties":{"id":"20231208033814-7tdo0oa","updated":"20231208033941"},"Children":[{"Type":"NodeText","Data":"根据 Golang 文档 中的介绍，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ServeMux"},{"Type":"NodeText","Data":"​是一个 HTTP 请求多路复用器("},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"HTTP Request multiplexer"},{"Type":"NodeText","Data":"​)。它按照一定规则匹配请求URL和已注册的模式，并执行其中最匹配的模式的"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Handler"},{"Type":"NodeText","Data":"​"}]},{"ID":"20231208033753-ggxabz1","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231208033753-ggxabz1","updated":"20231208033953"},"Children":[{"Type":"NodeText","Data":"基本使用"}]},{"ID":"20231208034003-99prq9r","Type":"NodeParagraph","Properties":{"id":"20231208034003-99prq9r","updated":"20231208034003"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"http.ServeMux"},{"Type":"NodeText","Data":"​实现了"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Handler"},{"Type":"NodeText","Data":"​接口"}]},{"ID":"20231208034003-mxamsy2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231208034003-mxamsy2","updated":"20231208034008"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"type Handler interface {\n ServeHTTP(ResponseWriter, *Request)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231208034003-n3s60jf","Type":"NodeParagraph","Properties":{"id":"20231208034003-n3s60jf","updated":"20231208034003"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"http.ServeMux"},{"Type":"NodeText","Data":"​提供两个函数用于注册不同Path的处理函数"}]},{"ID":"20231208034003-qgxapio","Type":"NodeList","ListData":{},"Properties":{"id":"20231208034003-qgxapio","updated":"20231208034022"},"Children":[{"ID":"20231208034003-dn9rwo4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231208034003-dn9rwo4","updated":"20231208034003"},"Children":[{"ID":"20231208034003-3ek3zba","Type":"NodeParagraph","Properties":{"id":"20231208034003-3ek3zba","updated":"20231208034003"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ServeMux.Handle"},{"Type":"NodeText","Data":"​ 接收的是"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Handler"},{"Type":"NodeText","Data":"​接口实现"}]}]},{"ID":"20231208034003-jo9jbrk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231208034003-jo9jbrk","updated":"20231208034022"},"Children":[{"ID":"20231208034003-iiikl9p","Type":"NodeParagraph","Properties":{"id":"20231208034003-iiikl9p","updated":"20231208034022"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ServeMux.HandleFunc"},{"Type":"NodeText","Data":"​接收的是匿名函数"}]}]}]},{"ID":"20231208034009-09jtces","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231208034009-09jtces","updated":"20231208034038"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"type PathBar struct {\n}\n\nfunc (m PathBar) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n\tw.Write([]byte(\"Receive path bar\"))\n\treturn\n}\n\nfunc main() {\n\tmx := http.NewServeMux()\n\n\tmx.Handle(\"/bar/\", PathBar{})\n\tmx.HandleFunc(\"/foo\", func(w http.ResponseWriter, r *http.Request) {\n\t\tw.Write([]byte(\"Receive path foo\"))\n\t})\n\n\thttp.ListenAndServe(\":8009\", mx)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231208034050-c9xehcl","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231208034050-c9xehcl","updated":"20231208034108"},"Children":[{"Type":"NodeText","Data":"通过类型转化实现接口"}]},{"ID":"20231208034108-ofmo3o9","Type":"NodeParagraph","Properties":{"id":"20231208034108-ofmo3o9","updated":"20231208034113"},"Children":[{"Type":"NodeText","Data":"值得一提的是"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ServeMux.HandleFunc"},{"Type":"NodeText","Data":"​的实现，底层还是调用了"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ServeMux.Handle"},{"Type":"NodeText","Data":"​"}]},{"ID":"20231208034114-lil4p57","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231208034114-lil4p57","updated":"20231208034130"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func (mux *ServeMux) HandleFunc(pattern string, handler func(ResponseWriter, *Request)) {\n\tif handler == nil {\n\t\tpanic(\"http: nil handler\")\n\t}\n\tmux.Handle(pattern, HandlerFunc(handler))\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231208034115-ruokcy3","Type":"NodeParagraph","Properties":{"id":"20231208034115-ruokcy3","updated":"20231208034154"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"HandlerFunc(handler)"},{"Type":"NodeText","Data":"​这里并不是函数调用，而是类型转换"}]},{"ID":"20231208034155-cmawm8c","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231208034155-cmawm8c","updated":"20231208034206"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"type HandlerFunc func(ResponseWriter, *Request)\n\n// ServeHTTP calls f(w, r).\nfunc (f HandlerFunc) ServeHTTP(w ResponseWriter, r *Request) {\n\tf(w, r)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231208034217-fsvsa86","Type":"NodeParagraph","Properties":{"id":"20231208034217-fsvsa86","updated":"20231208034217"},"Children":[{"Type":"NodeText","Data":"通过把"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"handler func(ResponseWriter, *Request)"},{"Type":"NodeText","Data":"​转换成类型"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"HandlerFunc"},{"Type":"NodeText","Data":"​，而类型"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"HandlerFunc"},{"Type":"NodeText","Data":"​实现了"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Handler"},{"Type":"NodeText","Data":"​接口"}]},{"ID":"20231208034237-j3zweau","Type":"NodeParagraph","Properties":{"id":"20231208034237-j3zweau"}},{"ID":"20231208034237-wijeyjg","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231208034237-wijeyjg","updated":"20231208034243"},"Children":[{"Type":"NodeText","Data":"全局默认值"}]},{"ID":"20231208034244-l5ts0vw","Type":"NodeParagraph","Properties":{"id":"20231208034244-l5ts0vw","updated":"20231208034250"},"Children":[{"Type":"NodeText","Data":"当没有设置"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"http.Server.Handler"},{"Type":"NodeText","Data":"​属性时，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"http.Server"},{"Type":"NodeText","Data":"​就会使用一个全局的变量"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"DefaultServeMux *ServeMux"},{"Type":"NodeText","Data":"​来作为"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"http.Server.Handler"},{"Type":"NodeText","Data":"​的值"}]},{"ID":"20231208034251-ob76n9p","Type":"NodeParagraph","Properties":{"id":"20231208034251-ob76n9p","updated":"20231208034255"},"Children":[{"Type":"NodeText","Data":"下面的代码和上面的没有区别"}]},{"ID":"20231208034335-0mx6g9d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231208034335-0mx6g9d","updated":"20231208034336"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main() {\n\thttp.Handle(\"/bar/\", PathBar{})\n\thttp.HandleFunc(\"/foo\", func(w http.ResponseWriter, r *http.Request) {\n\t\tw.Write([]byte(\"Receive path foo\"))\n\t})\n\n\thttp.ListenAndServe(\":8009\", nil)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231208034339-ltt6hds","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231208034339-ltt6hds","updated":"20231208034351"},"Children":[{"Type":"NodeText","Data":"Pattern 匹配"}]},{"ID":"20231208034356-l0hsk49","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231208034356-l0hsk49","updated":"20231208034356"},"Children":[{"Type":"NodeText","Data":"预处理"}]},{"ID":"20231208034356-hiw8va2","Type":"NodeParagraph","Properties":{"id":"20231208034356-hiw8va2","updated":"20231208034356"},"Children":[{"Type":"NodeText","Data":"预处理的是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"请求的url"},{"Type":"NodeText","Data":"，以方便匹配，在注册时是不会做任何处理的"}]},{"ID":"20231208034356-bu3q38s","Type":"NodeList","ListData":{},"Properties":{"id":"20231208034356-bu3q38s","updated":"20231208034356"},"Children":[{"ID":"20231208034356-53j0kyo","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231208034356-53j0kyo","updated":"20231208034356"},"Children":[{"ID":"20231208034356-5dmt95p","Type":"NodeParagraph","Properties":{"id":"20231208034356-5dmt95p","updated":"20231208034356"},"Children":[{"Type":"NodeText","Data":"移除host中的端口号"}]}]},{"ID":"20231208034356-3ryhrn4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231208034356-3ryhrn4","updated":"20231208034356"},"Children":[{"ID":"20231208034356-ahsd24m","Type":"NodeParagraph","Properties":{"id":"20231208034356-ahsd24m","updated":"20231208034356"},"Children":[{"Type":"NodeText","Data":"针对 URL 中包含"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".."},{"Type":"NodeText","Data":"​或者"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"."},{"Type":"NodeText","Data":"​的请求，ServeMux 会对其 Path 进行整理，并匹配到合适的路由模式上"}]}]},{"ID":"20231208034356-fhf6fdl","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231208034356-fhf6fdl","updated":"20231208034356"},"Children":[{"ID":"20231208034356-c6lchtp","Type":"NodeParagraph","Properties":{"id":"20231208034356-c6lchtp","updated":"20231208034356"},"Children":[{"Type":"NodeText","Data":"针对 URL 中包含重复"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/"},{"Type":"NodeText","Data":"​的请求，ServeMux 会对其进行重定向"}]}]}]},{"ID":"20231208034358-cewx1vq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231208034358-cewx1vq","updated":"20231208034420"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main() {\n\tmx := http.NewServeMux()\n\n\tmx.HandleFunc(\"/abc/def\", func(writer http.ResponseWriter, request *http.Request) {\n\t\tfmt.Fprintln(writer, request.Host, request.URL.Path)\n\t})\n\n\thttp.ListenAndServe(\":8009\", mx)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231208034455-vm7rj8f","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231208034455-vm7rj8f","updated":"20231208034455"},"Children":[{"Type":"NodeText","Data":"预处理的是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"请求的url"}]},{"ID":"20231208034455-7gkv2al","Type":"NodeParagraph","Properties":{"id":"20231208034455-7gkv2al","updated":"20231208034455"},"Children":[{"Type":"NodeText","Data":"pattern是不会被处理的，而请求的url都是被处理成标准格式"}]},{"ID":"20231208034455-bwajyrm","Type":"NodeParagraph","Properties":{"id":"20231208034455-bwajyrm","updated":"20231208034455"},"Children":[{"Type":"NodeText","Data":"所以如果注册如下的pattern，无论如何也是无法被命中的"}]},{"ID":"20231208034518-me4otos","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231208034518-me4otos","updated":"20231208034519"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main() {\n\tmx := http.NewServeMux()\n\n\tmx.HandleFunc(\"/abc//def\", func(writer http.ResponseWriter, request *http.Request) {\n\t\tfmt.Fprintln(writer, request.Host, request.URL.Path)\n\t})\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231208034521-y3zrn2n","Type":"NodeParagraph","Properties":{"id":"20231208034521-y3zrn2n","updated":"20231208034528"},"Children":[{"Type":"NodeText","Data":"无论是"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/abc/def"},{"Type":"NodeText","Data":"​还是"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/abc//def"},{"Type":"NodeText","Data":"​都无法被命中"}]},{"ID":"20231208034529-jt6ptkf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231208034529-jt6ptkf","updated":"20231208034541"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"$ curl 127.0.0.1:8009/abc/def\n404 page not found\n$ curl 127.0.0.1:8009/abc//def\n\u003ca href=\"/abc/def\"\u003eMoved Permanently\u003c/a\u003e.\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231208034549-j0hok33","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231208034549-j0hok33","updated":"20231208034549"},"Children":[{"Type":"NodeText","Data":" 带 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".."},{"Type":"NodeText","Data":"​​或者"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"."},{"Type":"NodeText","Data":"​​请求与重复"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/"},{"Type":"NodeText","Data":"​​请求的处理不同"}]},{"ID":"20231208034549-7yriel4","Type":"NodeParagraph","Properties":{"id":"20231208034549-7yriel4","updated":"20231208034549"},"Children":[{"Type":"NodeText","Data":"包含"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".."},{"Type":"NodeText","Data":"​或者"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"."},{"Type":"NodeText","Data":"​整理之后匹配到合适的路由模式上，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"并不会重定向"}]},{"ID":"20231208034552-67hv57v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231208034552-67hv57v","updated":"20231208034556"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"$ curl  127.0.0.1:8009/ccc/../abc/./def\n127.0.0.1:8009 /abc/def\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231208034557-pwjmdau","Type":"NodeParagraph","Properties":{"id":"20231208034557-pwjmdau","updated":"20231208034602"},"Children":[{"Type":"NodeText","Data":"含重复"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/"},{"Type":"NodeText","Data":"​，会重定向"}]},{"ID":"20231208034603-okkq2bt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231208034603-okkq2bt","updated":"20231208034609"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"$ curl -v  127.0.0.1:8009/abc//def\n*   Trying 127.0.0.1:8009...\n* Connected to 127.0.0.1 (127.0.0.1) port 8009 (#0)\n\u003e GET /abc//def HTTP/1.1\n\u003e Host: 127.0.0.1:8009\n\u003e User-Agent: curl/7.79.1\n\u003e Accept: */*\n\u003e \n* Mark bundle as not supporting multiuse\n\u003c HTTP/1.1 301 Moved Permanently\n\u003c Content-Type: text/html; charset=utf-8\n\u003c Location: /abc/def\n\u003c Date: Thu, 10 Nov 2022 16:05:13 GMT\n\u003c Content-Length: 43\n\u003c \n\u003ca href=\"/abc/def\"\u003eMoved Permanently\u003c/a\u003e.\n\n* Connection #0 to host 127.0.0.1 left intact\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231208034611-wivaelc","Type":"NodeParagraph","Properties":{"id":"20231208034611-wivaelc"}}]}