{"ID":"20230724015444-58yzm0i","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f3b3","id":"20230724015444-58yzm0i","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230724015444-58yzm0i\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230724015451-k836ub3\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230724015451-k92xp7z\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230724015451-k836ub3\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;","tags":"Docker","title":"12.软件安装的简化","updated":"20230724015500"},"Children":[{"ID":"20230724015451-k836ub3","Type":"NodeParagraph","Properties":{"id":"20230724015451-k836ub3","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"本章将涉及安装Docker镜像的细节，主要有三种方式："}]},{"ID":"20230724015451-736xpog","Type":"NodeParagraph","Properties":{"id":"20230724015451-736xpog","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"■ Docker Hub和其他注册服务器"}]},{"ID":"20230724015451-ft6euu2","Type":"NodeParagraph","Properties":{"id":"20230724015451-ft6euu2","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"■ 使用docker save和docker load命令加载、导出镜像文件"}]},{"ID":"20230724015451-hzcb5v9","Type":"NodeParagraph","Properties":{"id":"20230724015451-hzcb5v9","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"■ 用Dockerfiles构建镜像"}]},{"ID":"20230724015451-lzczvqi","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724015451-lzczvqi","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"1. 选择所需的软件"}]},{"ID":"20230724015451-qdzs2xb","Type":"NodeParagraph","Properties":{"id":"20230724015451-qdzs2xb","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"需要一种方法来命名该程序，并指定要使用的版本，以及指定你想安装的来源。"}]},{"ID":"20230724015451-mp5g2au","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724015451-mp5g2au","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"1.仓库"}]},{"ID":"20230724015451-tqnfijo","Type":"NodeParagraph","Properties":{"id":"20230724015451-tqnfijo","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"仓库是一个有名字的镜像桶，名字类似于URL。仓库名由该镜像所在的主机、拥有该镜像的用户账户和一个简短的名称组成。"}]},{"ID":"20230724015451-a21sdjw","Type":"NodeParagraph","Properties":{"id":"20230724015451-a21sdjw","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"正如软件可能有多个版本，仓库可以容纳多个镜像。每一个库中的镜像可由标签来唯一标识。"}]},{"ID":"20230724015451-4thnvq7","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724015451-4thnvq7","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"2. 使用标签"}]},{"ID":"20230724015451-aqn2hyz","Type":"NodeParagraph","Properties":{"id":"20230724015451-aqn2hyz","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"标签是唯一指定镜像的重要途径，也是一种创建有用别名的便利方法。尽管一个标签只能在一个仓库中被应用到单个镜像，但一个镜像可以有多个标签。这使得仓库管理者可以构建有用的版本或功能标签。"}]},{"ID":"20230724015451-gpmy5rg","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724015451-gpmy5rg","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"2. 查找和安装软件"}]},{"ID":"20230724015451-oynd2oj","Type":"NodeParagraph","Properties":{"id":"20230724015451-oynd2oj","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"索引就是仓库的搜索引擎。有好几个公共Docker索引库，但默认情况下Docker集成的是一个名为Docker Hub的索引库。"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Docker Hub是由Docker公司运营的注册服务器和索引库，也是Docker默认的注册服务器和索引库。当你发出docker pull或docker run命令，而没有指定一个替代的注册服务器，Docker将默认为在Docker Hub里面寻找。Docker Hub使得Docker更加好用。"}]},{"ID":"20230724015451-9y1adh9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724015451-9y1adh9","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"1. 命令行使用Docker Hub"}]},{"ID":"20230724015451-hijiqo2","Type":"NodeParagraph","Properties":{"id":"20230724015451-hijiqo2","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Docker命令行会为你搜索Docker Hub索引库，显示结果包括像每个仓库被打星的次数，标记一个官方支持的特定仓库（OFFICIAL列），标记一个特定仓库是值得信赖的（TRUSTED 列）。"}]},{"ID":"20230724015451-bjfybro","Type":"NodeParagraph","Properties":{"id":"20230724015451-bjfybro","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"镜像作者可以在Docker Hub以两种方式发布镜像："}]},{"ID":"20230724015451-sglbwhg","Type":"NodeParagraph","Properties":{"id":"20230724015451-sglbwhg","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"■ 使用命令行来发布独立系统构建的镜像。这种方式被认为是不能信任的，因为并不清楚它们究竟是如何构建的。"}]},{"ID":"20230724015451-mw8h8w0","Type":"NodeParagraph","Properties":{"id":"20230724015451-mw8h8w0","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"■ 公开Dockerfile，并使用Docker Hub的持续构建系统。Dockerfiles是构建镜像的脚本。首选自动创建的镜像版本，因为在安装之前，Dockerfile 可用于检查。第二种方式构建的镜像将被标记为可信赖的。"}]},{"ID":"20230724015451-breajmh","Type":"NodeParagraph","Properties":{"id":"20230724015451-breajmh","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"运行docker login将提醒你输入Docker Hub的账户密码。一旦你提供了，你的命令行客户端将被验证，就可以访问你的私人仓库。完成时，你可以使用docker logout命令注销。"}]},{"ID":"20230724015451-hgcn2li","Type":"NodeParagraph","Properties":{"id":"20230724015451-hgcn2li","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果你想找到要安装的软件，则需要知道从哪里开始搜索。下面的示例演示了如何使用docker search命令搜索。该命令可能需要几秒钟，但它内置了一个超时，所以最终都会返回。当运行该命令时，它只会搜索索引，并且什么都不会安装。"}]},{"ID":"20230724015451-i869u1u","Type":"NodeParagraph","Properties":{"id":"20230724015451-i869u1u","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"出于这个原因，正在使用公开脚本构建的镜像被认为是更值得信赖的。运行docker search的搜索结果，你可以看到镜像是从公开的脚本构建的，在AUTOMATED列寻找一个[OK]标记。"}]},{"ID":"20230724015451-b0q1n03","Type":"NodeParagraph","Properties":{"id":"20230724015451-b0q1n03","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Docker Hub不是软件的唯一来源，这取决于软件发行商的目标和角度，Docker Hub可能不是适当的发布点。封闭源代码或专有项目可能不想冒险通过第三方发布他们的软件。还有其他三种方式来安装软件："},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"■ 可以使用替代仓库的注册服务器或运行自己的注册服务器。"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"■ 可以手动从文件加载镜像。"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"■ 可以从其他来源下载项目，并利用提供的Dockerfile自建镜像。"}]},{"ID":"20230724015451-s1oizpm","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724015451-s1oizpm","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"2. 使用替代注册服务器"}]},{"ID":"20230724015451-atmwng3","Type":"NodeParagraph","Properties":{"id":"20230724015451-atmwng3","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用替代注册服务器很简单，不需要额外的配置。所有你需要的是注册服务器的地址。以下命令将会从替代注册服务器下载另一个“Hello World”的示例，如下所示："},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"docker pull quay.io/dockerinaction/ch3_hello_registry:latest"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"注册服务器地址，是仓库规范的一部分。完整格式如下："},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"#","TextMarkTextContent":"REGISTRYHOST/"},{"Type":"NodeText","Data":"NAME[:TAG]** "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Docker知道如何和注册服务器沟通，所以唯一的区别是，你指定了注册服务器。在某些情况下，注册服务器将需要认证的步骤。如果你遇到这个情况，请查阅文档或从注册服务器的配置组中找到更多信息。当你结束使用已安装的 hello-registry 镜像，用以下的命令将其删除："},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"docker rmi quay.io/dockerinaction/ch3_hello_registry"},{"Type":"NodeText","Data":" **注册服务器功能强大。它们使得用户可不用考虑镜像存储和运输的问题。但是运行你自己的注册服务器，就会比较复杂，也可能成为基础设施部署潜在的单点故障。如果为你的应用场景运行定制的注册服务器，听起来有点复杂，第三方分发工具也可能出问题，你也许可以考虑直接从文件加载镜像。"}]},{"ID":"20230724015451-59di11z","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724015451-59di11z","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"3. 镜像文件"}]},{"ID":"20230724015451-c1nd0y5","Type":"NodeParagraph","Properties":{"id":"20230724015451-c1nd0y5","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Docker提供了一个命令，可将镜像由文件加载到Docker。有了这个工具，你也可以加载通过其他渠道获得的镜像文件。"}]},{"ID":"20230724015451-7d9389b","Type":"NodeParagraph","Properties":{"id":"20230724015451-7d9389b","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"获得了这个文件，你可以通过docker load命令加载到Docker中去。"}]},{"ID":"20230724015451-tbav6dh","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724015451-tbav6dh","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"4. 从Docker file 安装"}]},{"ID":"20230724015451-b5t7pzm","Type":"NodeParagraph","Properties":{"id":"20230724015451-b5t7pzm","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Dockerfile是Docker用来描述新镜像构建步骤的脚本。这个文件会和作者想要放入镜像的软件一起发布。"}]},{"ID":"20230724015451-hww5uzi","Type":"NodeParagraph","Properties":{"id":"20230724015451-hww5uzi","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"分发 Dockerfile 类似于分发镜像文件。可选择适合自己的分发机制。一个常见的模式是通过如Git或Mercurial的版本控制系统来分发Dockerfile。如果你已经安装了Git，那么可以试试用这个来运行公开库："}]},{"ID":"20230724015451-19pezax","Type":"NodeParagraph","Properties":{"id":"20230724015451-19pezax","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"**git clone **"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/dockerinaction/ch3_dockerfile.git","TextMarkTextContent":"https://github.com/dockerinaction/ch3_dockerfile.git"}]},{"ID":"20230724015451-pa8wd9i","Type":"NodeParagraph","Properties":{"id":"20230724015451-pa8wd9i","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"docker build -t dia_ch3/dockerfile:latest ch3_dockerfile"}]},{"ID":"20230724015451-0wgeg1q","Type":"NodeParagraph","Properties":{"id":"20230724015451-0wgeg1q","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"在这个示例中，你将公共源代码库的项目复制到机器上，然后使用项目的 Dockerfile构建 Docker 镜像。docker build 命令的-t 选项的值设置成要安装镜像的仓库。从Dockerfiles 构建镜像是一种将项目融入现有工作流的轻量级方法。采取这种方法有两个不足：首先，根据项目的具体情况，构建过程可能需要一些时间；第二，依赖关系可能会从撰写 Dockerfile 到镜像构建这段时间发生变化。这些问题会影响发布，但不太会影响用户体验。尽管有这些缺点，仍然很流行。"}]},{"ID":"20230724015451-wbvidyz","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724015451-wbvidyz","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"3. 安装文件和隔离"}]},{"ID":"20230724015451-ler8udf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724015451-ler8udf","updated":"20230724015451"},"Children":[{"Type":"NodeText","Data":"1. 分层关系"}]},{"ID":"20230724015451-k92xp7z","Type":"NodeParagraph","Properties":{"id":"20230724015451-k92xp7z","updated":"20230724015451"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"镜像维护着父/子依赖关系。在这些依赖关系中，从父层构建形成新的一层。容器中的文件是镜像所创建容器的所有层合集。镜像可以与任何其他镜像有依赖关系，包括为不同的所有者提供不同仓库的镜像。"}]}]}