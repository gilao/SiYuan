{"ID":"20230727000810-k2vkajo","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f396","id":"20230727000810-k2vkajo","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230727000810-k2vkajo\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230727000811-qqhnp3c\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230727000919-t8n8ygb\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230727000813-wom0doi\u0026quot;,\u0026quot;focusStart\u0026quot;:51,\u0026quot;focusEnd\u0026quot;:51\u0026#125;","tags":"数据类型,切片,引用类型","title":"04. 切片 slice","updated":"20230727002305"},"Children":[{"ID":"20230727000811-qqhnp3c","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230727000811-qqhnp3c","updated":"20230727000811"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"4. 切片 slice"}]},{"ID":"20230727000812-bflotre","Type":"NodeParagraph","Properties":{"id":"20230727000812-bflotre","updated":"20230727000812"},"Children":[{"Type":"NodeText","Data":"切片（Slice）是一个拥有相同类型元素的可变长度的序列。它是基于数组类型做的一层封装。它非常灵活，支持自动扩容。"}]},{"ID":"20230727000813-wom0doi","Type":"NodeParagraph","Properties":{"id":"20230727000813-wom0doi","updated":"20230727000813"},"Children":[{"Type":"NodeText","Data":"切片是一个引用类型，它的内部结构包含"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"地址"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"长度"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"容量"},{"Type":"NodeText","Data":"。切片一般用于快速地操作一块数据集合。"}]},{"ID":"20230727000814-rqjtedy","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000814-rqjtedy","updated":"20230727000814"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"切片的定义"}]},{"ID":"20230727000815-t0f85qg","Type":"NodeParagraph","Properties":{"id":"20230727000815-t0f85qg","updated":"20230727000815"},"Children":[{"Type":"NodeText","Data":"声明切片类型的基本语法如下："}]},{"ID":"20230727000816-avzgypm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000816-avzgypm","updated":"20230727000816"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var name []T\n\nname := make([]T,size,cap)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000817-55v3uaf","Type":"NodeParagraph","Properties":{"id":"20230727000817-55v3uaf","updated":"20230727000817"},"Children":[{"Type":"NodeText","Data":"其中，"}]},{"ID":"20230727000818-x4dxsbd","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000818-x4dxsbd","updated":"20230727000818"},"Children":[{"ID":"20230727000819-sm7xcx9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000819-sm7xcx9","updated":"20230727000819"},"Children":[{"ID":"20230727000820-rii793j","Type":"NodeParagraph","Properties":{"id":"20230727000820-rii793j","updated":"20230727000820"},"Children":[{"Type":"NodeText","Data":"name:表示变量名"}]}]},{"ID":"20230727000821-ncbg9sv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000821-ncbg9sv","updated":"20230727000821"},"Children":[{"ID":"20230727000822-zfqy2m8","Type":"NodeParagraph","Properties":{"id":"20230727000822-zfqy2m8","updated":"20230727000822"},"Children":[{"Type":"NodeText","Data":"T:表示切片中的元素类型"}]}]},{"ID":"20230727000823-yj2xwtk","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000823-yj2xwtk","updated":"20230727000823"},"Children":[{"ID":"20230727000824-h5x8b4w","Type":"NodeParagraph","Properties":{"id":"20230727000824-h5x8b4w","updated":"20230727000824"},"Children":[{"Type":"NodeText","Data":"size:切片中元素的数量"}]}]},{"ID":"20230727000825-yndse5s","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000825-yndse5s","updated":"20230727000825"},"Children":[{"ID":"20230727000826-wm7zqgk","Type":"NodeParagraph","Properties":{"id":"20230727000826-wm7zqgk","updated":"20230727000826"},"Children":[{"Type":"NodeText","Data":"cap:切片的容量"}]}]}]},{"ID":"20230727000827-0jw6u4q","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000827-0jw6u4q","updated":"20230727000827"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"切片的长度和容量"}]},{"ID":"20230727000828-awlujac","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000828-awlujac","updated":"20230727000828"},"Children":[{"ID":"20230727000829-4prmuyt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000829-4prmuyt","updated":"20230727000829"},"Children":[{"ID":"20230727000830-n3h9uhg","Type":"NodeParagraph","Properties":{"id":"20230727000830-n3h9uhg","updated":"20230727000830"},"Children":[{"Type":"NodeText","Data":"长度"}]}]}]},{"ID":"20230727000831-yywl43h","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000831-yywl43h","updated":"20230727000831"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"len()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000832-qqvh13d","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000832-qqvh13d","updated":"20230727000832"},"Children":[{"ID":"20230727000833-f40u653","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000833-f40u653","updated":"20230727000833"},"Children":[{"ID":"20230727000834-eqg7aea","Type":"NodeParagraph","Properties":{"id":"20230727000834-eqg7aea","updated":"20230727000834"},"Children":[{"Type":"NodeText","Data":"容量"}]}]}]},{"ID":"20230727000835-t14zpgt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000835-t14zpgt","updated":"20230727000835"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"cap()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000836-f145aly","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000836-f145aly","updated":"20230727000836"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"切片的表达式"}]},{"ID":"20230727000837-39a45c0","Type":"NodeParagraph","Properties":{"id":"20230727000837-39a45c0","updated":"20230727000837"},"Children":[{"Type":"NodeText","Data":"切片的底层就是一个数组，所以我们可以基于数组通过切片表达式得到切片。 切片表达式中的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"low"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"high"},{"Type":"NodeText","Data":"表示一个索引范围（左包含，右不包含），也就是下面代码中从数组a中选出"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"1\u0026lt;=索引值\u0026lt;4"},{"Type":"NodeText","Data":"的元素组成切片s，得到的切片"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"长度=high-low"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"容量等于得到的切片的底层数组的容量。"}]},{"ID":"20230727000838-6hyg9pp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000838-6hyg9pp","updated":"20230727000838"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func main() {\n\ta := [5]int{1, 2, 3, 4, 5}\n\ts := a[1:3]  // s := a[low:high]\n\tfmt.Printf(\"s:%v len(s):%v cap(s):%v\\n\", s, len(s), cap(s))\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000839-yhgwlv4","Type":"NodeParagraph","Properties":{"id":"20230727000839-yhgwlv4","updated":"20230727000839"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20230727000840-x3eehrw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000840-x3eehrw","updated":"20230727000840"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"s:[2 3] len(s):2 cap(s):4\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000841-txh1cj0","Type":"NodeParagraph","Properties":{"id":"20230727000841-txh1cj0","updated":"20230727000841"},"Children":[{"Type":"NodeText","Data":"为了方便起见，可以省略切片表达式中的任何索引。省略了"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"low"},{"Type":"NodeText","Data":"则默认为0；省略了"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"high"},{"Type":"NodeText","Data":"则默认为切片操作数的长度:"}]},{"ID":"20230727000842-g4gelet","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000842-g4gelet","updated":"20230727000842"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"a[2:]  // 等同于 a[2:len(a)]\na[:3]  // 等同于 a[0:3]\na[:]   // 等同于 a[0:len(a)]\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000843-1jeypdr","Type":"NodeParagraph","Properties":{"id":"20230727000843-1jeypdr","updated":"20230727000843"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"注意："}]},{"ID":"20230727000844-38gxvrn","Type":"NodeParagraph","Properties":{"id":"20230727000844-38gxvrn","updated":"20230727000844"},"Children":[{"Type":"NodeText","Data":"对于数组或字符串，如果"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"0 \u0026lt;= low \u0026lt;= high \u0026lt;= len(a)"},{"Type":"NodeText","Data":"，则索引合法，否则就会索引越界（out of range）。"}]},{"ID":"20230727000845-fha9hg7","Type":"NodeParagraph","Properties":{"id":"20230727000845-fha9hg7","updated":"20230727000845"},"Children":[{"Type":"NodeText","Data":"对切片再执行切片表达式时（切片再切片），"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"high"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"的上限边界是切片的容量"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"cap(a)"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"，而不是长度"},{"Type":"NodeText","Data":"。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"常量索引"},{"Type":"NodeText","Data":"必须是非负的，并且可以用int类型的值表示;对于数组或常量字符串，常量索引也必须在有效范围内。如果"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"low"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"high"},{"Type":"NodeText","Data":"两个指标都是常数，它们必须满足"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"low \u0026lt;= high"},{"Type":"NodeText","Data":"。如果索引在运行时超出范围，就会发生运行时"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"panic"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230727000846-hxmwx0a","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000846-hxmwx0a","updated":"20230727000846"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"扩展表达式"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":" a[low : high : max]"}]},{"ID":"20230727000847-oh0r79z","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000847-oh0r79z","updated":"20230727000847"},"Children":[{"ID":"20230727000848-dl217qq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000848-dl217qq","updated":"20230727000848"},"Children":[{"ID":"20230727000849-9o31cex","Type":"NodeParagraph","Properties":{"id":"20230727000849-9o31cex","updated":"20230727000849"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"简单表达式生成的新切片与原数组或切片共享底层数组"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"避免了拷贝元素"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]}]},{"ID":"20230727000850-jcxfkbl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000850-jcxfkbl","updated":"20230727000850"},"Children":[{"ID":"20230727000851-2wcx3li","Type":"NodeParagraph","Properties":{"id":"20230727000851-2wcx3li","updated":"20230727000851"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"新切片b（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"b := a[low : high]"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"）不仅可以读写 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"a[low ] "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"至 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"a[high - 1]"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"之间的元素"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"而且在使用 append(b, x)函数增加新的元素x时，可能会覆盖a[high]及后面的元素。"}]}]}]},{"ID":"20230727000852-rzljlqz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000852-rzljlqz","updated":"20230727000852"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"a := [3]int{1,2,3}\nb := a[1:2]\nb = append(b,4) //此时元素a[2]将由3变为4\nfmt.Printf(\"a:%v b:%v\\\\n\",a,b) //a:[1 2 4] b:[2 4]\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000853-rj5wggd","Type":"NodeParagraph","Properties":{"id":"20230727000853-rj5wggd","updated":"20230727000853"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"扩展表达式max用于限制新生成切片的容量为max-low"},{"Type":"NodeText","Data":"，满足"}]},{"ID":"20230727000854-6vof2ea","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000854-6vof2ea","updated":"20230727000854"},"Children":[{"ID":"20230727000855-nj8kltx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000855-nj8kltx","updated":"20230727000855"},"Children":[{"ID":"20230727000856-v5pa2u7","Type":"NodeParagraph","Properties":{"id":"20230727000856-v5pa2u7","updated":"20230727000856"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"当使用append()函数向扩展表达式或简单表达式生成的切片追加新元素时，"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"如果存储容量不足则会产生一个全新的切片，而不会覆盖原始的数组或切片"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]}]}]},{"ID":"20230727000857-ywp64uk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"R28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000857-ywp64uk","updated":"20230727000857"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"R28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"a1 := [3]int{1,2,3}\nb1 := a1[1:2:2]//扩展表达式\nb1 = append(b1,4) //此时存储容量不足，元素b1变为一个全新的切片，不再和a1共享底层数组\nfmt.Printf(\"a1:%v b1:%v\\\\n\",a1,b1) //a1:[1 2 3] b1:[2 4]\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000858-1rulccl","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000858-1rulccl","updated":"20230727000858"},"Children":[{"ID":"20230727000859-zjduxv4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000859-zjduxv4","updated":"20230727000859"},"Children":[{"ID":"20230727000860-drcd9l7","Type":"NodeParagraph","Properties":{"id":"20230727000860-drcd9l7","updated":"20230727000860"},"Children":[{"Type":"NodeText","Data":"扩展表达式a[low : high : max]中，只有low是可以省略的，其默认值为0"}]}]}]},{"ID":"20230727000861-fhvhq6f","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000861-fhvhq6f","updated":"20230727000861"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"切片的数据结构"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000862-81vrnvl","Type":"NodeParagraph","Properties":{"id":"20230727000862-81vrnvl","updated":"20230727000862"},"Children":[{"Type":"NodeText","Data":"切片的本质就是对底层数组的封装，它包含了三个信息：底层数组的指针、切片的长度（len）和切片的容量（cap）。array指针指向底层数组，len表示切片长度，cap表示底层数组的容量。"}]},{"ID":"20230727000863-gdh5lqo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000863-gdh5lqo","updated":"20230727000863"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type slice struct {\n    array \tunsafe.Pointer // 切片底层数组的起始位置\n    len\t\tint\t\t//切片的长度\n    cap \tint\t\t//切片的容量\t\t\t\t\t\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000864-spkyab0","Type":"NodeParagraph","Properties":{"id":"20230727000864-spkyab0","updated":"20230727000864"},"Children":[{"Type":"NodeText","Data":"举个例子，现在有一个数组"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"a := [8]int{0, 1, 2, 3, 4, 5, 6, 7}"},{"Type":"NodeText","Data":"，切片"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s1 := a[:5]"},{"Type":"NodeText","Data":"，相应示意图如下。"},{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"slice_01","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"E:\\Typora picture\\slice_01.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230727000865-y6jjrat","Type":"NodeParagraph","Properties":{"id":"20230727000865-y6jjrat","updated":"20230727000865"},"Children":[{"Type":"NodeText","Data":"切片"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s2 := a[3:6]"},{"Type":"NodeText","Data":"，相应示意图如下："},{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"slice_02","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"E:\\Typora picture\\slice_02.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230727000866-pq2te0u","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000866-pq2te0u","updated":"20230727000866"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"判断切片是否为空"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000867-dry5e7s","Type":"NodeParagraph","Properties":{"id":"20230727000867-dry5e7s","updated":"20230727000867"},"Children":[{"Type":"NodeText","Data":"要检查切片是否为空，请始终使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"len(s) == 0"},{"Type":"NodeText","Data":"来判断，而不应该使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s == nil"},{"Type":"NodeText","Data":"来判断。"}]},{"ID":"20230727000868-8u0k1ve","Type":"NodeParagraph","Properties":{"id":"20230727000868-8u0k1ve","updated":"20230727000868"},"Children":[{"Type":"NodeText","Data":"因为指针值为 nil 不一定表示切片为空。例如，在一个函数中传递一个未初始化的切片，并在其中使用 append 添加元素，此时切片的底层数组可能会被重新分配，而当前的 s 变量仍然为空指针，导致判断结果不准确。因此，始终应该使用 len(s) == 0 来判断一个切片是否为空。"}]},{"ID":"20230727000869-1ghdelk","Type":"NodeParagraph","Properties":{"id":"20230727000869-1ghdelk","updated":"20230727000869"},"Children":[{"Type":"NodeText","Data":"对于函数的参数和返回值，"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"应该将切片作为指针类型传递，避免拷贝大量的数据，提高程序的性能和效率。"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"对于指向切片的指针变量，要注意判断其是否为 nil，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"因为当一个指针变量为 nil 时，无法访问其指向的切片或者数组，会导致运行时错误。"}]},{"ID":"20230727000870-ch6ijj9","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000870-ch6ijj9","updated":"20230727000870"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"切片不能直接比较"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000871-65ai3my","Type":"NodeParagraph","Properties":{"id":"20230727000871-65ai3my","updated":"20230727000871"},"Children":[{"Type":"NodeText","Data":"切片之间是不能比较的，我们不能使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"=="},{"Type":"NodeText","Data":"操作符来判断两个切片是否含有全部相等元素。 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"切片唯一合法的比较操作是和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"nil"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"比较。"},{"Type":"NodeText","Data":" 一个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"值的切片并没有底层数组，一个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"值的切片的长度和容量都是0。但是我们==不能说一个长度和容量都是0的切片一定是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"==，例如下面的示例："}]},{"ID":"20230727000872-35u1txg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000872-35u1txg","updated":"20230727000872"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var s1 []int         //len(s1)=0;cap(s1)=0;s1==nil\ns2 := []int{}        //len(s2)=0;cap(s2)=0;s2!=nil\ns3 := make([]int, 0) //len(s3)=0;cap(s3)=0;s3!=nil\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000873-hflbk19","Type":"NodeParagraph","Properties":{"id":"20230727000873-hflbk19","updated":"20230727000873"},"Children":[{"Type":"NodeText","Data":"所以要判断一个切片是否是空的，要是用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"len(s) == 0"},{"Type":"NodeText","Data":"来判断，不应该使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s == nil"},{"Type":"NodeText","Data":"来判断。"}]},{"ID":"20230727000874-lfthwy2","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000874-lfthwy2","updated":"20230727000874"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"切片的赋值拷贝"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000875-uibxigp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000875-uibxigp","updated":"20230727000875"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func main() {\n\ts1 := make([]int, 3) //[0 0 0]\n\ts2 := s1             //将s1直接赋值给s2，s1和s2共用一个底层数组\n\ts2[0] = 100\n\tfmt.Println(s1) //[100 0 0]\n\tfmt.Println(s2) //[100 0 0]\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000876-82v6yuq","Type":"NodeParagraph","Properties":{"id":"20230727000876-82v6yuq","updated":"20230727000876"},"Children":[{"Type":"NodeText","Data":"上面的代码将s1 直接赋值给另一个切片变量 s2，"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"这里的赋值操作不是传递数据的拷贝操作"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，而"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"只是将 s1 和 s2 的指针地址共享，即它们都指向同一个底层数组"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"。因此，"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"当修改 s2 的元素值时，s1 中对应位置的值也会被改变。"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000877-twz8u83","Type":"NodeParagraph","Properties":{"id":"20230727000877-twz8u83","updated":"20230727000877"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"当我们想要得到一个切片的副本，而不是共享底层数组的时候，需要使用 copy 函数进行深拷贝。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"例如："}]},{"ID":"20230727000878-r4p2k28","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000878-r4p2k28","updated":"20230727000878"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"s1 := []int{1, 2, 3}\ns2 := make([]int, len(s1))\ncopy(s2, s1)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000879-xx271fm","Type":"NodeParagraph","Properties":{"id":"20230727000879-xx271fm","updated":"20230727000879"},"Children":[{"Type":"NodeText","Data":"这里使用 make 函数创建了一个与 s1 长度相同的切片 s2，然后通过 copy 函数将 s1 的值拷贝到 s2 中，这样 s1 和 s2 就完全独立了，修改 s2 不会影响 s1。"}]},{"ID":"20230727000880-s0vzev0","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000880-s0vzev0","updated":"20230727000880"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"切片的遍历"}]},{"ID":"20230727000881-h2t9aq9","Type":"NodeParagraph","Properties":{"id":"20230727000881-h2t9aq9","updated":"20230727000881"},"Children":[{"Type":"NodeText","Data":"切片的遍历方式和数组是一致的，支持"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"索引遍历"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"和=="},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"for range"},{"Type":"NodeText","Data":"遍历。=="}]},{"ID":"20230727000882-y3zjdhx","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000882-y3zjdhx","updated":"20230727000882"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"切片添加删除元素"}]},{"ID":"20230727000883-zhflf45","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000883-zhflf45","updated":"20230727000883"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"append() 添加元素"}]},{"ID":"20230727000884-wzeme9w","Type":"NodeParagraph","Properties":{"id":"20230727000884-wzeme9w","updated":"20230727000884"},"Children":[{"Type":"NodeText","Data":"Go语言的内建函数"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"append()"},{"Type":"NodeText","Data":"可以为切片动态添加元素。 可以一次添加一个元素，可以添加多个元素，也可以添加另一个切片中的元素（后面加…）。"}]},{"ID":"20230727000885-hf2yceq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000885-hf2yceq","updated":"20230727000885"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func main(){\n\tvar s []int\n\ts = append(s, 1)        // [1]\n\ts = append(s, 2, 3, 4)  // [1 2 3 4]\n\ts2 := []int{5, 6, 7}  \n\ts = append(s, s2...)    // [1 2 3 4 5 6 7]\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000886-uvw4yye","Type":"NodeParagraph","Properties":{"id":"20230727000886-uvw4yye","updated":"20230727000886"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"注意："},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"通过var声明的零值切片可以在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"append()"},{"Type":"NodeText","Data":"函数直接使用，无需初始化。"}]},{"ID":"20230727000887-9dddeme","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000887-9dddeme","updated":"20230727000887"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var s []int\ns = append(s,1,2,3)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000888-xzwz8xa","Type":"NodeParagraph","Properties":{"id":"20230727000888-xzwz8xa","updated":"20230727000888"},"Children":[{"Type":"NodeText","Data":"没有必要像下面的代码一样初始化一个切片再传入"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"append()"},{"Type":"NodeText","Data":"函数使用，"}]},{"ID":"20230727000889-454w9o8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000889-454w9o8","updated":"20230727000889"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"s := []int{}  // 没有必要初始化\ns = append(s, 1, 2, 3)\n\nvar s = make([]int)  // 没有必要初始化\ns = append(s, 1, 2, 3)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000890-lncchw4","Type":"NodeParagraph","Properties":{"id":"20230727000890-lncchw4","updated":"20230727000890"},"Children":[{"Type":"NodeText","Data":"每个切片会指向一个底层数组，这个数组的容量够用就添加新增元素。当底层数组不能容纳新增的元素时，切片就会自动按照一定的策略进行“扩容”，此时该切片指向的底层数组就会更换。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"“扩容”操作往往发生在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"append()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"函数调用时，所以我们通常都需要用原变量接收append函数的返回值。"}]},{"ID":"20230727000891-m0fav6y","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000891-m0fav6y","updated":"20230727000891"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"删除元素"}]},{"ID":"20230727000892-rd3jgoz","Type":"NodeParagraph","Properties":{"id":"20230727000892-rd3jgoz","updated":"20230727000892"},"Children":[{"Type":"NodeText","Data":"要删除切片中的元素，可以使用 append 函数和切片语法进行实现。具体方法如下："}]},{"ID":"20230727000893-5ofuqtn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000893-5ofuqtn","updated":"20230727000893"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// 删除切片 s 的第 i 个元素\ns = append(s[:i], s[i+1:]...)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000894-17xn3ii","Type":"NodeParagraph","Properties":{"id":"20230727000894-17xn3ii","updated":"20230727000894"},"Children":[{"Type":"NodeText","Data":"在使用切片语法删除元素时，如果要删除的元素位于第一个或最后一个位置，可以通过特殊情况的处理来避免越界错误。"}]},{"ID":"20230727000895-i684zxx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000895-i684zxx","updated":"20230727000895"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// 删除第一个元素\ns = s[1:]\n\n// 删除最后一个元素\ns = s[:len(s)-1]\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000896-p1sc65c","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000896-p1sc65c","updated":"20230727000896"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"切片的扩容策略"}]},{"ID":"20230727000897-n2vbq81","Type":"NodeParagraph","Properties":{"id":"20230727000897-n2vbq81","updated":"20230727000897"},"Children":[{"Type":"NodeText","Data":"slice的默认容量为0，并且可以根据实际的数据长度推断容量。"}]},{"ID":"20230727000898-nctn0da","Type":"NodeParagraph","Properties":{"id":"20230727000898-nctn0da","updated":"20230727000898"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"扩容的时候默认扩容2倍长度（前提\u0026lt;256）"},{"Type":"NodeText","Data":"，如果超过当前容量的2倍，那么扩容容量就是实际长度的偶数值（如果***"},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"*","Properties":{"id":""}}]},{"Type":"NodeText","Data":"长度是奇数，那么就加1"},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"*","Properties":{"id":""}}]},{"Type":"NodeText","Data":"***），"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"如果容量超过256，实际执行1.25x扩容，直到容量足够存储。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"数组本质是不可扩容的，=="},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数组的扩容实际上就是创建新的数组，分配新的内存，然后执行数组的拷贝"},{"Type":"NodeText","Data":"==，所以slice实际上就需要数组新的内存地址的返回，指针指向新的内存地址。"}]},{"ID":"20230727000899-o5cvtnl","Type":"NodeParagraph","Properties":{"id":"20230727000899-o5cvtnl","updated":"20230727000899"},"Children":[{"Type":"NodeText","Data":"扩容时："}]},{"ID":"20230727000900-r8yvy3v","Type":"NodeParagraph","Properties":{"id":"20230727000900-r8yvy3v","updated":"20230727000900"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"当前需要容量如果小于当前的容量，无需扩容；否则2倍扩容"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000901-hkfvbfc","Type":"NodeParagraph","Properties":{"id":"20230727000901-hkfvbfc","updated":"20230727000901"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"当前需要容量大于当前容量2倍，直接扩容至当前容量"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000902-2bt1rr9","Type":"NodeParagraph","Properties":{"id":"20230727000902-2bt1rr9","updated":"20230727000902"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"如果需要的容量小于256，直接就是2倍扩容"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000903-ycod26w","Type":"NodeParagraph","Properties":{"id":"20230727000903-ycod26w","updated":"20230727000903"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"如果需要的容量大于256，则1.25x扩容直到容量足够"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000904-z04zde3","Type":"NodeParagraph","Properties":{"id":"20230727000904-z04zde3","updated":"20230727000904"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"实际扩容的容量会根据内存分配页优化，奇数容量会分配偶数容量"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000905-9e1ahim","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000905-9e1ahim","updated":"20230727000905"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"数组和切片的区别"}]},{"ID":"20230727000906-rv08u5h","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000906-rv08u5h","updated":"20230727000906"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"相同点："}]},{"ID":"20230727000907-xszerox","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000907-xszerox","updated":"20230727000907"},"Children":[{"ID":"20230727000908-2nxc0q5","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000908-2nxc0q5","updated":"20230727000908"},"Children":[{"ID":"20230727000909-85yaynz","Type":"NodeParagraph","Properties":{"id":"20230727000909-85yaynz","updated":"20230727000909"},"Children":[{"Type":"NodeText","Data":"只能存储一组相同类型的数据结构"}]}]},{"ID":"20230727000910-z9x2t9u","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20230727000910-z9x2t9u","updated":"20230727000910"},"Children":[{"ID":"20230727000911-rjvvv2u","Type":"NodeParagraph","Properties":{"id":"20230727000911-rjvvv2u","updated":"20230727000911"},"Children":[{"Type":"NodeText","Data":"都是通过下标来访问，并且有容量长度，长度通过len获取，容量通过cap获取"}]}]}]},{"ID":"20230727000912-kxqm34m","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000912-kxqm34m","updated":"20230727000912"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"不同点"}]},{"ID":"20230727000913-z5ao64r","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000913-z5ao64r","updated":"20230727000913"},"Children":[{"ID":"20230727000914-hfv7fgc","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000914-hfv7fgc","updated":"20230727000914"},"Children":[{"ID":"20230727000915-02kmh4m","Type":"NodeParagraph","Properties":{"id":"20230727000915-02kmh4m","updated":"20230727000915"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"数组的定长，"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"访问和复制不能超过数组定义的长度，否则就会下标越界，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"切片长度和容量可以自动扩容"},{"Type":"NodeText","Data":"；"}]}]},{"ID":"20230727000916-q8zwe1c","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20230727000916-q8zwe1c","updated":"20230727000916"},"Children":[{"ID":"20230727000917-yj9qr6w","Type":"NodeParagraph","Properties":{"id":"20230727000917-yj9qr6w","updated":"20230727000917"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"数值是值类型，切片是引用类型；"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"每个切片都引用了一个底层数组，切片本身不能存储任何数据，都是这底层数组存储 数据，所以修改切片的时候修改的是底层数组中的数据。切片一旦扩容，指向一个新的底层数组，内存地址也就随之改变。"}]}]}]},{"ID":"20230727000918-zocg9c3","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000918-zocg9c3","updated":"20230727000918"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"数组和slice作为参数的区别，slice作为参数传递有什么问题"}]},{"ID":"20230727000919-t8n8ygb","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000919-t8n8ygb","updated":"20230727000919"},"Children":[{"ID":"20230727000920-835k4bp","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000920-835k4bp","updated":"20230727000920"},"Children":[{"ID":"20230727000921-khgou15","Type":"NodeParagraph","Properties":{"id":"20230727000921-khgou15","updated":"20230727000921"},"Children":[{"Type":"NodeText","Data":"数组是一个固定大小的连续存储空间，其长度不可更改，在函数调用时"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"作为参数传递时，会复制整个数组"},{"Type":"NodeText","Data":"，这就意味着"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"在函数内部对数组进行修改，并不会影响到原本的数据。"}]}]},{"ID":"20230727000922-97asypd","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20230727000922-97asypd","updated":"20230727000922"},"Children":[{"ID":"20230727000923-rbuejib","Type":"NodeParagraph","Properties":{"id":"20230727000923-rbuejib","updated":"20230727000923"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Slice是一个引用类型"},{"Type":"NodeText","Data":"，在函数调用时作为参数传递时，"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"只会复制 Slice 结构体，而不会复制底层数组"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，也就是说"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"函数内部对 Slice 的修改会影响到原本的 Slice"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"。但需要注意的是，"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"如果在函数内部创建了新的 Slice 来覆盖原有的 Slice，这时候原有的 Slice 并不会受到影响。"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]}]},{"ID":"20230727000924-x9x0iry","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20230727000924-x9x0iry","updated":"20230727000924"},"Children":[{"ID":"20230727000925-yhvkd2m","Type":"NodeParagraph","Properties":{"id":"20230727000925-yhvkd2m","updated":"20230727000925"},"Children":[{"Type":"NodeText","Data":"Slice作为参数传递的问题在于，如果在函数内部对其进行了 append 操作，"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"可能会导致底层数组重新分配内存，从而改变 Slice 的地址，进而可能导致外部的 Slice 指向错误的内存地址或发生越界等问题。"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"因此，如果在函数内部需要修改 Slice 长度，建议使用 copy 函数复制一个新的 Slice，并在新 Slice 上进行操作。"}]}]},{"ID":"20230727000926-v04z89n","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20230727000926-v04z89n","updated":"20230727000926"},"Children":[{"ID":"20230727000927-ik3wahx","Type":"NodeParagraph","Properties":{"id":"20230727000927-ik3wahx","updated":"20230727000927"},"Children":[{"Type":"NodeText","Data":"数组还是切片，在函数传递的时候=="},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"如果没有指定为指针传递的话，都是值传递"},{"Type":"NodeText","Data":"==，但是切片在传递的过程中，有着共享底层数组的风险，所以如果在函数内部进行了更改的时候，会修改到源数据，所以我们需要根据不同的需求来处理，如果我们不希望源数据被修改话的我们可以使用copy函数复制切片后再传入，如果希望源数据被修改的话我们应该使用指针传递的方式"}]}]}]}]}