{"ID":"20230727014431-hz8mtja","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f3bb","id":"20230727014431-hz8mtja","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230727014431-hz8mtja\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230727014431-pio6ufo\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230727014435-txq5xg4\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230727014431-pio6ufo\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;","tags":"高并发架构,服务治理,限流,Go 代码,未完成","title":"Go 限流的常见方法","updated":"20230727014510"},"Children":[{"ID":"20230727014431-pio6ufo","Type":"NodeParagraph","Properties":{"id":"20230727014431-pio6ufo","updated":"20230727014435"}},{"ID":"20230727014435-yzf8pku","Type":"NodeParagraph","Properties":{"id":"20230727014435-yzf8pku","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"最近做的项目需要对系统设计并发控制和流控，刚好趁这个时间，把Go的并发控制和限流策略整体梳理一下，因为篇幅原因，本章只整理限流方面的内容，后面再整理Go的并发控制内容。"}]},{"ID":"20230727014435-l8owysd","Type":"NodeParagraph","Properties":{"id":"20230727014435-l8owysd","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"1. 并发控制限流"}]},{"ID":"20230727014435-gtle671","Type":"NodeParagraph","Properties":{"id":"20230727014435-gtle671","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"利用channel的缓冲设定，我们就可以来实现并发的限制。我们只要在执行并发的同时，往一个带有缓冲的 channel 里写入点东西（随便写啥，内容不重要）。让并发的 goroutine在执行完成后把这个 channel 里的东西给读走。这样整个并发的数量就将控制在这个 channel的缓冲区大小上。"}]},{"ID":"20230727014435-tdr3qpc","Type":"NodeParagraph","Properties":{"id":"20230727014435-tdr3qpc","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"比如我们可以用一个 bool 类型的带缓冲 channel 作为并发限制的计数器。"}]},{"ID":"20230727014435-94zepmx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230727014435-94zepmx","updated":"20230727014435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"chLimit := make(chan bool, 1)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230727014435-aega3wk","Type":"NodeParagraph","Properties":{"id":"20230727014435-aega3wk","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"然后在并发执行的地方，每创建一个新的 goroutine，都往 chLimit 里塞个东西。"}]},{"ID":"20230727014435-vd1ujf2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230727014435-vd1ujf2","updated":"20230727014435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"for i,sleeptime := range input {\n    chs[i] = make(chan string,1)\n    chLimit \u003c- true\n    go limitFunc(chLimit, chs[i], i, sleeptime, timeout)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230727014435-35s5ksy","Type":"NodeParagraph","Properties":{"id":"20230727014435-35s5ksy","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"这里通过 go 关键字并发执行的是新构造的函数。他在执行完后，会把 chLimit的缓冲区里给消费掉一个。"}]},{"ID":"20230727014435-16bm1x8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230727014435-16bm1x8","updated":"20230727014435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"limitFunc := func(chLimit chan bool, ch chan string, task_id, sleeptime,timeout int) {\n    Run(task_id, sleeptime, timeout, ch)\n    \u003c-chLimit\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230727014435-6o2tbu9","Type":"NodeParagraph","Properties":{"id":"20230727014435-6o2tbu9","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"这样一来，当创建的 goroutine 数量到达 chLimit 的缓冲区上限后。主 goroutine 就挂起阻塞了，直到这些 goroutine 执行完毕，消费掉了 chLimit 缓冲区中的数据，程序才会继续创建新的 goroutine 。我们并发数量限制的目的也就达到了。"}]},{"ID":"20230727014435-94o1bqf","Type":"NodeParagraph","Properties":{"id":"20230727014435-94o1bqf","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"完整代码："}]},{"ID":"20230727014435-3awjt7n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230727014435-3awjt7n","updated":"20230727014435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"package main \npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc Run(taskId, sleeptime, timeout int, ch chan string) {\n    chRun := make(chan string)\n    go run(taskId, sleeptime, chRun)\n    select {\n    case re := \u003c-chRun:\n        ch \u003c- re\n    case \u003c-time.After(time.Duration(timeout) * time.Second):\n        re := fmt.Sprintf(\"task id %d , timeout\", taskId)\n        ch \u003c- re\n    }\n}\n\nfunc run(taskId, sleeptime int, ch chan string) {\n    time.Sleep(time.Duration(sleeptime) * time.Second)\n    ch \u003c- fmt.Sprintf(\"task id %d , sleep %d second\", taskId, sleeptime)\n    return\n}\n\nfunc main() {\n    input := []int{3, 2, 1}\n    timeout := 2\n    chLimit := make(chan bool, 1)\n    chs := make([]chan string, len(input))\n    limitFunc := func(chLimit chan bool, ch chan string, task_id, sleeptime, timeout int) {\n        Run(task_id, sleeptime, timeout, ch)\n        \u003c-chLimit\n    }\n    startTime := time.Now()\n    fmt.Println(\"Multirun start\")\n    for i, sleeptime := range input {\n        chs[i] = make(chan string, 1)\n        chLimit \u003c- true\n        go limitFunc(chLimit, chs[i], i, sleeptime, timeout)\n    }\n    for _, ch := range chs {\n        fmt.Println(\u003c-ch)\n    }\n    endTime := time.Now()\n    fmt.Printf(\"Multissh finished. Process time %s. Number of task is %d\\n\", endTime.Sub(startTime), len(input))\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230727014435-5aew00z","Type":"NodeParagraph","Properties":{"id":"20230727014435-5aew00z","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"运行结果："}]},{"ID":"20230727014435-kbne3pb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230727014435-kbne3pb","updated":"20230727014435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"Multirun starttask id 0 , timeouttask id 1 , timeouttask id 2 , sleep 1 secondMultissh finished. Process time 5s. Number of task is 3\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230727014435-s1inh0g","Type":"NodeParagraph","Properties":{"id":"20230727014435-s1inh0g","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"2. 计数器"}]},{"ID":"20230727014435-vof1xc9","Type":"NodeParagraph","Properties":{"id":"20230727014435-vof1xc9","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"计数器是一种最简单限流算法，其原理就是：在一段时间间隔内，对请求进行计数，与阀值进行比较判断是否需要限流，一旦到了时间临界点，将计数器清零。这个就像你去坐车一样，车厢规定了多少个位置，满了就不让上车了，不然就是超载了，被交警叔叔抓到了就要罚款的，如果我们的系统那就不是罚款的事情了，可能直接崩掉了。"}]},{"ID":"20230727014435-useonq6","Type":"NodeParagraph","Properties":{"id":"20230727014435-useonq6","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"程序执行逻辑："}]},{"ID":"20230727014435-cfqi04l","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-cfqi04l","updated":"20230727014435"},"Children":[{"ID":"20230727014435-ygu4qum","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ygu4qum","updated":"20230727014435"},"Children":[{"ID":"20230727014435-47xbply","Type":"NodeParagraph","Properties":{"id":"20230727014435-47xbply","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"可以在程序中设置一个变量 count，当过来一个请求我就将这个数+1，同时记录请求时间。"}]}]},{"ID":"20230727014435-8umwibi","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-8umwibi","updated":"20230727014435"},"Children":[{"ID":"20230727014435-bx2ulmh","Type":"NodeParagraph","Properties":{"id":"20230727014435-bx2ulmh","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"当下一个请求来的时候判断 count 的计数值是否超过设定的频次，以及当前请求的时间和第一次请求时间是否在 1 分钟内。"}]}]},{"ID":"20230727014435-7sxit38","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-7sxit38","updated":"20230727014435"},"Children":[{"ID":"20230727014435-39s0xf9","Type":"NodeParagraph","Properties":{"id":"20230727014435-39s0xf9","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果在 1 分钟内并且超过设定的频次则证明请求过多，后面的请求就拒绝掉。"}]}]},{"ID":"20230727014435-cms1wab","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-cms1wab","updated":"20230727014435"},"Children":[{"ID":"20230727014435-ag8aa94","Type":"NodeParagraph","Properties":{"id":"20230727014435-ag8aa94","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果该请求与第一个请求的间隔时间大于计数周期，且 count 值还在限流范围内，就重置 count。"}]}]}]},{"ID":"20230727014435-p3guufn","Type":"NodeParagraph","Properties":{"id":"20230727014435-p3guufn","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"代码实现："}]},{"ID":"20230727014435-ny5qui4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230727014435-ny5qui4","updated":"20230727014435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"package mainimport (    \"log\"    \"sync\"    \"time\")type Counter struct {    rate  int           //计数周期内最多允许的请求数    begin time.Time     //计数开始时间    cycle time.Duration //计数周期    count int           //计数周期内累计收到的请求数    lock  sync.Mutex}func (l *Counter) Allow() bool {    l.lock.Lock()    defer l.lock.Unlock()    if l.count == l.rate-1 {        now := time.Now()        if now.Sub(l.begin) \u003e= l.cycle {            //速度允许范围内， 重置计数器            l.Reset(now)            return true        } else {            return false        }    } else {        //没有达到速率限制，计数加1        l.count++        return true    }}func (l *Counter) Set(r int, cycle time.Duration) {    l.rate = r    l.begin = time.Now()    l.cycle = cycle    l.count = 0}func (l *Counter) Reset(t time.Time) {    l.begin = t    l.count = 0}func main() {    var wg sync.WaitGroup    var lr Counter    lr.Set(3, time.Second) // 1s内最多请求3次    for i := 0; i \u003c 10; i++ {        wg.Add(1)        log.Println(\"创建请求:\", i)        go func(i int) {          if lr.Allow() {              log.Println(\"响应请求:\", i)          }          wg.Done()        }(i)        time.Sleep(200 * time.Millisecond)    }    wg.Wait()}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230727014435-dce52rb","Type":"NodeParagraph","Properties":{"id":"20230727014435-dce52rb","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输出："}]},{"ID":"20230727014435-v3dhrsc","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-v3dhrsc","updated":"20230727014435"},"Children":[{"ID":"20230727014435-w0iugnd","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-w0iugnd","updated":"20230727014435"},"Children":[{"ID":"20230727014435-rk3enbb","Type":"NodeParagraph","Properties":{"id":"20230727014435-rk3enbb","updated":"20230727014435"}}]},{"ID":"20230727014435-vfqzzh3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-vfqzzh3","updated":"20230727014435"},"Children":[{"ID":"20230727014435-r3lxdig","Type":"NodeParagraph","Properties":{"id":"20230727014435-r3lxdig","updated":"20230727014435"}}]},{"ID":"20230727014435-0sq98x2","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-0sq98x2","updated":"20230727014435"},"Children":[{"ID":"20230727014435-jzexduo","Type":"NodeParagraph","Properties":{"id":"20230727014435-jzexduo","updated":"20230727014435"}}]},{"ID":"20230727014435-ft13f5c","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ft13f5c","updated":"20230727014435"},"Children":[{"ID":"20230727014435-evos4rf","Type":"NodeParagraph","Properties":{"id":"20230727014435-evos4rf","updated":"20230727014435"}}]},{"ID":"20230727014435-mgzs2ku","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-mgzs2ku","updated":"20230727014435"},"Children":[{"ID":"20230727014435-72prbmn","Type":"NodeParagraph","Properties":{"id":"20230727014435-72prbmn","updated":"20230727014435"}}]},{"ID":"20230727014435-2hbyokf","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-2hbyokf","updated":"20230727014435"},"Children":[{"ID":"20230727014435-jtvnz3n","Type":"NodeParagraph","Properties":{"id":"20230727014435-jtvnz3n","updated":"20230727014435"}}]},{"ID":"20230727014435-ksc2egk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ksc2egk","updated":"20230727014435"},"Children":[{"ID":"20230727014435-artq5sx","Type":"NodeParagraph","Properties":{"id":"20230727014435-artq5sx","updated":"20230727014435"}}]},{"ID":"20230727014435-udumhie","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-udumhie","updated":"20230727014435"},"Children":[{"ID":"20230727014435-zcl8ecb","Type":"NodeParagraph","Properties":{"id":"20230727014435-zcl8ecb","updated":"20230727014435"}}]},{"ID":"20230727014435-jpbt3pe","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-jpbt3pe","updated":"20230727014435"},"Children":[{"ID":"20230727014435-4dyoioi","Type":"NodeParagraph","Properties":{"id":"20230727014435-4dyoioi","updated":"20230727014435"}}]},{"ID":"20230727014435-nzdkv79","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-nzdkv79","updated":"20230727014435"},"Children":[{"ID":"20230727014435-az315tk","Type":"NodeParagraph","Properties":{"id":"20230727014435-az315tk","updated":"20230727014435"}}]},{"ID":"20230727014435-y7poyn8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-y7poyn8","updated":"20230727014435"},"Children":[{"ID":"20230727014435-7f65obu","Type":"NodeParagraph","Properties":{"id":"20230727014435-7f65obu","updated":"20230727014435"}}]},{"ID":"20230727014435-xe73r7y","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-xe73r7y","updated":"20230727014435"},"Children":[{"ID":"20230727014435-z4x60xx","Type":"NodeParagraph","Properties":{"id":"20230727014435-z4x60xx","updated":"20230727014435"}}]},{"ID":"20230727014435-8wtod62","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-8wtod62","updated":"20230727014435"},"Children":[{"ID":"20230727014435-hn7p8qd","Type":"NodeParagraph","Properties":{"id":"20230727014435-hn7p8qd","updated":"20230727014435"}}]},{"ID":"20230727014435-0sgutui","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-0sgutui","updated":"20230727014435"},"Children":[{"ID":"20230727014435-jzvml28","Type":"NodeParagraph","Properties":{"id":"20230727014435-jzvml28","updated":"20230727014435"}}]},{"ID":"20230727014435-rtqdqr5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-rtqdqr5","updated":"20230727014435"},"Children":[{"ID":"20230727014435-4lj2w06","Type":"NodeParagraph","Properties":{"id":"20230727014435-4lj2w06","updated":"20230727014435"}}]}]},{"ID":"20230727014435-krmmi76","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230727014435-krmmi76","updated":"20230727014435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"2021/02/01 21:16:12 创建请求: 02021/02/01 21:16:12 响应请求: 02021/02/01 21:16:12 创建请求: 12021/02/01 21:16:12 响应请求: 12021/02/01 21:16:12 创建请求: 22021/02/01 21:16:13 创建请求: 32021/02/01 21:16:13 创建请求: 42021/02/01 21:16:13 创建请求: 52021/02/01 21:16:13 响应请求: 52021/02/01 21:16:13 创建请求: 62021/02/01 21:16:13 响应请求: 62021/02/01 21:16:13 创建请求: 72021/02/01 21:16:13 响应请求: 72021/02/01 21:16:14 创建请求: 82021/02/01 21:16:14 创建请求: 9\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230727014435-s6u5j0y","Type":"NodeParagraph","Properties":{"id":"20230727014435-s6u5j0y","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"可以看到我们设置的是每200ms创建一个请求，明显高于1秒最多3个请求的限制，运行起来之后发现编号为 2、3、4、8、9 的请求被丢弃，说明限流成功。"}]},{"ID":"20230727014435-0sy97hs","Type":"NodeParagraph","Properties":{"id":"20230727014435-0sy97hs","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"那么问题来了，如果有个需求对于某个接口 /query 每分钟最多允许访问 200 次，假设有个用户在第 59 秒的最后几毫秒瞬间发送 200 个请求，当 59 秒结束后 Counter 清零了，他在下一秒的时候又发送 200 个请求。那么在 1 秒钟内这个用户发送了 2 倍的请求，这个是符合我们的设计逻辑的，这也是计数器方法的设计缺陷，系统可能会承受恶意用户的大量请求，甚至击穿系统。****这种方法虽然简单，但也有个大问题就是没有很好的处理单位时间的边界。"}]},{"ID":"20230727014435-m9n5zie","Type":"NodeParagraph","Properties":{"id":"20230727014435-m9n5zie","updated":"20230727014435"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:\\Typora%20picture\\640.png?lastModify=1690393472"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230727014435-c38gx4l","Type":"NodeParagraph","Properties":{"id":"20230727014435-c38gx4l","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"不过说实话，这个计数引用了锁，在高并发场景，这个方式可能不太实用，我建议将锁去掉，然后将l.count++的逻辑通过原子计数处理，这样就可以保证l.count自增时不会被多个线程同时执行，****即通过原子计数的方式实现限流。"}]},{"ID":"20230727014435-ge6jj4w","Type":"NodeParagraph","Properties":{"id":"20230727014435-ge6jj4w","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"3. 滑动窗口"}]},{"ID":"20230727014435-hx6kfun","Type":"NodeParagraph","Properties":{"id":"20230727014435-hx6kfun","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"滑动窗口是针对计数器存在的临界点缺陷，所谓 滑动窗口（Sliding window） 是一种流量控制技术，这个词出现在 TCP 协议中。滑动窗口把固定时间片进行划分，并且随着时间的流逝，进行移动，固定数量的可以移动的格子，进行计数并判断阀值。"}]},{"ID":"20230727014435-n505r0d","Type":"NodeParagraph","Properties":{"id":"20230727014435-n505r0d","updated":"20230727014435"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:\\Typora%20picture\\640-16902636167451.png?lastModify=1690393472"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230727014435-imyn67e","Type":"NodeParagraph","Properties":{"id":"20230727014435-imyn67e","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"上图中我们用红色的虚线代表一个时间窗口（一分钟），每个时间窗口有 6 个格子，每个格子是 10 秒钟。每过 10 秒钟时间窗口向右移动一格，可以看红色箭头的方向。我们为每个格子都设置一个独立的计数器 Counter，假如一个请求在 0:45 访问了那么我们将第五个格子的计数器 +1（也是就是 0:40~0:50），在判断限流的时候需要把所有格子的计数加起来和设定的频次进行比较即可。"}]},{"ID":"20230727014435-y2zrblv","Type":"NodeParagraph","Properties":{"id":"20230727014435-y2zrblv","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"那么滑动窗口如何解决我们上面遇到的问题呢？来看下面的图："}]},{"ID":"20230727014435-at07pmu","Type":"NodeParagraph","Properties":{"id":"20230727014435-at07pmu","updated":"20230727014435"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:\\Typora%20picture\\640-16902636167462.png?lastModify=1690393472"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230727014435-7rr5ykq","Type":"NodeParagraph","Properties":{"id":"20230727014435-7rr5ykq","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"当用户在0:59 秒钟发送了 200个请求就会被第六个格子的计数器记录 +200，当下一秒的时候时间窗口向右移动了一个，此时计数器已经记录了该用户发送的 200 个请求，所以再发送的话就会触发限流，则拒绝新的请求。"}]},{"ID":"20230727014435-wys6wzv","Type":"NodeParagraph","Properties":{"id":"20230727014435-wys6wzv","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"其实计数器就是滑动窗口啊，只不过只有一个格子而已，所以想让限流做的更精确只需要划分更多的格子就可以了，为了更精确我们也不知道到底该设置多少个格子，****格子的数量影响着滑动窗口算法的精度，依然有时间片的概念，无法根本解决临界点问题。"}]},{"ID":"20230727014435-qy8wwgv","Type":"NodeParagraph","Properties":{"id":"20230727014435-qy8wwgv","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"4. 漏桶"}]},{"ID":"20230727014435-eputxex","Type":"NodeParagraph","Properties":{"id":"20230727014435-eputxex","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"漏桶算法（Leaky Bucket），原理就是一个固定容量的漏桶，按照固定速率流出水滴。用过水龙头都知道，打开龙头开关水就会流下滴到水桶里，而漏桶指的是水桶下面有个漏洞可以出水。如果水龙头开的特别大那么水流速就会过大，这样就可能导致水桶的水满了然后溢出。"}]},{"ID":"20230727014435-4wq6zvo","Type":"NodeParagraph","Properties":{"id":"20230727014435-4wq6zvo","updated":"20230727014435"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:\\Typora%20picture\\640-16902636167463.png?lastModify=1690393472"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230727014435-rswjk6h","Type":"NodeParagraph","Properties":{"id":"20230727014435-rswjk6h","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"一个固定容量的桶，有水流进来，也有水流出去。对于流进来的水来说，我们无法预计一共有多少水会流进来，也无法预计水流的速度。但是对于流出去的水来说，这个桶可以固定水流出的速率（处理速度），从而达到 流量整形 和 流量控制 的效果。"}]},{"ID":"20230727014435-nwklhe8","Type":"NodeParagraph","Properties":{"id":"20230727014435-nwklhe8","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"代码实现："}]},{"ID":"20230727014435-5f5zvu5","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-5f5zvu5","updated":"20230727014435"},"Children":[{"ID":"20230727014435-90ks36i","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-90ks36i","updated":"20230727014435"},"Children":[{"ID":"20230727014435-xs5r36x","Type":"NodeParagraph","Properties":{"id":"20230727014435-xs5r36x","updated":"20230727014435"}}]},{"ID":"20230727014435-ewlm8ue","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ewlm8ue","updated":"20230727014435"},"Children":[{"ID":"20230727014435-lsrqpqe","Type":"NodeParagraph","Properties":{"id":"20230727014435-lsrqpqe","updated":"20230727014435"}}]},{"ID":"20230727014435-j7m8olr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-j7m8olr","updated":"20230727014435"},"Children":[{"ID":"20230727014435-tl3i46s","Type":"NodeParagraph","Properties":{"id":"20230727014435-tl3i46s","updated":"20230727014435"}}]},{"ID":"20230727014435-x5tap32","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-x5tap32","updated":"20230727014435"},"Children":[{"ID":"20230727014435-ydk5l3y","Type":"NodeParagraph","Properties":{"id":"20230727014435-ydk5l3y","updated":"20230727014435"}}]},{"ID":"20230727014435-iohwrf8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-iohwrf8","updated":"20230727014435"},"Children":[{"ID":"20230727014435-fynbex4","Type":"NodeParagraph","Properties":{"id":"20230727014435-fynbex4","updated":"20230727014435"}}]},{"ID":"20230727014435-n4jaww2","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-n4jaww2","updated":"20230727014435"},"Children":[{"ID":"20230727014435-r1uxi6k","Type":"NodeParagraph","Properties":{"id":"20230727014435-r1uxi6k","updated":"20230727014435"}}]},{"ID":"20230727014435-qyhjvxh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-qyhjvxh","updated":"20230727014435"},"Children":[{"ID":"20230727014435-wogp48o","Type":"NodeParagraph","Properties":{"id":"20230727014435-wogp48o","updated":"20230727014435"}}]},{"ID":"20230727014435-i1u6aqc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-i1u6aqc","updated":"20230727014435"},"Children":[{"ID":"20230727014435-peza23n","Type":"NodeParagraph","Properties":{"id":"20230727014435-peza23n","updated":"20230727014435"}}]},{"ID":"20230727014435-he6kxes","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-he6kxes","updated":"20230727014435"},"Children":[{"ID":"20230727014435-7gnpmg2","Type":"NodeParagraph","Properties":{"id":"20230727014435-7gnpmg2","updated":"20230727014435"}}]},{"ID":"20230727014435-bsobw9f","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-bsobw9f","updated":"20230727014435"},"Children":[{"ID":"20230727014435-1y6v9k8","Type":"NodeParagraph","Properties":{"id":"20230727014435-1y6v9k8","updated":"20230727014435"}}]},{"ID":"20230727014435-iu5bpzw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-iu5bpzw","updated":"20230727014435"},"Children":[{"ID":"20230727014435-fl5o6sf","Type":"NodeParagraph","Properties":{"id":"20230727014435-fl5o6sf","updated":"20230727014435"}}]},{"ID":"20230727014435-assmxjn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-assmxjn","updated":"20230727014435"},"Children":[{"ID":"20230727014435-y3ln6nh","Type":"NodeParagraph","Properties":{"id":"20230727014435-y3ln6nh","updated":"20230727014435"}}]},{"ID":"20230727014435-kp4b6w9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-kp4b6w9","updated":"20230727014435"},"Children":[{"ID":"20230727014435-thuekfp","Type":"NodeParagraph","Properties":{"id":"20230727014435-thuekfp","updated":"20230727014435"}}]},{"ID":"20230727014435-diu9snc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-diu9snc","updated":"20230727014435"},"Children":[{"ID":"20230727014435-h0evz8q","Type":"NodeParagraph","Properties":{"id":"20230727014435-h0evz8q","updated":"20230727014435"}}]},{"ID":"20230727014435-5pq3m3b","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-5pq3m3b","updated":"20230727014435"},"Children":[{"ID":"20230727014435-t0lh3zg","Type":"NodeParagraph","Properties":{"id":"20230727014435-t0lh3zg","updated":"20230727014435"}}]},{"ID":"20230727014435-d6c99bh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-d6c99bh","updated":"20230727014435"},"Children":[{"ID":"20230727014435-423ljeu","Type":"NodeParagraph","Properties":{"id":"20230727014435-423ljeu","updated":"20230727014435"}}]},{"ID":"20230727014435-mgrk3ht","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-mgrk3ht","updated":"20230727014435"},"Children":[{"ID":"20230727014435-da9kx2v","Type":"NodeParagraph","Properties":{"id":"20230727014435-da9kx2v","updated":"20230727014435"}}]},{"ID":"20230727014435-mi8ndfo","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-mi8ndfo","updated":"20230727014435"},"Children":[{"ID":"20230727014435-5oleqdr","Type":"NodeParagraph","Properties":{"id":"20230727014435-5oleqdr","updated":"20230727014435"}}]},{"ID":"20230727014435-gohz58h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-gohz58h","updated":"20230727014435"},"Children":[{"ID":"20230727014435-mx09umx","Type":"NodeParagraph","Properties":{"id":"20230727014435-mx09umx","updated":"20230727014435"}}]},{"ID":"20230727014435-vabcylw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-vabcylw","updated":"20230727014435"},"Children":[{"ID":"20230727014435-juevuyv","Type":"NodeParagraph","Properties":{"id":"20230727014435-juevuyv","updated":"20230727014435"}}]},{"ID":"20230727014435-9yrxxn9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-9yrxxn9","updated":"20230727014435"},"Children":[{"ID":"20230727014435-v9utraz","Type":"NodeParagraph","Properties":{"id":"20230727014435-v9utraz","updated":"20230727014435"}}]},{"ID":"20230727014435-a2rnc2h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-a2rnc2h","updated":"20230727014435"},"Children":[{"ID":"20230727014435-s9rcvsx","Type":"NodeParagraph","Properties":{"id":"20230727014435-s9rcvsx","updated":"20230727014435"}}]},{"ID":"20230727014435-5gdj637","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-5gdj637","updated":"20230727014435"},"Children":[{"ID":"20230727014435-34poxe5","Type":"NodeParagraph","Properties":{"id":"20230727014435-34poxe5","updated":"20230727014435"}}]},{"ID":"20230727014435-ddp90r8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ddp90r8","updated":"20230727014435"},"Children":[{"ID":"20230727014435-owi4s8r","Type":"NodeParagraph","Properties":{"id":"20230727014435-owi4s8r","updated":"20230727014435"}}]},{"ID":"20230727014435-kz9v523","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-kz9v523","updated":"20230727014435"},"Children":[{"ID":"20230727014435-l1h7hy6","Type":"NodeParagraph","Properties":{"id":"20230727014435-l1h7hy6","updated":"20230727014435"}}]},{"ID":"20230727014435-y4o69wm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-y4o69wm","updated":"20230727014435"},"Children":[{"ID":"20230727014435-8144ca7","Type":"NodeParagraph","Properties":{"id":"20230727014435-8144ca7","updated":"20230727014435"}}]},{"ID":"20230727014435-ve6gfwv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ve6gfwv","updated":"20230727014435"},"Children":[{"ID":"20230727014435-2caq25d","Type":"NodeParagraph","Properties":{"id":"20230727014435-2caq25d","updated":"20230727014435"}}]},{"ID":"20230727014435-ih8ba1m","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ih8ba1m","updated":"20230727014435"},"Children":[{"ID":"20230727014435-4mqubwl","Type":"NodeParagraph","Properties":{"id":"20230727014435-4mqubwl","updated":"20230727014435"}}]},{"ID":"20230727014435-6oaq3jt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-6oaq3jt","updated":"20230727014435"},"Children":[{"ID":"20230727014435-jsbpgr6","Type":"NodeParagraph","Properties":{"id":"20230727014435-jsbpgr6","updated":"20230727014435"}}]},{"ID":"20230727014435-a30dbme","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-a30dbme","updated":"20230727014435"},"Children":[{"ID":"20230727014435-zkvzzwq","Type":"NodeParagraph","Properties":{"id":"20230727014435-zkvzzwq","updated":"20230727014435"}}]}]},{"ID":"20230727014435-d5rwhtp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230727014435-d5rwhtp","updated":"20230727014435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"type LeakyBucket struct {    rate       float64 //固定每秒出水速率    capacity   float64 //桶的容量    water      float64 //桶中当前水量    lastLeakMs int64   //桶上次漏水时间戳 ms    lock sync.Mutex}func (l *LeakyBucket) Allow() bool {    l.lock.Lock()    defer l.lock.Unlock()    now := time.Now().UnixNano() / 1e6    eclipse := float64((now - l.lastLeakMs)) * l.rate / 1000 //先执行漏水    l.water = l.water - eclipse                              //计算剩余水量    l.water = math.Max(0, l.water)                           //桶干了    l.lastLeakMs = now    if (l.water + 1) \u003c l.capacity {        // 尝试加水,并且水还未满        l.water++        return true    } else {        // 水满，拒绝加水        return false    }}func (l *LeakyBucket) Set(r, c float64) {    l.rate = r    l.capacity = c    l.water = 0    l.lastLeakMs = time.Now().UnixNano() / 1e6}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230727014435-jgzjrc9","Type":"NodeParagraph","Properties":{"id":"20230727014435-jgzjrc9","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"漏桶算法有以下特点："}]},{"ID":"20230727014435-qukjdbr","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-qukjdbr","updated":"20230727014435"},"Children":[{"ID":"20230727014435-788ddid","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-788ddid","updated":"20230727014435"},"Children":[{"ID":"20230727014435-pd7qeu9","Type":"NodeParagraph","Properties":{"id":"20230727014435-pd7qeu9","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"漏桶具有固定容量，出水速率是固定常量（流出请求）"}]}]},{"ID":"20230727014435-rs69ptt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-rs69ptt","updated":"20230727014435"},"Children":[{"ID":"20230727014435-k50i4l6","Type":"NodeParagraph","Properties":{"id":"20230727014435-k50i4l6","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果桶是空的，则不需流出水滴"}]}]},{"ID":"20230727014435-3ro7lsh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-3ro7lsh","updated":"20230727014435"},"Children":[{"ID":"20230727014435-nftpdsv","Type":"NodeParagraph","Properties":{"id":"20230727014435-nftpdsv","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"可以以任意速率流入水滴到漏桶（流入请求）"}]}]},{"ID":"20230727014435-czq7o1b","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-czq7o1b","updated":"20230727014435"},"Children":[{"ID":"20230727014435-uoflysf","Type":"NodeParagraph","Properties":{"id":"20230727014435-uoflysf","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果流入水滴超出了桶的容量，则流入的水滴溢出（新请求被拒绝）"}]}]}]},{"ID":"20230727014435-j0dm5ce","Type":"NodeParagraph","Properties":{"id":"20230727014435-j0dm5ce","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"漏桶限制的是常量流出速率（即流出速率是一个固定常量值），****所以最大的速率就是出水的速率，不能出现突发流量。"}]},{"ID":"20230727014435-6m868fh","Type":"NodeParagraph","Properties":{"id":"20230727014435-6m868fh","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"5. 令牌桶"}]},{"ID":"20230727014435-7zhgzcf","Type":"NodeParagraph","Properties":{"id":"20230727014435-7zhgzcf","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"令牌桶算法（Token Bucket）是网络流量整形（Traffic Shaping）和速率限制（Rate Limiting）中最常使用的一种算法。典型情况下，令牌桶算法用来控制发送到网络上的数据的数目，并允许突发数据的发送。"}]},{"ID":"20230727014435-neb0f8h","Type":"NodeParagraph","Properties":{"id":"20230727014435-neb0f8h","updated":"20230727014435"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"图片"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:\\Typora%20picture\\640-16902636167464.png?lastModify=1690393472"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230727014435-eoglah8","Type":"NodeParagraph","Properties":{"id":"20230727014435-eoglah8","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"我们有一个固定的桶，桶里存放着令牌（token）。一开始桶是空的，系统按固定的时间（rate）往桶里添加令牌，直到桶里的令牌数满，多余的请求会被丢弃。当请求来的时候，从桶里移除一个令牌，如果桶是空的则拒绝请求或者阻塞。"}]},{"ID":"20230727014435-nfxsbuv","Type":"NodeParagraph","Properties":{"id":"20230727014435-nfxsbuv","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"代码实现："}]},{"ID":"20230727014435-ghsxdln","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-ghsxdln","updated":"20230727014435"},"Children":[{"ID":"20230727014435-8focq7b","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-8focq7b","updated":"20230727014435"},"Children":[{"ID":"20230727014435-31m0s1k","Type":"NodeParagraph","Properties":{"id":"20230727014435-31m0s1k","updated":"20230727014435"}}]},{"ID":"20230727014435-xxwnd1x","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-xxwnd1x","updated":"20230727014435"},"Children":[{"ID":"20230727014435-7elt7sa","Type":"NodeParagraph","Properties":{"id":"20230727014435-7elt7sa","updated":"20230727014435"}}]},{"ID":"20230727014435-udrrhae","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-udrrhae","updated":"20230727014435"},"Children":[{"ID":"20230727014435-vywvkse","Type":"NodeParagraph","Properties":{"id":"20230727014435-vywvkse","updated":"20230727014435"}}]},{"ID":"20230727014435-nif4mfe","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-nif4mfe","updated":"20230727014435"},"Children":[{"ID":"20230727014435-m8e97mv","Type":"NodeParagraph","Properties":{"id":"20230727014435-m8e97mv","updated":"20230727014435"}}]},{"ID":"20230727014435-poe3zba","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-poe3zba","updated":"20230727014435"},"Children":[{"ID":"20230727014435-n2hjyp8","Type":"NodeParagraph","Properties":{"id":"20230727014435-n2hjyp8","updated":"20230727014435"}}]},{"ID":"20230727014435-aiu9yrx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-aiu9yrx","updated":"20230727014435"},"Children":[{"ID":"20230727014435-jzix49n","Type":"NodeParagraph","Properties":{"id":"20230727014435-jzix49n","updated":"20230727014435"}}]},{"ID":"20230727014435-fob95qv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-fob95qv","updated":"20230727014435"},"Children":[{"ID":"20230727014435-qozqwih","Type":"NodeParagraph","Properties":{"id":"20230727014435-qozqwih","updated":"20230727014435"}}]},{"ID":"20230727014435-f68cu1g","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-f68cu1g","updated":"20230727014435"},"Children":[{"ID":"20230727014435-ns8umtj","Type":"NodeParagraph","Properties":{"id":"20230727014435-ns8umtj","updated":"20230727014435"}}]},{"ID":"20230727014435-j6kwu91","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-j6kwu91","updated":"20230727014435"},"Children":[{"ID":"20230727014435-9xvj4pu","Type":"NodeParagraph","Properties":{"id":"20230727014435-9xvj4pu","updated":"20230727014435"}}]},{"ID":"20230727014435-555teiw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-555teiw","updated":"20230727014435"},"Children":[{"ID":"20230727014435-c1cjfcd","Type":"NodeParagraph","Properties":{"id":"20230727014435-c1cjfcd","updated":"20230727014435"}}]},{"ID":"20230727014435-4ghgcvo","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-4ghgcvo","updated":"20230727014435"},"Children":[{"ID":"20230727014435-uw5rv1z","Type":"NodeParagraph","Properties":{"id":"20230727014435-uw5rv1z","updated":"20230727014435"}}]},{"ID":"20230727014435-eo5upnh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-eo5upnh","updated":"20230727014435"},"Children":[{"ID":"20230727014435-vxi7d52","Type":"NodeParagraph","Properties":{"id":"20230727014435-vxi7d52","updated":"20230727014435"}}]},{"ID":"20230727014435-giakljt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-giakljt","updated":"20230727014435"},"Children":[{"ID":"20230727014435-qwmrtnl","Type":"NodeParagraph","Properties":{"id":"20230727014435-qwmrtnl","updated":"20230727014435"}}]},{"ID":"20230727014435-pij0wjl","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-pij0wjl","updated":"20230727014435"},"Children":[{"ID":"20230727014435-nsl8cwm","Type":"NodeParagraph","Properties":{"id":"20230727014435-nsl8cwm","updated":"20230727014435"}}]},{"ID":"20230727014435-ckl21t8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ckl21t8","updated":"20230727014435"},"Children":[{"ID":"20230727014435-1ho5255","Type":"NodeParagraph","Properties":{"id":"20230727014435-1ho5255","updated":"20230727014435"}}]},{"ID":"20230727014435-fyhog5z","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-fyhog5z","updated":"20230727014435"},"Children":[{"ID":"20230727014435-da7b1ox","Type":"NodeParagraph","Properties":{"id":"20230727014435-da7b1ox","updated":"20230727014435"}}]},{"ID":"20230727014435-dtgdq4h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-dtgdq4h","updated":"20230727014435"},"Children":[{"ID":"20230727014435-0k2gkj6","Type":"NodeParagraph","Properties":{"id":"20230727014435-0k2gkj6","updated":"20230727014435"}}]},{"ID":"20230727014435-z7kv9du","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-z7kv9du","updated":"20230727014435"},"Children":[{"ID":"20230727014435-eya10ls","Type":"NodeParagraph","Properties":{"id":"20230727014435-eya10ls","updated":"20230727014435"}}]},{"ID":"20230727014435-xn0nkhl","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-xn0nkhl","updated":"20230727014435"},"Children":[{"ID":"20230727014435-n344n8l","Type":"NodeParagraph","Properties":{"id":"20230727014435-n344n8l","updated":"20230727014435"}}]},{"ID":"20230727014435-1zi0i8f","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-1zi0i8f","updated":"20230727014435"},"Children":[{"ID":"20230727014435-lqrwo5i","Type":"NodeParagraph","Properties":{"id":"20230727014435-lqrwo5i","updated":"20230727014435"}}]},{"ID":"20230727014435-whem02j","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-whem02j","updated":"20230727014435"},"Children":[{"ID":"20230727014435-rzzny82","Type":"NodeParagraph","Properties":{"id":"20230727014435-rzzny82","updated":"20230727014435"}}]},{"ID":"20230727014435-3g14mhv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-3g14mhv","updated":"20230727014435"},"Children":[{"ID":"20230727014435-pvmg3f6","Type":"NodeParagraph","Properties":{"id":"20230727014435-pvmg3f6","updated":"20230727014435"}}]},{"ID":"20230727014435-rdtuptx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-rdtuptx","updated":"20230727014435"},"Children":[{"ID":"20230727014435-6b3d03o","Type":"NodeParagraph","Properties":{"id":"20230727014435-6b3d03o","updated":"20230727014435"}}]},{"ID":"20230727014435-xmbmuxr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-xmbmuxr","updated":"20230727014435"},"Children":[{"ID":"20230727014435-06rpebx","Type":"NodeParagraph","Properties":{"id":"20230727014435-06rpebx","updated":"20230727014435"}}]},{"ID":"20230727014435-nms5dth","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-nms5dth","updated":"20230727014435"},"Children":[{"ID":"20230727014435-uysnhfn","Type":"NodeParagraph","Properties":{"id":"20230727014435-uysnhfn","updated":"20230727014435"}}]},{"ID":"20230727014435-31nw15i","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-31nw15i","updated":"20230727014435"},"Children":[{"ID":"20230727014435-cy32mal","Type":"NodeParagraph","Properties":{"id":"20230727014435-cy32mal","updated":"20230727014435"}}]},{"ID":"20230727014435-2ctgj1d","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-2ctgj1d","updated":"20230727014435"},"Children":[{"ID":"20230727014435-yl8e1v8","Type":"NodeParagraph","Properties":{"id":"20230727014435-yl8e1v8","updated":"20230727014435"}}]},{"ID":"20230727014435-wjyfmmq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-wjyfmmq","updated":"20230727014435"},"Children":[{"ID":"20230727014435-hxukdti","Type":"NodeParagraph","Properties":{"id":"20230727014435-hxukdti","updated":"20230727014435"}}]},{"ID":"20230727014435-87yc513","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-87yc513","updated":"20230727014435"},"Children":[{"ID":"20230727014435-jz9e9eq","Type":"NodeParagraph","Properties":{"id":"20230727014435-jz9e9eq","updated":"20230727014435"}}]},{"ID":"20230727014435-45tncyr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-45tncyr","updated":"20230727014435"},"Children":[{"ID":"20230727014435-r6tf0ns","Type":"NodeParagraph","Properties":{"id":"20230727014435-r6tf0ns","updated":"20230727014435"}}]},{"ID":"20230727014435-0c5ky3f","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-0c5ky3f","updated":"20230727014435"},"Children":[{"ID":"20230727014435-f7u6rxi","Type":"NodeParagraph","Properties":{"id":"20230727014435-f7u6rxi","updated":"20230727014435"}}]},{"ID":"20230727014435-fjjbzkr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-fjjbzkr","updated":"20230727014435"},"Children":[{"ID":"20230727014435-d6dd0ls","Type":"NodeParagraph","Properties":{"id":"20230727014435-d6dd0ls","updated":"20230727014435"}}]}]},{"ID":"20230727014435-wkkml2j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230727014435-wkkml2j","updated":"20230727014435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"type TokenBucket struct {    rate         int64 //固定的token放入速率, r/s    capacity     int64 //桶的容量    tokens       int64 //桶中当前token数量    lastTokenSec int64 //桶上次放token的时间戳 s     lock sync.Mutex} func (l *TokenBucket) Allow() bool {    l.lock.Lock()    defer l.lock.Unlock()    now := time.Now().Unix()    l.tokens = l.tokens + (now-l.lastTokenSec)*l.rate // 先添加令牌    if l.tokens \u003e l.capacity {        l.tokens = l.capacity    }    l.lastTokenSec = now    if l.tokens \u003e 0 {        // 还有令牌，领取令牌        l.tokens--        return true    } else {        // 没有令牌,则拒绝        return false    }}func (l *TokenBucket) Set(r, c int64) {    l.rate = r    l.capacity = c    l.tokens = 0    l.lastTokenSec = time.Now().Unix()}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230727014435-6jdqjhj","Type":"NodeParagraph","Properties":{"id":"20230727014435-6jdqjhj","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"令牌桶有以下特点："}]},{"ID":"20230727014435-oc1n9s1","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-oc1n9s1","updated":"20230727014435"},"Children":[{"ID":"20230727014435-agjrj4t","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-agjrj4t","updated":"20230727014435"},"Children":[{"ID":"20230727014435-l3jzbep","Type":"NodeParagraph","Properties":{"id":"20230727014435-l3jzbep","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"令牌按固定的速率被放入令牌桶中"}]}]},{"ID":"20230727014435-mv293i1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-mv293i1","updated":"20230727014435"},"Children":[{"ID":"20230727014435-a59eblz","Type":"NodeParagraph","Properties":{"id":"20230727014435-a59eblz","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"桶中最多存放 B 个令牌，当桶满时，新添加的令牌被丢弃或拒绝"}]}]},{"ID":"20230727014435-5bmqgrt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-5bmqgrt","updated":"20230727014435"},"Children":[{"ID":"20230727014435-mapi3hb","Type":"NodeParagraph","Properties":{"id":"20230727014435-mapi3hb","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果桶中的令牌不足 N 个，则不会删除令牌，且请求将被限流（丢弃或阻塞等待）"}]}]}]},{"ID":"20230727014435-qdggqij","Type":"NodeParagraph","Properties":{"id":"20230727014435-qdggqij","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"令牌桶限制的是平均流入速率"},{"Type":"NodeText","Data":"（允许突发请求，只要有令牌就可以处理，支持一次拿3个令牌，4个令牌...），"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"并允许一定程度突发流量，所以也是非常常用的限流算法。"}]},{"ID":"20230727014435-0pml69i","Type":"NodeParagraph","Properties":{"id":"20230727014435-0pml69i","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"6. httpserver频率限制"}]},{"ID":"20230727014435-i3wy2te","Type":"NodeParagraph","Properties":{"id":"20230727014435-i3wy2te","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用golang来编写httpserver时，可以使用官方已经有实现好的包："}]},{"ID":"20230727014435-4c9kh14","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-4c9kh14","updated":"20230727014435"},"Children":[{"ID":"20230727014435-ftiwy23","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ftiwy23","updated":"20230727014435"},"Children":[{"ID":"20230727014435-hwr9e9o","Type":"NodeParagraph","Properties":{"id":"20230727014435-hwr9e9o","updated":"20230727014435"}}]},{"ID":"20230727014435-ay8mu0l","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ay8mu0l","updated":"20230727014435"},"Children":[{"ID":"20230727014435-m55azz2","Type":"NodeParagraph","Properties":{"id":"20230727014435-m55azz2","updated":"20230727014435"}}]},{"ID":"20230727014435-surlzv8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-surlzv8","updated":"20230727014435"},"Children":[{"ID":"20230727014435-nxq4g7h","Type":"NodeParagraph","Properties":{"id":"20230727014435-nxq4g7h","updated":"20230727014435"}}]},{"ID":"20230727014435-t4ji2rl","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-t4ji2rl","updated":"20230727014435"},"Children":[{"ID":"20230727014435-8sciy6w","Type":"NodeParagraph","Properties":{"id":"20230727014435-8sciy6w","updated":"20230727014435"}}]},{"ID":"20230727014435-ua5alqn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ua5alqn","updated":"20230727014435"},"Children":[{"ID":"20230727014435-40dfrgt","Type":"NodeParagraph","Properties":{"id":"20230727014435-40dfrgt","updated":"20230727014435"}}]},{"ID":"20230727014435-f1z7uj8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-f1z7uj8","updated":"20230727014435"},"Children":[{"ID":"20230727014435-1atjziw","Type":"NodeParagraph","Properties":{"id":"20230727014435-1atjziw","updated":"20230727014435"}}]},{"ID":"20230727014435-wd8vzs1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-wd8vzs1","updated":"20230727014435"},"Children":[{"ID":"20230727014435-9ulkv9c","Type":"NodeParagraph","Properties":{"id":"20230727014435-9ulkv9c","updated":"20230727014435"}}]},{"ID":"20230727014435-az2w7ml","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-az2w7ml","updated":"20230727014435"},"Children":[{"ID":"20230727014435-rkcj0ck","Type":"NodeParagraph","Properties":{"id":"20230727014435-rkcj0ck","updated":"20230727014435"}}]},{"ID":"20230727014435-6hcitqv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-6hcitqv","updated":"20230727014435"},"Children":[{"ID":"20230727014435-2rydkwl","Type":"NodeParagraph","Properties":{"id":"20230727014435-2rydkwl","updated":"20230727014435"}}]},{"ID":"20230727014435-sz251fh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-sz251fh","updated":"20230727014435"},"Children":[{"ID":"20230727014435-g35xfp3","Type":"NodeParagraph","Properties":{"id":"20230727014435-g35xfp3","updated":"20230727014435"}}]},{"ID":"20230727014435-2o82u3o","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-2o82u3o","updated":"20230727014435"},"Children":[{"ID":"20230727014435-nore8ir","Type":"NodeParagraph","Properties":{"id":"20230727014435-nore8ir","updated":"20230727014435"}}]},{"ID":"20230727014435-6uq3oi3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-6uq3oi3","updated":"20230727014435"},"Children":[{"ID":"20230727014435-ni10mu5","Type":"NodeParagraph","Properties":{"id":"20230727014435-ni10mu5","updated":"20230727014435"}}]},{"ID":"20230727014435-ztgw4ni","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-ztgw4ni","updated":"20230727014435"},"Children":[{"ID":"20230727014435-kniclpx","Type":"NodeParagraph","Properties":{"id":"20230727014435-kniclpx","updated":"20230727014435"}}]},{"ID":"20230727014435-idbk7zp","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-idbk7zp","updated":"20230727014435"},"Children":[{"ID":"20230727014435-lwsdfoc","Type":"NodeParagraph","Properties":{"id":"20230727014435-lwsdfoc","updated":"20230727014435"}}]},{"ID":"20230727014435-t03tmvb","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-t03tmvb","updated":"20230727014435"},"Children":[{"ID":"20230727014435-r8xu7ez","Type":"NodeParagraph","Properties":{"id":"20230727014435-r8xu7ez","updated":"20230727014435"}}]}]},{"ID":"20230727014435-62lhf10","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230727014435-62lhf10","updated":"20230727014435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"import(    \"fmt\"    \"net\"    \"golang.org/x/net/netutil\")func main() {    l, err := net.Listen(\"tcp\", \"127.0.0.1:0\")    if err != nil {        fmt.Fatalf(\"Listen: %v\", err)    }    defer l.Close()    l = LimitListener(l, max)    http.Serve(l, http.HandlerFunc())    //bla bla bla.................}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230727014435-kzko8y7","Type":"NodeParagraph","Properties":{"id":"20230727014435-kzko8y7","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"源码的基本思路就是为连接数计数，通过make chan来建立一个最大连接数的channel, 每次accept就+1，close时候就-1. 当到达最大连接数时，就等待空闲连接出来之后再accept。"}]},{"ID":"20230727014435-m8cy31n","Type":"NodeParagraph","Properties":{"id":"20230727014435-m8cy31n","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"7. Redis消息队列限流"}]},{"ID":"20230727014435-16z447f","Type":"NodeParagraph","Properties":{"id":"20230727014435-16z447f","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"我们都知道消息队列可以实现异步、解耦和削峰。使用Redis的List类型的消息队列，指定队列固定长度，开始会一直往队列塞数据，当下游消费能力不足，队列处于满员状态时，生产者的数据直接丢弃，以此实现限流。这里其实有个疑问，因为channel其实也可以理解为一个队列，那么channel是否也可以通过这种方式实现限流呢？"}]},{"ID":"20230727014435-9d4d6io","Type":"NodeParagraph","Properties":{"id":"20230727014435-9d4d6io","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"当消息队列满时，上游不能塞数据，会直接阻塞住，如果不想阻塞，那么就需要判断队列的长度，如果满员，就直接丢弃请求，那么每次往队列塞数据前，就需要判断队列的长度了，但是channel的长度大小其实是不知道的，所以从这个层面来看，channel应该不能通过改方式实现限流。"}]},{"ID":"20230727014435-1n4hw5n","Type":"NodeParagraph","Properties":{"id":"20230727014435-1n4hw5n","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"8. 总结"}]},{"ID":"20230727014435-4ncb4o7","Type":"NodeParagraph","Properties":{"id":"20230727014435-4ncb4o7","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"实现限流的方式，应该还有很多，就不再列举了，上面很多内容都是从网上摘抄的，自己整理一遍，印象也会更深刻一些，下面通过个人的理解，总结一下每种限流的优缺点，也便于以后选型。"}]},{"ID":"20230727014435-3v85tce","Type":"NodeParagraph","Properties":{"id":"20230727014435-3v85tce","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"并发控制限流："}]},{"ID":"20230727014435-6b9zjem","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-6b9zjem","updated":"20230727014435"},"Children":[{"ID":"20230727014435-45yl0ox","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-45yl0ox","updated":"20230727014435"},"Children":[{"ID":"20230727014435-td3hjnv","Type":"NodeParagraph","Properties":{"id":"20230727014435-td3hjnv","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"优点：通过控制消费者的线程数，来控制消费者的并发数量；"}]}]},{"ID":"20230727014435-0anut9n","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-0anut9n","updated":"20230727014435"},"Children":[{"ID":"20230727014435-runt827","Type":"NodeParagraph","Properties":{"id":"20230727014435-runt827","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"缺点：感觉这种限流场景好Low，首先没有见过这么用，然后处理数据的数量，每个线程能执行多少，都没有一个确定的值，不是很好的限流方式。"}]}]}]},{"ID":"20230727014435-y1xpgpe","Type":"NodeParagraph","Properties":{"id":"20230727014435-y1xpgpe","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"计数器："}]},{"ID":"20230727014435-ravzl23","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-ravzl23","updated":"20230727014435"},"Children":[{"ID":"20230727014435-1b010ka","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-1b010ka","updated":"20230727014435"},"Children":[{"ID":"20230727014435-ngbwo25","Type":"NodeParagraph","Properties":{"id":"20230727014435-ngbwo25","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"优点：固定时间段计数，实现简单，适用不太精准的场景；"}]}]},{"ID":"20230727014435-l4wueju","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-l4wueju","updated":"20230727014435"},"Children":[{"ID":"20230727014435-x9z58m4","Type":"NodeParagraph","Properties":{"id":"20230727014435-x9z58m4","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"缺点：对边界没有很好处理，导致限流不能精准控制。"}]}]}]},{"ID":"20230727014435-era45oj","Type":"NodeParagraph","Properties":{"id":"20230727014435-era45oj","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"滑动窗口："}]},{"ID":"20230727014435-q05dlo0","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-q05dlo0","updated":"20230727014435"},"Children":[{"ID":"20230727014435-d2335xp","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-d2335xp","updated":"20230727014435"},"Children":[{"ID":"20230727014435-kw3wcgg","Type":"NodeParagraph","Properties":{"id":"20230727014435-kw3wcgg","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"优点：将固定时间段分块，时间比“计数器”复杂，适用于稍微精准的场景；"}]}]},{"ID":"20230727014435-c75xaa5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-c75xaa5","updated":"20230727014435"},"Children":[{"ID":"20230727014435-ub21emo","Type":"NodeParagraph","Properties":{"id":"20230727014435-ub21emo","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"缺点：实现稍微复杂，还是不能彻底解决“计数器”存在的边界问题。"}]}]}]},{"ID":"20230727014435-z74088p","Type":"NodeParagraph","Properties":{"id":"20230727014435-z74088p","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"漏桶："}]},{"ID":"20230727014435-yjq34se","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-yjq34se","updated":"20230727014435"},"Children":[{"ID":"20230727014435-1ik6q3g","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-1ik6q3g","updated":"20230727014435"},"Children":[{"ID":"20230727014435-sibg17a","Type":"NodeParagraph","Properties":{"id":"20230727014435-sibg17a","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"优点：可以很好的控制消费频率；"}]}]},{"ID":"20230727014435-okwo4uw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-okwo4uw","updated":"20230727014435"},"Children":[{"ID":"20230727014435-9l8e9tj","Type":"NodeParagraph","Properties":{"id":"20230727014435-9l8e9tj","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"缺点：实现稍微复杂，单位时间内，不能多消费，感觉不太灵活。"}]}]}]},{"ID":"20230727014435-tm18z11","Type":"NodeParagraph","Properties":{"id":"20230727014435-tm18z11","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"令牌桶："}]},{"ID":"20230727014435-z0qmrlb","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-z0qmrlb","updated":"20230727014435"},"Children":[{"ID":"20230727014435-1u7z29k","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-1u7z29k","updated":"20230727014435"},"Children":[{"ID":"20230727014435-mamy3zt","Type":"NodeParagraph","Properties":{"id":"20230727014435-mamy3zt","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"优点：可以解决“漏桶”不能灵活消费的问题，又能避免过渡消费，强烈推荐；"}]}]},{"ID":"20230727014435-y33fhca","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-y33fhca","updated":"20230727014435"},"Children":[{"ID":"20230727014435-wgno8d3","Type":"NodeParagraph","Properties":{"id":"20230727014435-wgno8d3","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"缺点：实现稍微复杂，其它缺点没有想到。"}]}]}]},{"ID":"20230727014435-wzfsatq","Type":"NodeParagraph","Properties":{"id":"20230727014435-wzfsatq","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"httpserver频率限制："}]},{"ID":"20230727014435-u89ejfn","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-u89ejfn","updated":"20230727014435"},"Children":[{"ID":"20230727014435-4jabs9b","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-4jabs9b","updated":"20230727014435"},"Children":[{"ID":"20230727014435-ju4kyxj","Type":"NodeParagraph","Properties":{"id":"20230727014435-ju4kyxj","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"优点：实现简单，直接有第三方库支持，也能很好支持限流；"}]}]},{"ID":"20230727014435-6w9tklg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-6w9tklg","updated":"20230727014435"},"Children":[{"ID":"20230727014435-q64g870","Type":"NodeParagraph","Properties":{"id":"20230727014435-q64g870","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"缺点：如果需要使用限流，我应该不会使用这种。"}]}]}]},{"ID":"20230727014435-1xa3rqs","Type":"NodeParagraph","Properties":{"id":"20230727014435-1xa3rqs","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Redis消息队列："}]},{"ID":"20230727014435-txq5xg4","Type":"NodeList","ListData":{},"Properties":{"id":"20230727014435-txq5xg4","updated":"20230727014435"},"Children":[{"ID":"20230727014435-yq1on06","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-yq1on06","updated":"20230727014435"},"Children":[{"ID":"20230727014435-wdwwb6h","Type":"NodeParagraph","Properties":{"id":"20230727014435-wdwwb6h","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"优点：适用数据流动的场景，经常和异步和解耦结合使用，支持数据存储；"}]}]},{"ID":"20230727014435-1svwsih","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230727014435-1svwsih","updated":"20230727014435"},"Children":[{"ID":"20230727014435-7pjz0kh","Type":"NodeParagraph","Properties":{"id":"20230727014435-7pjz0kh","updated":"20230727014435"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"缺点：一般只能结合Redis使用，因为Redis是单进程单线程模型处理数据（现在已经支持多线程，但是命令执行部分其实还是单线程），如果用其它消息队列，就需要加锁来处理并发控制，就得不偿失了。"}]}]}]}]}