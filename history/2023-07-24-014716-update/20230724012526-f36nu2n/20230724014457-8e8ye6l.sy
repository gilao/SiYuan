{"ID":"20230724014457-8e8ye6l","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724014457-8e8ye6l","title":"6. Docker 数据管理","updated":"20230724014546"},"Children":[{"ID":"20230724014537-k5ja78a","Type":"NodeParagraph","Properties":{"id":"20230724014537-k5ja78a","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"容器中管理数据主要有两种方式："}]},{"ID":"20230724014537-5ut42h6","Type":"NodeParagraph","Properties":{"id":"20230724014537-5ut42h6","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据卷（Data Volumes）：容器内数据直接映射到本地主机环境；"}]},{"ID":"20230724014537-jv8x7yy","Type":"NodeParagraph","Properties":{"id":"20230724014537-jv8x7yy","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·数据卷容器（Data Volume Containers）：使用特定容器维护数据卷。"}]},{"ID":"20230724014537-z06kq6t","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724014537-z06kq6t","updated":"20230724014537"},"Children":[{"Type":"NodeText","Data":"1. 数据卷"}]},{"ID":"20230724014537-wdr9q04","Type":"NodeParagraph","Properties":{"id":"20230724014537-wdr9q04","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据卷是一个可供容器使用的特殊目录，他将主机操作系统目录直接映射进容器，类似于Linux中的mount操作"}]},{"ID":"20230724014537-g5invxc","Type":"NodeParagraph","Properties":{"id":"20230724014537-g5invxc","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据卷可以提供很多有用的特性"}]},{"ID":"20230724014537-w1fo6a6","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20230724014537-w1fo6a6","updated":"20230724014537"},"Children":[{"ID":"20230724014537-p4txpwe","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20230724014537-p4txpwe","updated":"20230724014537"},"Children":[{"ID":"20230724014537-79ng6xw","Type":"NodeParagraph","Properties":{"id":"20230724014537-79ng6xw","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据卷可以在容器之间共享和重用，容器间传递数据变得更加高效方便"}]}]},{"ID":"20230724014537-yx9lepw","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20230724014537-yx9lepw","updated":"20230724014537"},"Children":[{"ID":"20230724014537-ghmy9rj","Type":"NodeParagraph","Properties":{"id":"20230724014537-ghmy9rj","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据卷内数据的修改会立马生效，无论是容器内操作还是本地操作"}]}]},{"ID":"20230724014537-bhqmo8q","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20230724014537-bhqmo8q","updated":"20230724014537"},"Children":[{"ID":"20230724014537-ar4m8a3","Type":"NodeParagraph","Properties":{"id":"20230724014537-ar4m8a3","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"对数据卷的更新不会影响镜像，解耦了应用和数据"}]}]},{"ID":"20230724014537-hv4mjuk","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20230724014537-hv4mjuk","updated":"20230724014537"},"Children":[{"ID":"20230724014537-hoyls2i","Type":"NodeParagraph","Properties":{"id":"20230724014537-hoyls2i","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"卷会一直存在，直到没有容器使用，可以安全的卸载它"}]}]}]},{"ID":"20230724014537-qaksrbi","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724014537-qaksrbi","updated":"20230724014537"},"Children":[{"Type":"NodeText","Data":"在容器内创建一个数据卷"}]},{"ID":"20230724014537-vfjo6ux","Type":"NodeParagraph","Properties":{"id":"20230724014537-vfjo6ux","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"在用docker run命令时候，使用 -v 标记可以在容器内创建一个数据卷"}]},{"ID":"20230724014537-nl1xhys","Type":"NodeParagraph","Properties":{"id":"20230724014537-nl1xhys","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"多次重复使用 -v标记可以创建多个数据卷"}]},{"ID":"20230724014537-0d8j6p9","Type":"NodeThematicBreak","Properties":{"id":"20230724014537-0d8j6p9","updated":"20230724014537"}},{"ID":"20230724014537-rf922u7","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724014537-rf922u7","updated":"20230724014537"},"Children":[{"Type":"NodeText","Data":"挂载一个主机目录作为数据卷"}]},{"ID":"20230724014537-ahf9b07","Type":"NodeParagraph","Properties":{"id":"20230724014537-ahf9b07","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用-v标记也可以指定挂载一个本地的已有目录到容器中去作为数据卷（推荐方式）。"}]},{"ID":"20230724014537-cpcuzzp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724014537-cpcuzzp","updated":"20230724014537"},"Children":[{"Type":"NodeText","Data":"挂载一个本地主机文件作为数据卷"}]},{"ID":"20230724014537-uip2u02","Type":"NodeParagraph","Properties":{"id":"20230724014537-uip2u02","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"-v标记也可以从主机挂载单个文件到容器中作为数据卷（不推荐）。"}]},{"ID":"20230724014537-g6v04yf","Type":"NodeParagraph","Properties":{"id":"20230724014537-g6v04yf","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果直接挂载一个文件到容器，使用文件编辑工具，包括vi或者sed--in-place的时候，可能会造成文件inode的改变，从Docker 1.1.0起，这会导致报错误信息。所以推荐的方式是直接挂载文件所在的目录。"}]},{"ID":"20230724014537-6068yiq","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724014537-6068yiq","updated":"20230724014537"},"Children":[{"Type":"NodeText","Data":"2. 数据卷容器"}]},{"ID":"20230724014537-0c3zgk0","Type":"NodeParagraph","Properties":{"id":"20230724014537-0c3zgk0","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果用户需要在多个容器之间共享一些持续更新的数据，最简单的方式是使用数据卷容器。数据卷容器也是一个容器，但是它的目的是专门用来提供数据卷供其他容器挂载。"}]},{"ID":"20230724014537-4rp4frl","Type":"NodeParagraph","Properties":{"id":"20230724014537-4rp4frl","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"首先，创建一个数据卷容器dbdata，并在其中创建一个数据卷挂载到/dbdata："}]},{"ID":"20230724014537-kj2g0dc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014537-kj2g0dc","updated":"20230724014537"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run -it -v /dbdata --name dbdata ubunturoot@3ed94f279b6f:/#\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014537-l9clhwq","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724014537-l9clhwq","updated":"20230724014537"},"Children":[{"Type":"NodeText","Data":"3. 利用数据卷容器来迁移数据"}]},{"ID":"20230724014537-2i1r6xe","Type":"NodeParagraph","Properties":{"id":"20230724014537-2i1r6xe","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"可以利用数据卷容器对其中的数据卷进行备份、恢复，以实现数据的迁移。下面介绍这两个操作。"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"1.备份"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用下面的命令来备份dbdata数据卷容器内的数据卷："}]},{"ID":"20230724014537-ix35z76","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014537-ix35z76","updated":"20230724014537"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run --volumes-from dbdata -v $(pwd):/backup --name worker ubuntu tar cvf /backup/backup.tar /dbdata\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014537-21vcil2","Type":"NodeParagraph","Properties":{"id":"20230724014537-21vcil2","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"这个命令稍微有点复杂，具体分析一下。首先利用ubuntu镜像创建了一个容器worker。使用--volumes-from dbdata参数来让worker容器挂载dbdata容器的数据卷（即dbdata数据卷）；使用-v"}]},{"ID":"20230724014537-kz2483k","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014537-kz2483k","updated":"20230724014537"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$(pwd):/backup参数来挂载本地的当前目录到worker容器的/backup目录。\nworker容器启动后，使用了tar cvf/backup/backup.tar/dbdata命令来将/dbdata下内容备份为容器内的/backup/backup.tar，即宿主主机当前目录下的backup.tar。\n2.恢复\n如果要将数据恢复到一个容器，可以按照下面的步骤操作。首先创建一个带有数据卷的容器dbdata2：\n$ docker run -v /dbdata --name dbdata2 ubuntu /bin/bash\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724014537-r7ngd3r","Type":"NodeParagraph","Properties":{"id":"20230724014537-r7ngd3r","updated":"20230724014537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"然后创建另一个新的容器，挂载dbdata2的容器，并使用untar解压备份文件到所挂载的容器卷中："}]},{"ID":"20230724014537-yl3vr9b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724014537-yl3vr9b","updated":"20230724014537"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"$ docker run --volumes-from dbdata2 -v $(pwd):/backup busybox tar xvf/backup/backup.tar\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}