{"ID":"20230723214116-dz7ga09","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f37a","id":"20230723214116-dz7ga09","tags":"C语言代码,TCP编程","title":"Host 与 IP转换","updated":"20230723214240"},"Children":[{"ID":"20230723214154-xo8ag03","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230723214154-xo8ag03","updated":"20230723214154"},"Children":[{"Type":"NodeText","Data":"gethostbyaddr.c"}]},{"ID":"20230723214154-u87lwsh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230723214154-u87lwsh","updated":"20230723214235"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cunistd.h\u003e\n#include \u003carpa/inet.h\u003e\n#include \u003cnetdb.h\u003e\nvoid error_handling(char *message);\n\nint main(int argc, char *argv[])\n{\n    int i;\n    struct hostent *host;\n    struct sockaddr_in addr;\n    if (argc != 2)\n    {\n        printf(\"Usage : %s \u003cIP\u003e\\n\", argv[0]);\n        exit(1);\n    }\n\n    memset(\u0026addr, 0, sizeof(addr));\n    addr.sin_addr.s_addr = inet_addr(argv[1]);\n    host = gethostbyaddr((char *)\u0026addr.sin_addr, 4, AF_INET);\n    if (!host)\n        error_handling(\"gethost... error\");\n\n    printf(\"Official name: %s \\n\", host-\u003eh_name);\n    for (i = 0; host-\u003eh_aliases[i]; i++)\n        printf(\"Aliases %d:%s \\n\", i + 1, host-\u003eh_aliases[i]);\n    printf(\"Address type: %s \\n\",\n           (host-\u003eh_addrtype == AF_INET) ? \"AF_INET\" : \"AF_INET6\");\n\n    for (i = 0; host-\u003eh_addr_list[i]; i++)\n        printf(\"IP addr %d: %s \\n\", i + 1,\n               inet_ntoa(*(struct in_addr *)host-\u003eh_addr_list[i]));\n\n    return 0;\n}\nvoid error_handling(char *message)\n{\n    fputs(message, stderr);\n    fputc('\\n', stderr);\n    exit(1);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230723214154-hvp43j9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230723214154-hvp43j9","updated":"20230723214154"},"Children":[{"Type":"NodeText","Data":"编译结果"}]},{"ID":"20230723214154-v0snqr8","Type":"NodeParagraph","Properties":{"id":"20230723214154-v0snqr8","updated":"20230723214154"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image-20230426184413918"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:\\Typora%20picture\\image-20230426184413918.png?lastModify=1690119711"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230723214154-9ftzg6g","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230723214154-9ftzg6g","updated":"20230723214154"},"Children":[{"Type":"NodeText","Data":"gethostbyname.c"}]},{"ID":"20230723214154-t5m0l8q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230723214154-t5m0l8q","updated":"20230723214240"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cunistd.h\u003e\n#include \u003carpa/inet.h\u003e\n#include \u003cnetdb.h\u003e\nvoid error_handling(char *message);\n\nint main(int argc, char *argv[])\n{\n    int i;\n    struct hostent *host;\n    if (argc != 2)\n    {\n        printf(\"Usage : %s \u003caddr\u003e\\n\", argv[0]);\n        exit(1);\n    }\n    // 把参数传递给函数，返回结构体\n    host = gethostbyname(argv[1]);\n    if (!host)\n        error_handling(\"get-host... error\");\n    // 输出官方域名\n    printf(\"Official name: %s \\n\", host-\u003eh_name);\n    // Aliases 貌似是解析的 cname 域名？\n    for (i = 0; host-\u003eh_aliases[i]; i++)\n        printf(\"Aliases %d: %s \\n\", i + 1, host-\u003eh_aliases[i]);\n    //看看是不是ipv4\n    printf(\"Address type: %s \\n\",\n           (host-\u003eh_addrtype == AF_INET) ? \"AF_INET\" : \"AF_INET6\");\n    // 输出ip地址信息\n    for (i = 0; host-\u003eh_addr_list[i]; i++)\n        printf(\"IP addr %d: %s \\n\", i + 1,\n               inet_ntoa(*(struct in_addr *)host-\u003eh_addr_list[i]));\n    return 0;\n}\nvoid error_handling(char *message)\n{\n    fputs(message, stderr);\n    fputc('\\n', stderr);\n    exit(1);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230723214154-ti3i7yr","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230723214154-ti3i7yr","updated":"20230723214154"},"Children":[{"Type":"NodeText","Data":"编译结果"}]},{"ID":"20230723214214-23ooigq","Type":"NodeParagraph","Properties":{"id":"20230723214214-23ooigq","updated":"20230723214214"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20230723214214-v0sckcd.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230723214215-tii0o1c","Type":"NodeParagraph","Properties":{"id":"20230723214215-tii0o1c"}}]}