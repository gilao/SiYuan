{"ID":"20230724020918-7cj7bnn","Spec":"1","Type":"NodeDocument","Properties":{"icon":"26f2","id":"20230724020918-7cj7bnn","title":"Dockerfile命令介绍","updated":"20230724020928"},"Children":[{"ID":"20230724020921-9old5x5","Type":"NodeParagraph","Properties":{"id":"20230724020921-9old5x5","updated":"20230724020921"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Dockerfile是Docker用来构建镜像的工具，它包含了一系列指令命令用于构建所需的镜像，并且Docker会按照Dockerfile中的这些指令一步一步地构建镜像。下面是Dockerfile中常见的一些指令命令："}]},{"ID":"20230724020921-7gzajhd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230724020921-7gzajhd","updated":"20230724020921"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"FROM：指定所需要的基础镜像，可以选择官方仓库中提供的镜像或者自定义镜像。\n\nMAINTAINER：用来指定作者的信息，可选。\n\nLABEL：用来指定自定义的元数据，例如描述信息、版本号等。\n\nRUN：在镜像中运行指定的命令。一个Dockerfile可以有多个RUN指令，每个RUN指令都会在新的一层上执行，并将执行结果保存为新的镜像层。\n\nENV：用来设置环境变量，可以在后续的指令中使用。\n\nCOPY/ADD：用来将文件拷贝到镜像中。\n\nEXPOSE：用来指定容器在运行时需要监听的端口号。\n\nWORKDIR：用来指定工作目录。\n\nCMD：指定容器启动时默认运行的命令。一个Dockerfile中只能有一个CMD指令。\n\nENTRYPOINT：类似于CMD指令，指定容器启动时默认运行的命令。不同之处在于，在运行容器时，可以通过docker run的命令行参数来替换ENTRYPOINT指定的命令，而CMD指令则不能。\n\nVOLUME：用来指定容器内部的目录或文件是“卷”，将其挂载到宿主机或其他容器中。\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230724020921-jbo1sxv","Type":"NodeParagraph","Properties":{"id":"20230724020921-jbo1sxv","updated":"20230724020921"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"这些指令命令组合使用在 Dockerfile 中，可以构建出一个完整的Docker镜像，以便用户快速地部署和运行应用程序。"}]}]}