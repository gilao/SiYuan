{"ID":"20230724231019-nhy7ab2","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f4e1","id":"20230724231019-nhy7ab2","tags":"Go 常用库","title":"net-http","updated":"20230724231019"},"Children":[{"ID":"20230724231020-8aji3iu","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231020-8aji3iu","updated":"20230724231020"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"net-http"}]},{"ID":"20230724231021-66m8ulf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231021-66m8ulf","updated":"20230724231021"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"net/http\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231022-a8zn1ti","Type":"NodeParagraph","Properties":{"id":"20230724231022-a8zn1ti","updated":"20230724231022"},"Children":[{"Type":"NodeText","Data":"http包提供了HTTP客户端和服务端的实现。"}]},{"ID":"20230724231023-e4hmecg","Type":"NodeParagraph","Properties":{"id":"20230724231023-e4hmecg","updated":"20230724231023"},"Children":[{"Type":"NodeText","Data":"Get、Head、Post和PostForm函数发出HTTP/ HTTPS请求。"}]},{"ID":"20230724231024-z136urb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231024-z136urb","updated":"20230724231024"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"resp, err := http.Get(\"http://example.com/\")\n...\nresp, err := http.Post(\"http://example.com/upload\", \"image/jpeg\", \u0026buf)\n...\nresp, err := http.PostForm(\"http://example.com/form\",\n\turl.Values{\"key\": {\"Value\"}, \"id\": {\"123\"}})\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231025-pe3brdz","Type":"NodeParagraph","Properties":{"id":"20230724231025-pe3brdz","updated":"20230724231025"},"Children":[{"Type":"NodeText","Data":"程序在使用完回复后必须关闭回复的主体。"}]},{"ID":"20230724231026-e9w4gw8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231026-e9w4gw8","updated":"20230724231026"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"resp, err := http.Get(\"http://example.com/\")\nif err != nil {\n\t// handle error\n}\ndefer resp.Body.Close()\nbody, err := ioutil.ReadAll(resp.Body)\n// ...\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231027-ooh7jfv","Type":"NodeParagraph","Properties":{"id":"20230724231027-ooh7jfv","updated":"20230724231027"},"Children":[{"Type":"NodeText","Data":"要管理HTTP客户端的头域、重定向策略和其他设置，创建一个Client："}]},{"ID":"20230724231028-kf6dmad","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231028-kf6dmad","updated":"20230724231028"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"client := \u0026http.Client{\n\tCheckRedirect: redirectPolicyFunc,\n}\nresp, err := client.Get(\"http://example.com\")\n// ...\nreq, err := http.NewRequest(\"GET\", \"http://example.com\", nil)\n// ...\nreq.Header.Add(\"If-None-Match\", `W/\"wyzzy\"`)\nresp, err := client.Do(req)\n// ...\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231029-lor6lsl","Type":"NodeParagraph","Properties":{"id":"20230724231029-lor6lsl","updated":"20230724231029"},"Children":[{"Type":"NodeText","Data":"要管理代理、TLS配置、keep-alive、压缩和其他设置，创建一个Transport："}]},{"ID":"20230724231030-uk6q4yp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231030-uk6q4yp","updated":"20230724231030"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"tr := \u0026http.Transport{\n\tTLSClientConfig:    \u0026tls.Config{RootCAs: pool},\n\tDisableCompression: true,\n}\nclient := \u0026http.Client{Transport: tr}\nresp, err := client.Get(\"https://example.com\")\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231031-kdteiq8","Type":"NodeParagraph","Properties":{"id":"20230724231031-kdteiq8","updated":"20230724231031"},"Children":[{"Type":"NodeText","Data":"Client和Transport类型都可以安全的被多个go程同时使用。出于效率考虑，应该一次建立、尽量重用。"}]},{"ID":"20230724231032-dmjvjnb","Type":"NodeParagraph","Properties":{"id":"20230724231032-dmjvjnb","updated":"20230724231032"},"Children":[{"Type":"NodeText","Data":"ListenAndServe使用指定的监听地址和处理器启动一个HTTP服务端。处理器参数通常是nil，这表示采用包变量DefaultServeMux作为处理器。Handle和HandleFunc函数可以向DefaultServeMux添加处理器。"}]},{"ID":"20230724231033-alzmgco","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231033-alzmgco","updated":"20230724231033"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"http.Handle(\"/foo\", fooHandler)\nhttp.HandleFunc(\"/bar\", func(w http.ResponseWriter, r *http.Request) {\n\tfmt.Fprintf(w, \"Hello, %q\", html.EscapeString(r.URL.Path))\n})\nlog.Fatal(http.ListenAndServe(\":8080\", nil))\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231034-j89xvc4","Type":"NodeParagraph","Properties":{"id":"20230724231034-j89xvc4","updated":"20230724231034"},"Children":[{"Type":"NodeText","Data":"要管理服务端的行为，可以创建一个自定义的Server："}]},{"ID":"20230724231035-6tz4ae3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231035-6tz4ae3","updated":"20230724231035"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"s := \u0026http.Server{\n\tAddr:           \":8080\",\n\tHandler:        myHandler,\n\tReadTimeout:    10 * time.Second,\n\tWriteTimeout:   10 * time.Second,\n\tMaxHeaderBytes: 1 \u003c\u003c 20,\n}\nlog.Fatal(s.ListenAndServe())\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231036-9odnbqg","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231036-9odnbqg","updated":"20230724231036"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"const"}]},{"ID":"20230724231037-afnd8mh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231037-afnd8mh","updated":"20230724231037"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    StatusContinue           = 100\n    StatusSwitchingProtocols = 101\n    StatusOK                   = 200\n    StatusCreated              = 201\n    StatusAccepted             = 202\n    StatusNonAuthoritativeInfo = 203\n    StatusNoContent            = 204\n    StatusResetContent         = 205\n    StatusPartialContent       = 206\n    StatusMultipleChoices   = 300\n    StatusMovedPermanently  = 301\n    StatusFound             = 302\n    StatusSeeOther          = 303\n    StatusNotModified       = 304\n    StatusUseProxy          = 305\n    StatusTemporaryRedirect = 307\n    StatusBadRequest                   = 400\n    StatusUnauthorized                 = 401\n    StatusPaymentRequired              = 402\n    StatusForbidden                    = 403\n    StatusNotFound                     = 404\n    StatusMethodNotAllowed             = 405\n    StatusNotAcceptable                = 406\n    StatusProxyAuthRequired            = 407\n    StatusRequestTimeout               = 408\n    StatusConflict                     = 409\n    StatusGone                         = 410\n    StatusLengthRequired               = 411\n    StatusPreconditionFailed           = 412\n    StatusRequestEntityTooLarge        = 413\n    StatusRequestURITooLong            = 414\n    StatusUnsupportedMediaType         = 415\n    StatusRequestedRangeNotSatisfiable = 416\n    StatusExpectationFailed            = 417\n    StatusTeapot                       = 418\n    StatusInternalServerError     = 500\n    StatusNotImplemented          = 501\n    StatusBadGateway              = 502\n    StatusServiceUnavailable      = 503\n    StatusGatewayTimeout          = 504\n    StatusHTTPVersionNotSupported = 505\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231038-3y1cxqz","Type":"NodeParagraph","Properties":{"id":"20230724231038-3y1cxqz","updated":"20230724231038"},"Children":[{"Type":"NodeText","Data":"HTTP状态码，参见"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://tools.ietf.org/html/rfc2616","TextMarkTextContent":"RFC 2616"}]},{"ID":"20230724231039-bgro13b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231039-bgro13b","updated":"20230724231039"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const DefaultMaxHeaderBytes = 1 \u003c\u003c 20 // 1 MB\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231040-pzetuou","Type":"NodeParagraph","Properties":{"id":"20230724231040-pzetuou","updated":"20230724231040"},"Children":[{"Type":"NodeText","Data":"DefaultMaxHeaderBytes是HTTP请求的头域最大允许长度。可以通过设置Server.MaxHeaderBytes字段来覆盖。"}]},{"ID":"20230724231041-mu2j5k6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231041-mu2j5k6","updated":"20230724231041"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const DefaultMaxIdleConnsPerHost = 2\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231042-arig0mg","Type":"NodeParagraph","Properties":{"id":"20230724231042-arig0mg","updated":"20230724231042"},"Children":[{"Type":"NodeText","Data":"DefaultMaxIdleConnsPerHost是Transport的MaxIdleConnsPerHost的默认值。"}]},{"ID":"20230724231043-cjrdj12","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231043-cjrdj12","updated":"20230724231043"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const TimeFormat = \"Mon, 02 Jan 2006 15:04:05 GMT\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231044-a2mpvew","Type":"NodeParagraph","Properties":{"id":"20230724231044-a2mpvew","updated":"20230724231044"},"Children":[{"Type":"NodeText","Data":"TimeFormat是当解析或生产HTTP头域中的时间时，用与time.Parse或time.Format函数的时间格式。这种格式类似time.RFC1123但强制采用GMT时区。"}]},{"ID":"20230724231045-9q54ar6","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231045-9q54ar6","updated":"20230724231045"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Variables"}]},{"ID":"20230724231046-jz3c6ks","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231046-jz3c6ks","updated":"20230724231046"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var (\n    ErrHeaderTooLong        = \u0026ProtocolError{\"header too long\"}\n    ErrShortBody            = \u0026ProtocolError{\"entity body too short\"}\n    ErrNotSupported         = \u0026ProtocolError{\"feature not supported\"}\n    ErrUnexpectedTrailer    = \u0026ProtocolError{\"trailer header without chunked transfer encoding\"}\n    ErrMissingContentLength = \u0026ProtocolError{\"missing ContentLength in HEAD response\"}\n    ErrNotMultipart         = \u0026ProtocolError{\"request Content-Type isn't multipart/form-data\"}\n    ErrMissingBoundary      = \u0026ProtocolError{\"no multipart boundary param in Content-Type\"}\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231047-strspx8","Type":"NodeParagraph","Properties":{"id":"20230724231047-strspx8","updated":"20230724231047"},"Children":[{"Type":"NodeText","Data":"HTTP请求的解析错误。"}]},{"ID":"20230724231048-ncqjf7u","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231048-ncqjf7u","updated":"20230724231048"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var (\n    ErrWriteAfterFlush = errors.New(\"Conn.Write called after Flush\")\n    ErrBodyNotAllowed  = errors.New(\"http: request method or response status code does not allow body\")\n    ErrHijacked        = errors.New(\"Conn has been hijacked\")\n    ErrContentLength   = errors.New(\"Conn.Write wrote more than the declared Content-Length\")\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231049-enjdum1","Type":"NodeParagraph","Properties":{"id":"20230724231049-enjdum1","updated":"20230724231049"},"Children":[{"Type":"NodeText","Data":"会被HTTP服务端返回的错误。"}]},{"ID":"20230724231050-gajjzpd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231050-gajjzpd","updated":"20230724231050"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var DefaultClient = \u0026Client{}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231051-oh6r5wp","Type":"NodeParagraph","Properties":{"id":"20230724231051-oh6r5wp","updated":"20230724231051"},"Children":[{"Type":"NodeText","Data":"DefaultClient是用于包函数Get、Head和Post的默认Client。"}]},{"ID":"20230724231052-irrjkaj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231052-irrjkaj","updated":"20230724231052"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var DefaultServeMux = NewServeMux()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231053-86pslas","Type":"NodeParagraph","Properties":{"id":"20230724231053-86pslas","updated":"20230724231053"},"Children":[{"Type":"NodeText","Data":"DefaultServeMux是用于Serve的默认ServeMux。"}]},{"ID":"20230724231054-kw9wd2u","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231054-kw9wd2u","updated":"20230724231054"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var ErrBodyReadAfterClose = errors.New(\"http: invalid Read on closed Body\")\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231055-5f78htj","Type":"NodeParagraph","Properties":{"id":"20230724231055-5f78htj","updated":"20230724231055"},"Children":[{"Type":"NodeText","Data":"在Resquest或Response的Body字段已经关闭后，试图从中读取时，就会返回ErrBodyReadAfterClose。这个错误一般发生在：HTTP处理器中调用完ResponseWriter 接口的WriteHeader或Write后从请求中读取数据的时候。"}]},{"ID":"20230724231056-jcwfocq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231056-jcwfocq","updated":"20230724231056"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var ErrHandlerTimeout = errors.New(\"http: Handler timeout\")\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231057-n1k55rk","Type":"NodeParagraph","Properties":{"id":"20230724231057-n1k55rk","updated":"20230724231057"},"Children":[{"Type":"NodeText","Data":"在处理器超时以后调用ResponseWriter接口的Write方法，就会返回ErrHandlerTimeout。"}]},{"ID":"20230724231058-bobtktm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231058-bobtktm","updated":"20230724231058"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var ErrLineTooLong = errors.New(\"header line too long\")\nvar ErrMissingFile = errors.New(\"http: no such file\")\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231059-jsfsspu","Type":"NodeParagraph","Properties":{"id":"20230724231059-jsfsspu","updated":"20230724231059"},"Children":[{"Type":"NodeText","Data":"当请求中没有提供给FormFile函数的文件字段名，或者该字段名不是文件字段时，该函数就会返回ErrMissingFile。"}]},{"ID":"20230724231060-3wuo1oc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231060-3wuo1oc","updated":"20230724231060"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var ErrNoCookie = errors.New(\"http: named cookie not present\")\nvar ErrNoLocation = errors.New(\"http: no Location header in response\")\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231061-1bwitjf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231061-1bwitjf","updated":"20230724231061"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#38","TextMarkTextContent":"ProtocolError"}]},{"ID":"20230724231062-35e9nfi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231062-35e9nfi","updated":"20230724231062"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ProtocolError struct {\n    ErrorString string\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231063-zxwmzbx","Type":"NodeParagraph","Properties":{"id":"20230724231063-zxwmzbx","updated":"20230724231063"},"Children":[{"Type":"NodeText","Data":"HTTP请求解析错误。"}]},{"ID":"20230724231064-6aeuv7l","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231064-6aeuv7l","updated":"20230724231064"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ProtocolError) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#42","TextMarkTextContent":"Error"}]},{"ID":"20230724231065-uwi045q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231065-uwi045q","updated":"20230724231065"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (err *ProtocolError) Error() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231066-u1f3ngk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231066-u1f3ngk","updated":"20230724231066"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/header.go?name=release#171","TextMarkTextContent":"CanonicalHeaderKey"}]},{"ID":"20230724231067-tga0y0n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231067-tga0y0n","updated":"20230724231067"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func CanonicalHeaderKey(s string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231068-j7whtkz","Type":"NodeParagraph","Properties":{"id":"20230724231068-j7whtkz","updated":"20230724231068"},"Children":[{"Type":"NodeText","Data":"CanonicalHeaderKey函数返回头域（表示为Header类型）的键s的规范化格式。规范化过程中让单词首字母和'-'后的第一个字母大写，其余字母小写。例如，\"accept-encoding\"规范化为\"Accept-Encoding\"。"}]},{"ID":"20230724231069-lyvmtde","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231069-lyvmtde","updated":"20230724231069"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/sniff.go?name=release#21","TextMarkTextContent":"DetectContentType"}]},{"ID":"20230724231070-qbhc6h0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231070-qbhc6h0","updated":"20230724231070"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func DetectContentType(data []byte) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231071-zyx1cvo","Type":"NodeParagraph","Properties":{"id":"20230724231071-zyx1cvo","updated":"20230724231071"},"Children":[{"Type":"NodeText","Data":"DetectContentType函数实现了http://mimesniff.spec.whatwg.org/描述的算法，用于确定数据的Content-Type。函数总是返回一个合法的MIME类型；如果它不能确定数据的类型，将返回\"application/octet-stream\"。它最多检查数据的前512字节。"}]},{"ID":"20230724231072-p8x1ryn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231072-p8x1ryn","updated":"20230724231072"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#448","TextMarkTextContent":"ParseHTTPVersion"}]},{"ID":"20230724231073-ddc3ujj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231073-ddc3ujj","updated":"20230724231073"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ParseHTTPVersion(vers string) (major, minor int, ok bool)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231074-57uc95i","Type":"NodeParagraph","Properties":{"id":"20230724231074-57uc95i","updated":"20230724231074"},"Children":[{"Type":"NodeText","Data":"ParseHTTPVersion解析HTTP版本字符串。如\"HTTP/1.0\"返回(1, 0, true)。"}]},{"ID":"20230724231075-y7ovsly","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231075-y7ovsly","updated":"20230724231075"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/header.go?name=release#79","TextMarkTextContent":"ParseTime"}]},{"ID":"20230724231076-el6hj0l","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231076-el6hj0l","updated":"20230724231076"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ParseTime(text string) (t time.Time, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231077-4m9ym0w","Type":"NodeParagraph","Properties":{"id":"20230724231077-4m9ym0w","updated":"20230724231077"},"Children":[{"Type":"NodeText","Data":"ParseTime用3种格式TimeFormat, time.RFC850和time.ANSIC尝试解析一个时间头的值（如Date: header）。"}]},{"ID":"20230724231078-9i8yj11","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231078-9i8yj11","updated":"20230724231078"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/status.go?name=release#118","TextMarkTextContent":"StatusText"}]},{"ID":"20230724231079-l9125ub","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231079-l9125ub","updated":"20230724231079"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func StatusText(code int) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231080-pe9vg1k","Type":"NodeParagraph","Properties":{"id":"20230724231080-pe9vg1k","updated":"20230724231080"},"Children":[{"Type":"NodeText","Data":"StatusText返回HTTP状态码code对应的文本，如220对应\"OK\"。如果code是未知的状态码，会返回\"\"。"}]},{"ID":"20230724231081-3oj8yxp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231081-3oj8yxp","updated":"20230724231081"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1614","TextMarkTextContent":"ConnState"}]},{"ID":"20230724231082-7r5v5es","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231082-7r5v5es","updated":"20230724231082"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ConnState int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231083-juixj2z","Type":"NodeParagraph","Properties":{"id":"20230724231083-juixj2z","updated":"20230724231083"},"Children":[{"Type":"NodeText","Data":"ConnState代表一个客户端到服务端的连接的状态。本类型用于可选的Server.ConnState回调函数。"}]},{"ID":"20230724231084-ouvvrft","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231084-ouvvrft","updated":"20230724231084"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    // StateNew代表一个新的连接，将要立刻发送请求。\n    // 连接从这个状态开始，然后转变为StateAlive或StateClosed。\n    StateNew ConnState = iota\n    // StateActive代表一个已经读取了请求数据1到多个字节的连接。\n    // 用于StateAlive的Server.ConnState回调函数在将连接交付给处理器之前被触发，\n    // 等到请求被处理完后，Server.ConnState回调函数再次被触发。\n    // 在请求被处理后，连接状态改变为StateClosed、StateHijacked或StateIdle。\n    StateActive\n    // StateIdle代表一个已经处理完了请求、处在闲置状态、等待新请求的连接。\n    // 连接状态可以从StateIdle改变为StateActive或StateClosed。\n    StateIdle\n    // 代表一个被劫持的连接。这是一个终止状态，不会转变为StateClosed。\n    StateHijacked\n    // StateClosed代表一个关闭的连接。\n    // 这是一个终止状态。被劫持的连接不会转变为StateClosed。\n    StateClosed\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231085-66c4q3x","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231085-66c4q3x","updated":"20230724231085"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (ConnState) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1655","TextMarkTextContent":"String"}]},{"ID":"20230724231086-54pttqh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231086-54pttqh","updated":"20230724231086"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c ConnState) String() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231087-29wnsg9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231087-29wnsg9","updated":"20230724231087"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/header.go?name=release#19","TextMarkTextContent":"Header"}]},{"ID":"20230724231088-f2xktij","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231088-f2xktij","updated":"20230724231088"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Header map[string][]string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231089-lryp5su","Type":"NodeParagraph","Properties":{"id":"20230724231089-lryp5su","updated":"20230724231089"},"Children":[{"Type":"NodeText","Data":"Header代表HTTP头域的键值对。"}]},{"ID":"20230724231090-jz3mfcm","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231090-jz3mfcm","updated":"20230724231090"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Header) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/header.go?name=release#38","TextMarkTextContent":"Get"}]},{"ID":"20230724231091-77lyyq5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231091-77lyyq5","updated":"20230724231091"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (h Header) Get(key string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231092-0uivdu4","Type":"NodeParagraph","Properties":{"id":"20230724231092-0uivdu4","updated":"20230724231092"},"Children":[{"Type":"NodeText","Data":"Get返回键对应的第一个值，如果键不存在会返回\"\"。如要获取该键对应的值切片，请直接用规范格式的键访问map。"}]},{"ID":"20230724231093-sk69e62","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231093-sk69e62","updated":"20230724231093"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Header) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/header.go?name=release#30","TextMarkTextContent":"Set"}]},{"ID":"20230724231094-k787ntc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231094-k787ntc","updated":"20230724231094"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (h Header) Set(key, value string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231095-60qyb83","Type":"NodeParagraph","Properties":{"id":"20230724231095-60qyb83","updated":"20230724231095"},"Children":[{"Type":"NodeText","Data":"Set添加键值对到h，如键已存在则会用只有新值一个元素的切片取代旧值切片。"}]},{"ID":"20230724231096-n255yvo","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231096-n255yvo","updated":"20230724231096"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Header) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/header.go?name=release#23","TextMarkTextContent":"Add"}]},{"ID":"20230724231097-5kkqdb1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231097-5kkqdb1","updated":"20230724231097"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (h Header) Add(key, value string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231098-xfe22l1","Type":"NodeParagraph","Properties":{"id":"20230724231098-xfe22l1","updated":"20230724231098"},"Children":[{"Type":"NodeText","Data":"Add添加键值对到h，如键已存在则会将新的值附加到旧值切片后面。"}]},{"ID":"20230724231099-bhtbmig","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231099-bhtbmig","updated":"20230724231099"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Header) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/header.go?name=release#51","TextMarkTextContent":"Del"}]},{"ID":"20230724231100-hv9gdbm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231100-hv9gdbm","updated":"20230724231100"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (h Header) Del(key string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231101-zufee0z","Type":"NodeParagraph","Properties":{"id":"20230724231101-zufee0z","updated":"20230724231101"},"Children":[{"Type":"NodeText","Data":"Del删除键值对。"}]},{"ID":"20230724231102-zahzjyn","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231102-zahzjyn","updated":"20230724231102"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Header) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/header.go?name=release#56","TextMarkTextContent":"Write"}]},{"ID":"20230724231103-rncgsm3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231103-rncgsm3","updated":"20230724231103"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (h Header) Write(w io.Writer) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231104-jk51fhq","Type":"NodeParagraph","Properties":{"id":"20230724231104-jk51fhq","updated":"20230724231104"},"Children":[{"Type":"NodeText","Data":"Write以有线格式将头域写入w。"}]},{"ID":"20230724231105-n7ocva7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231105-n7ocva7","updated":"20230724231105"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Header) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/header.go?name=release#145","TextMarkTextContent":"WriteSubset"}]},{"ID":"20230724231106-yeriry3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231106-yeriry3","updated":"20230724231106"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (h Header) WriteSubset(w io.Writer, exclude map[string]bool) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231107-9f56txv","Type":"NodeParagraph","Properties":{"id":"20230724231107-9f56txv","updated":"20230724231107"},"Children":[{"Type":"NodeText","Data":"WriteSubset以有线格式将头域写入w。当exclude不为nil时，如果h的键值对的键在exclude中存在且其对应值为真，该键值对就不会被写入w。"}]},{"ID":"20230724231108-xcfxzes","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231108-xcfxzes","updated":"20230724231108"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/cookie.go?name=release#23","TextMarkTextContent":"Cookie"}]},{"ID":"20230724231109-v58vf1b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231109-v58vf1b","updated":"20230724231109"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Cookie struct {\n    Name       string\n    Value      string\n    Path       string\n    Domain     string\n    Expires    time.Time\n    RawExpires string\n    // MaxAge=0表示未设置Max-Age属性\n    // MaxAge\u003c0表示立刻删除该cookie，等价于\"Max-Age: 0\"\n    // MaxAge\u003e0表示存在Max-Age属性，单位是秒\n    MaxAge   int\n    Secure   bool\n    HttpOnly bool\n    Raw      string\n    Unparsed []string // 未解析的“属性-值”对的原始文本\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231110-nq1kj1g","Type":"NodeParagraph","Properties":{"id":"20230724231110-nq1kj1g","updated":"20230724231110"},"Children":[{"Type":"NodeText","Data":"Cookie代表一个出现在HTTP回复的头域中Set-Cookie头的值里或者HTTP请求的头域中Cookie头的值里的HTTP cookie。"}]},{"ID":"20230724231111-i4yz9u8","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231111-i4yz9u8","updated":"20230724231111"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Cookie) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/cookie.go?name=release#136","TextMarkTextContent":"String"}]},{"ID":"20230724231112-6f96j3y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231112-6f96j3y","updated":"20230724231112"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Cookie) String() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231113-si0f7kd","Type":"NodeParagraph","Properties":{"id":"20230724231113-si0f7kd","updated":"20230724231113"},"Children":[{"Type":"NodeText","Data":"String返回该cookie的序列化结果。如果只设置了Name和Value字段，序列化结果可用于HTTP请求的Cookie头或者HTTP回复的Set-Cookie头；如果设置了其他字段，序列化结果只能用于HTTP回复的Set-Cookie头。"}]},{"ID":"20230724231114-mkdhevj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231114-mkdhevj","updated":"20230724231114"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/jar.go?name=release#17","TextMarkTextContent":"CookieJar"}]},{"ID":"20230724231115-qojy3sg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231115-qojy3sg","updated":"20230724231115"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type CookieJar interface {\n    // SetCookies管理从u的回复中收到的cookie\n    // 根据其策略和实现，它可以选择是否存储cookie\n    SetCookies(u *url.URL, cookies []*Cookie)\n    // Cookies返回发送请求到u时应使用的cookie\n    // 本方法有责任遵守RFC 6265规定的标准cookie限制\n    Cookies(u *url.URL) []*Cookie\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231116-mjlwy07","Type":"NodeParagraph","Properties":{"id":"20230724231116-mjlwy07","updated":"20230724231116"},"Children":[{"Type":"NodeText","Data":"CookieJar管理cookie的存储和在HTTP请求中的使用。CookieJar的实现必须能安全的被多个go程同时使用。"}]},{"ID":"20230724231117-lzimyr4","Type":"NodeParagraph","Properties":{"id":"20230724231117-lzimyr4","updated":"20230724231117"},"Children":[{"Type":"NodeText","Data":"net/http/cookiejar包提供了一个CookieJar的实现。"}]},{"ID":"20230724231118-ldaijxn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231118-ldaijxn","updated":"20230724231118"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#76","TextMarkTextContent":"Request"}]},{"ID":"20230724231119-zfy9xhb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231119-zfy9xhb","updated":"20230724231119"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Request struct {\n    // Method指定HTTP方法（GET、POST、PUT等）。对客户端，\"\"代表GET。\n    Method string\n    // URL在服务端表示被请求的URI，在客户端表示要访问的URL。\n    //\n    // 在服务端，URL字段是解析请求行的URI（保存在RequestURI字段）得到的，\n    // 对大多数请求来说，除了Path和RawQuery之外的字段都是空字符串。\n    // （参见RFC 2616, Section 5.1.2）\n    //\n    // 在客户端，URL的Host字段指定了要连接的服务器，\n    // 而Request的Host字段（可选地）指定要发送的HTTP请求的Host头的值。\n    URL *url.URL\n    // 接收到的请求的协议版本。本包生产的Request总是使用HTTP/1.1\n    Proto      string // \"HTTP/1.0\"\n    ProtoMajor int    // 1\n    ProtoMinor int    // 0\n    // Header字段用来表示HTTP请求的头域。如果头域（多行键值对格式）为：\n    //\taccept-encoding: gzip, deflate\n    //\tAccept-Language: en-us\n    //\tConnection: keep-alive\n    // 则：\n    //\tHeader = map[string][]string{\n    //\t\t\"Accept-Encoding\": {\"gzip, deflate\"},\n    //\t\t\"Accept-Language\": {\"en-us\"},\n    //\t\t\"Connection\": {\"keep-alive\"},\n    //\t}\n    // HTTP规定头域的键名（头名）是大小写敏感的，请求的解析器通过规范化头域的键名来实现这点。\n    // 在客户端的请求，可能会被自动添加或重写Header中的特定的头，参见Request.Write方法。\n    Header Header\n    // Body是请求的主体。\n    //\n    // 在客户端，如果Body是nil表示该请求没有主体买入GET请求。\n    // Client的Transport字段会负责调用Body的Close方法。\n    //\n    // 在服务端，Body字段总是非nil的；但在没有主体时，读取Body会立刻返回EOF。\n    // Server会关闭请求的主体，ServeHTTP处理器不需要关闭Body字段。\n    Body io.ReadCloser\n    // ContentLength记录相关内容的长度。\n    // 如果为-1，表示长度未知，如果\u003e=0，表示可以从Body字段读取ContentLength字节数据。\n    // 在客户端，如果Body非nil而该字段为0，表示不知道Body的长度。\n    ContentLength int64\n    // TransferEncoding按从最外到最里的顺序列出传输编码，空切片表示\"identity\"编码。\n    // 本字段一般会被忽略。当发送或接受请求时，会自动添加或移除\"chunked\"传输编码。\n    TransferEncoding []string\n    // Close在服务端指定是否在回复请求后关闭连接，在客户端指定是否在发送请求后关闭连接。\n    Close bool\n    // 在服务端，Host指定URL会在其上寻找资源的主机。\n    // 根据RFC 2616，该值可以是Host头的值，或者URL自身提供的主机名。\n    // Host的格式可以是\"host:port\"。\n    //\n    // 在客户端，请求的Host字段（可选地）用来重写请求的Host头。\n    // 如过该字段为\"\"，Request.Write方法会使用URL字段的Host。\n    Host string\n    // Form是解析好的表单数据，包括URL字段的query参数和POST或PUT的表单数据。\n    // 本字段只有在调用ParseForm后才有效。在客户端，会忽略请求中的本字段而使用Body替代。\n    Form url.Values\n    // PostForm是解析好的POST或PUT的表单数据。\n    // 本字段只有在调用ParseForm后才有效。在客户端，会忽略请求中的本字段而使用Body替代。\n    PostForm url.Values\n    // MultipartForm是解析好的多部件表单，包括上传的文件。\n    // 本字段只有在调用ParseMultipartForm后才有效。\n    // 在客户端，会忽略请求中的本字段而使用Body替代。\n    MultipartForm *multipart.Form\n    // Trailer指定了会在请求主体之后发送的额外的头域。\n    //\n    // 在服务端，Trailer字段必须初始化为只有trailer键，所有键都对应nil值。\n    // （客户端会声明哪些trailer会发送）\n    // 在处理器从Body读取时，不能使用本字段。\n    // 在从Body的读取返回EOF后，Trailer字段会被更新完毕并包含非nil的值。\n    // （如果客户端发送了这些键值对），此时才可以访问本字段。\n    //\n    // 在客户端，Trail必须初始化为一个包含将要发送的键值对的映射。（值可以是nil或其终值）\n    // ContentLength字段必须是0或-1，以启用\"chunked\"传输编码发送请求。\n    // 在开始发送请求后，Trailer可以在读取请求主体期间被修改，\n    // 一旦请求主体返回EOF，调用者就不可再修改Trailer。\n    //\n    // 很少有HTTP客户端、服务端或代理支持HTTP trailer。\n    Trailer Header\n    // RemoteAddr允许HTTP服务器和其他软件记录该请求的来源地址，一般用于日志。\n    // 本字段不是ReadRequest函数填写的，也没有定义格式。\n    // 本包的HTTP服务器会在调用处理器之前设置RemoteAddr为\"IP:port\"格式的地址。\n    // 客户端会忽略请求中的RemoteAddr字段。\n    RemoteAddr string\n    // RequestURI是被客户端发送到服务端的请求的请求行中未修改的请求URI\n    // （参见RFC 2616, Section 5.1）\n    // 一般应使用URI字段，在客户端设置请求的本字段会导致错误。\n    RequestURI string\n    // TLS字段允许HTTP服务器和其他软件记录接收到该请求的TLS连接的信息\n    // 本字段不是ReadRequest函数填写的。\n    // 对启用了TLS的连接，本包的HTTP服务器会在调用处理器之前设置TLS字段，否则将设TLS为nil。\n    // 客户端会忽略请求中的TLS字段。\n    TLS *tls.ConnectionState\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231120-8hqqsn3","Type":"NodeParagraph","Properties":{"id":"20230724231120-8hqqsn3","updated":"20230724231120"},"Children":[{"Type":"NodeText","Data":"Request类型代表一个服务端接受到的或者客户端发送出去的HTTP请求。"}]},{"ID":"20230724231121-7fre0bs","Type":"NodeParagraph","Properties":{"id":"20230724231121-7fre0bs","updated":"20230724231121"},"Children":[{"Type":"NodeText","Data":"Request各字段的意义和用途在服务端和客户端是不同的。除了字段本身上方文档，还可参见Request.Write方法和RoundTripper接口的文档。"}]},{"ID":"20230724231122-o5zhdht","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231122-o5zhdht","updated":"20230724231122"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#479","TextMarkTextContent":"NewRequest"}]},{"ID":"20230724231123-8nwrdwf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231123-8nwrdwf","updated":"20230724231123"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewRequest(method, urlStr string, body io.Reader) (*Request, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231124-j9rwec2","Type":"NodeParagraph","Properties":{"id":"20230724231124-j9rwec2","updated":"20230724231124"},"Children":[{"Type":"NodeText","Data":"NewRequest使用指定的方法、网址和可选的主题创建并返回一个新的*Request。"}]},{"ID":"20230724231125-wncpy84","Type":"NodeParagraph","Properties":{"id":"20230724231125-wncpy84","updated":"20230724231125"},"Children":[{"Type":"NodeText","Data":"如果body参数实现了io.Closer接口，Request返回值的Body 字段会被设置为body，并会被Client类型的Do、Post和PostFOrm方法以及Transport.RoundTrip方法关闭。"}]},{"ID":"20230724231126-j3ox9bf","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231126-j3ox9bf","updated":"20230724231126"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#549","TextMarkTextContent":"ReadRequest"}]},{"ID":"20230724231127-0lxzdvj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231127-0lxzdvj","updated":"20230724231127"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ReadRequest(b *bufio.Reader) (req *Request, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231128-u1a018r","Type":"NodeParagraph","Properties":{"id":"20230724231128-u1a018r","updated":"20230724231128"},"Children":[{"Type":"NodeText","Data":"ReadRequest从b读取并解析出一个HTTP请求。（本函数主要用在服务端从下层获取请求）"}]},{"ID":"20230724231129-rl9fmuv","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231129-rl9fmuv","updated":"20230724231129"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#232","TextMarkTextContent":"ProtoAtLeast"}]},{"ID":"20230724231130-oaaqrqe","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231130-oaaqrqe","updated":"20230724231130"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) ProtoAtLeast(major, minor int) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231131-sq4fzul","Type":"NodeParagraph","Properties":{"id":"20230724231131-sq4fzul","updated":"20230724231131"},"Children":[{"Type":"NodeText","Data":"ProtoAtLeast报告该请求使用的HTTP协议版本至少是major.minor。"}]},{"ID":"20230724231132-nvmravs","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231132-nvmravs","updated":"20230724231132"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#238","TextMarkTextContent":"UserAgent"}]},{"ID":"20230724231133-u9lilrw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231133-u9lilrw","updated":"20230724231133"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) UserAgent() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231134-3zlmqml","Type":"NodeParagraph","Properties":{"id":"20230724231134-3zlmqml","updated":"20230724231134"},"Children":[{"Type":"NodeText","Data":"UserAgent返回请求中的客户端用户代理信息（请求的User-Agent头）。"}]},{"ID":"20230724231135-jrrjjg1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231135-jrrjjg1","updated":"20230724231135"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#279","TextMarkTextContent":"Referer"}]},{"ID":"20230724231136-fokjlhi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231136-fokjlhi","updated":"20230724231136"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) Referer() string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231137-7pkilfo","Type":"NodeParagraph","Properties":{"id":"20230724231137-7pkilfo","updated":"20230724231137"},"Children":[{"Type":"NodeText","Data":"Referer返回请求中的访问来路信息。（请求的Referer头）"}]},{"ID":"20230724231138-nf4x17y","Type":"NodeParagraph","Properties":{"id":"20230724231138-nf4x17y","updated":"20230724231138"},"Children":[{"Type":"NodeText","Data":"Referer在请求中就是拼错了的，这是HTTP早期就有的错误。该值也可以从用Header[\"Referer\"]获取； 让获取Referer字段变成方法的好处是，编译器可以诊断使用正确单词拼法的req.Referrer()的程序，但却不能诊断使用Header[\"Referrer\"]的程序。"}]},{"ID":"20230724231139-z5kh39j","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231139-z5kh39j","updated":"20230724231139"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#262","TextMarkTextContent":"AddCookie"}]},{"ID":"20230724231140-ed7exr2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231140-ed7exr2","updated":"20230724231140"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) AddCookie(c *Cookie)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231141-fx0s4tt","Type":"NodeParagraph","Properties":{"id":"20230724231141-fx0s4tt","updated":"20230724231141"},"Children":[{"Type":"NodeText","Data":"AddCookie向请求中添加一个cookie。按照"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://tools.ietf.org/html/rfc6265","TextMarkTextContent":"RFC 6265"},{"Type":"NodeText","Data":" section 5.4的跪地，AddCookie不会添加超过一个Cookie头字段。这表示所有的cookie都写在同一行，用分号分隔（cookie内部用逗号分隔属性）。"}]},{"ID":"20230724231142-4l0fhb5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231142-4l0fhb5","updated":"20230724231142"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#517","TextMarkTextContent":"SetBasicAuth"}]},{"ID":"20230724231143-lp0kcah","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231143-lp0kcah","updated":"20230724231143"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) SetBasicAuth(username, password string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231144-x20ulbl","Type":"NodeParagraph","Properties":{"id":"20230724231144-x20ulbl","updated":"20230724231144"},"Children":[{"Type":"NodeText","Data":"SetBasicAuth使用提供的用户名和密码，采用HTTP基本认证，设置请求的Authorization头。HTTP基本认证会明码传送用户名和密码。"}]},{"ID":"20230724231145-zeihjom","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231145-zeihjom","updated":"20230724231145"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#350","TextMarkTextContent":"Write"}]},{"ID":"20230724231146-ue4mtry","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231146-ue4mtry","updated":"20230724231146"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) Write(w io.Writer) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231147-iqms15u","Type":"NodeParagraph","Properties":{"id":"20230724231147-iqms15u","updated":"20230724231147"},"Children":[{"Type":"NodeText","Data":"Write方法以有线格式将HTTP/1.1请求写入w（用于将请求写入下层TCPConn等）。本方法会考虑请求的如下字段："}]},{"ID":"20230724231148-ht850um","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231148-ht850um","updated":"20230724231148"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Host\nURL\nMethod (defaults to \"GET\")\nHeader\nContentLength\nTransferEncoding\nBody\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231149-r5uqr7j","Type":"NodeParagraph","Properties":{"id":"20230724231149-r5uqr7j","updated":"20230724231149"},"Children":[{"Type":"NodeText","Data":"如果存在Body，ContentLength字段\u003c= 0且TransferEncoding字段未显式设置为[\"identity\"]，Write方法会显式添加\"Transfer-Encoding: chunked\"到请求的头域。Body字段会在发送完请求后关闭。"}]},{"ID":"20230724231150-lxn0wqo","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231150-lxn0wqo","updated":"20230724231150"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#360","TextMarkTextContent":"WriteProxy"}]},{"ID":"20230724231151-afbjvok","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231151-afbjvok","updated":"20230724231151"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) WriteProxy(w io.Writer) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231152-hobq34k","Type":"NodeParagraph","Properties":{"id":"20230724231152-hobq34k","updated":"20230724231152"},"Children":[{"Type":"NodeText","Data":"WriteProxy类似Write但会将请求以HTTP代理期望的格式发送。"}]},{"ID":"20230724231153-ruqnofq","Type":"NodeParagraph","Properties":{"id":"20230724231153-ruqnofq","updated":"20230724231153"},"Children":[{"Type":"NodeText","Data":"尤其是，按照"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://tools.ietf.org/html/rfc2616","TextMarkTextContent":"RFC 2616"},{"Type":"NodeText","Data":" Section 5.1.2，WriteProxy会使用绝对URI（包括协议和主机名）来初始化请求的第1行（Request-URI行）。无论何种情况，WriteProxy都会使用r.Host或r.URL.Host设置Host头。"}]},{"ID":"20230724231154-7v8og1t","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231154-7v8og1t","updated":"20230724231154"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#243","TextMarkTextContent":"Cookies"}]},{"ID":"20230724231155-p6knobv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231155-p6knobv","updated":"20230724231155"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) Cookies() []*Cookie\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231156-6r2qj7m","Type":"NodeParagraph","Properties":{"id":"20230724231156-6r2qj7m","updated":"20230724231156"},"Children":[{"Type":"NodeText","Data":"Cookies解析并返回该请求的Cookie头设置的cookie。"}]},{"ID":"20230724231157-tfmqanr","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231157-tfmqanr","updated":"20230724231157"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#251","TextMarkTextContent":"Cookie"}]},{"ID":"20230724231158-271bsx9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231158-271bsx9","updated":"20230724231158"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) Cookie(name string) (*Cookie, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231159-wo7fmrn","Type":"NodeParagraph","Properties":{"id":"20230724231159-wo7fmrn","updated":"20230724231159"},"Children":[{"Type":"NodeText","Data":"Cookie返回请求中名为name的cookie，如果未找到该cookie会返回nil, ErrNoCookie。"}]},{"ID":"20230724231160-ppb4pm5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231160-ppb4pm5","updated":"20230724231160"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#736","TextMarkTextContent":"ParseForm"}]},{"ID":"20230724231161-pnzd2l6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231161-pnzd2l6","updated":"20230724231161"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) ParseForm() error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231162-29v2igq","Type":"NodeParagraph","Properties":{"id":"20230724231162-29v2igq","updated":"20230724231162"},"Children":[{"Type":"NodeText","Data":"ParseForm解析URL中的查询字符串，并将解析结果更新到r.Form字段。"}]},{"ID":"20230724231163-fwhmq7f","Type":"NodeParagraph","Properties":{"id":"20230724231163-fwhmq7f","updated":"20230724231163"},"Children":[{"Type":"NodeText","Data":"对于POST或PUT请求，ParseForm还会将body当作表单解析，并将结果既更新到r.PostForm也更新到r.Form。解析结果中，POST或PUT请求主体要优先于URL查询字符串（同名变量，主体的值在查询字符串的值前面）。"}]},{"ID":"20230724231164-cr5wl7s","Type":"NodeParagraph","Properties":{"id":"20230724231164-cr5wl7s","updated":"20230724231164"},"Children":[{"Type":"NodeText","Data":"如果请求的主体的大小没有被MaxBytesReader函数设定限制，其大小默认限制为开头10MB。"}]},{"ID":"20230724231165-yse41me","Type":"NodeParagraph","Properties":{"id":"20230724231165-yse41me","updated":"20230724231165"},"Children":[{"Type":"NodeText","Data":"ParseMultipartForm会自动调用ParseForm。重复调用本方法是无意义的。"}]},{"ID":"20230724231166-rttjvr4","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231166-rttjvr4","updated":"20230724231166"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#777","TextMarkTextContent":"ParseMultipartForm"}]},{"ID":"20230724231167-tnw7cim","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231167-tnw7cim","updated":"20230724231167"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) ParseMultipartForm(maxMemory int64) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231168-1zxjhst","Type":"NodeParagraph","Properties":{"id":"20230724231168-1zxjhst","updated":"20230724231168"},"Children":[{"Type":"NodeText","Data":"ParseMultipartForm将请求的主体作为multipart/form-data解析。请求的整个主体都会被解析，得到的文件记录最多maxMemery字节保存在内存，其余部分保存在硬盘的temp文件里。如果必要，ParseMultipartForm会自行调用ParseForm。重复调用本方法是无意义的。"}]},{"ID":"20230724231169-kc5apgz","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231169-kc5apgz","updated":"20230724231169"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#812","TextMarkTextContent":"FormValue"}]},{"ID":"20230724231170-1td84pl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231170-1td84pl","updated":"20230724231170"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) FormValue(key string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231171-8g4dur4","Type":"NodeParagraph","Properties":{"id":"20230724231171-8g4dur4","updated":"20230724231171"},"Children":[{"Type":"NodeText","Data":"FormValue返回key为键查询r.Form字段得到结果[]string切片的第一个值。POST和PUT主体中的同名参数优先于URL查询字符串。如果必要，本函数会隐式调用ParseMultipartForm和ParseForm。"}]},{"ID":"20230724231172-djispn6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231172-djispn6","updated":"20230724231172"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#825","TextMarkTextContent":"PostFormValue"}]},{"ID":"20230724231173-jy4jefk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231173-jy4jefk","updated":"20230724231173"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) PostFormValue(key string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231174-5kapyl9","Type":"NodeParagraph","Properties":{"id":"20230724231174-5kapyl9","updated":"20230724231174"},"Children":[{"Type":"NodeText","Data":"PostFormValue返回key为键查询r.PostForm字段得到结果[]string切片的第一个值。如果必要，本函数会隐式调用ParseMultipartForm和ParseForm。"}]},{"ID":"20230724231175-iy3sat0","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231175-iy3sat0","updated":"20230724231175"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#837","TextMarkTextContent":"FormFile"}]},{"ID":"20230724231176-bkgg5pu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231176-bkgg5pu","updated":"20230724231176"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) FormFile(key string) (multipart.File, *multipart.FileHeader, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231177-xrqft5w","Type":"NodeParagraph","Properties":{"id":"20230724231177-xrqft5w","updated":"20230724231177"},"Children":[{"Type":"NodeText","Data":"FormFile返回以key为键查询r.MultipartForm字段得到结果中的第一个文件和它的信息。如果必要，本函数会隐式调用ParseMultipartForm和ParseForm。查询失败会返回ErrMissingFile错误。"}]},{"ID":"20230724231178-qt8dy0k","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231178-qt8dy0k","updated":"20230724231178"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Request) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#295","TextMarkTextContent":"MultipartReader"}]},{"ID":"20230724231179-2yafr9d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231179-2yafr9d","updated":"20230724231179"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Request) MultipartReader() (*multipart.Reader, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231180-rc44dk6","Type":"NodeParagraph","Properties":{"id":"20230724231180-rc44dk6","updated":"20230724231180"},"Children":[{"Type":"NodeText","Data":"如果请求是multipart/form-data POST请求，MultipartReader返回一个multipart.Reader接口，否则返回nil和一个错误。使用本函数代替ParseMultipartForm，可以将r.Body作为流处理。"}]},{"ID":"20230724231181-3jtfk8c","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231181-3jtfk8c","updated":"20230724231181"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/response.go?name=release#29","TextMarkTextContent":"Response"}]},{"ID":"20230724231182-hu1i539","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231182-hu1i539","updated":"20230724231182"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Response struct {\n    Status     string // 例如\"200 OK\"\n    StatusCode int    // 例如200\n    Proto      string // 例如\"HTTP/1.0\"\n    ProtoMajor int    // 例如1\n    ProtoMinor int    // 例如0\n    // Header保管头域的键值对。\n    // 如果回复中有多个头的键相同，Header中保存为该键对应用逗号分隔串联起来的这些头的值\n    // （参见RFC 2616 Section 4.2）\n    // 被本结构体中的其他字段复制保管的头（如ContentLength）会从Header中删掉。\n    //\n    // Header中的键都是规范化的，参见CanonicalHeaderKey函数\n    Header Header\n    // Body代表回复的主体。\n    // Client类型和Transport类型会保证Body字段总是非nil的，即使回复没有主体或主体长度为0。\n    // 关闭主体是调用者的责任。\n    // 如果服务端采用\"chunked\"传输编码发送的回复，Body字段会自动进行解码。\n    Body io.ReadCloser\n    // ContentLength记录相关内容的长度。\n    // 其值为-1表示长度未知（采用chunked传输编码）\n    // 除非对应的Request.Method是\"HEAD\"，其值\u003e=0表示可以从Body读取的字节数\n    ContentLength int64\n    // TransferEncoding按从最外到最里的顺序列出传输编码，空切片表示\"identity\"编码。\n    TransferEncoding []string\n    // Close记录头域是否指定应在读取完主体后关闭连接。（即Connection头）\n    // 该值是给客户端的建议，Response.Write方法的ReadResponse函数都不会关闭连接。\n    Close bool\n    // Trailer字段保存和头域相同格式的trailer键值对，和Header字段相同类型\n    Trailer Header\n    // Request是用来获取此回复的请求\n    // Request的Body字段是nil（因为已经被用掉了）\n    // 这个字段是被Client类型发出请求并获得回复后填充的\n    Request *Request\n    // TLS包含接收到该回复的TLS连接的信息。 对未加密的回复，本字段为nil。\n    // 返回的指针是被（同一TLS连接接收到的）回复共享的，不应被修改。\n    TLS *tls.ConnectionState\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231183-9y5wz7c","Type":"NodeParagraph","Properties":{"id":"20230724231183-9y5wz7c","updated":"20230724231183"},"Children":[{"Type":"NodeText","Data":"Response代表一个HTTP请求的回复。"}]},{"ID":"20230724231184-9vmirc8","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231184-9vmirc8","updated":"20230724231184"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/response.go?name=release#116","TextMarkTextContent":"ReadResponse"}]},{"ID":"20230724231185-fmcx196","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231185-fmcx196","updated":"20230724231185"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ReadResponse(r *bufio.Reader, req *Request) (*Response, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231186-hsz1otf","Type":"NodeParagraph","Properties":{"id":"20230724231186-hsz1otf","updated":"20230724231186"},"Children":[{"Type":"NodeText","Data":"ReadResponse从r读取并返回一个HTTP 回复。req参数是可选的，指定该回复对应的请求（即是对该请求的回复）。如果是nil，将假设请求是GET请求。客户端必须在结束resp.Body的读取后关闭它。读取完毕并关闭后，客户端可以检查resp.Trailer字段获取回复的trailer的键值对。（本函数主要用在客户端从下层获取回复）"}]},{"ID":"20230724231187-hgc6dj6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231187-hgc6dj6","updated":"20230724231187"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Response) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/response.go?name=release#184","TextMarkTextContent":"ProtoAtLeast"}]},{"ID":"20230724231188-dazwxc0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231188-dazwxc0","updated":"20230724231188"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Response) ProtoAtLeast(major, minor int) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231189-8mxop8i","Type":"NodeParagraph","Properties":{"id":"20230724231189-8mxop8i","updated":"20230724231189"},"Children":[{"Type":"NodeText","Data":"ProtoAtLeast报告该回复使用的HTTP协议版本至少是major.minor。"}]},{"ID":"20230724231190-t1tc4eu","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231190-t1tc4eu","updated":"20230724231190"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Response) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/response.go?name=release#89","TextMarkTextContent":"Cookies"}]},{"ID":"20230724231191-swxxjhi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231191-swxxjhi","updated":"20230724231191"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Response) Cookies() []*Cookie\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231192-mwrom3u","Type":"NodeParagraph","Properties":{"id":"20230724231192-mwrom3u","updated":"20230724231192"},"Children":[{"Type":"NodeText","Data":"Cookies解析并返回该回复中的Set-Cookie头设置的cookie。"}]},{"ID":"20230724231193-o35tqhe","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231193-o35tqhe","updated":"20230724231193"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Response) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/response.go?name=release#99","TextMarkTextContent":"Location"}]},{"ID":"20230724231194-l2kbqze","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231194-l2kbqze","updated":"20230724231194"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Response) Location() (*url.URL, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231195-rfsai8x","Type":"NodeParagraph","Properties":{"id":"20230724231195-rfsai8x","updated":"20230724231195"},"Children":[{"Type":"NodeText","Data":"Location返回该回复的Location头设置的URL。相对地址的重定向会相对于该回复对应的请求来确定绝对地址。如果回复中没有Location头，会返回nil, ErrNoLocation。"}]},{"ID":"20230724231196-7h7xbhn","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231196-7h7xbhn","updated":"20230724231196"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Response) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/response.go?name=release#203","TextMarkTextContent":"Write"}]},{"ID":"20230724231197-9hq3emk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231197-9hq3emk","updated":"20230724231197"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (r *Response) Write(w io.Writer) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231198-kd7fkn8","Type":"NodeParagraph","Properties":{"id":"20230724231198-kd7fkn8","updated":"20230724231198"},"Children":[{"Type":"NodeText","Data":"Write以有线格式将回复写入w（用于将回复写入下层TCPConn等）。本方法会考虑如下字段："}]},{"ID":"20230724231199-511yekt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231199-511yekt","updated":"20230724231199"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"StatusCode\nProtoMajor\nProtoMinor\nRequest.Method\nTransferEncoding\nTrailer\nBody\nContentLength\nHeader（不规范的键名和它对应的值会导致不可预知的行为）\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231200-g9wnlyh","Type":"NodeParagraph","Properties":{"id":"20230724231200-g9wnlyh","updated":"20230724231200"},"Children":[{"Type":"NodeText","Data":"Body字段在发送完回复后会被关闭。"}]},{"ID":"20230724231201-6wznrxl","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231201-6wznrxl","updated":"20230724231201"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#51","TextMarkTextContent":"ResponseWriter"}]},{"ID":"20230724231202-51a4c04","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231202-51a4c04","updated":"20230724231202"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ResponseWriter interface {\n    // Header返回一个Header类型值，该值会被WriteHeader方法发送。\n    // 在调用WriteHeader或Write方法后再改变该对象是没有意义的。\n    Header() Header\n    // WriteHeader该方法发送HTTP回复的头域和状态码。\n    // 如果没有被显式调用，第一次调用Write时会触发隐式调用WriteHeader(http.StatusOK)\n    // WriterHeader的显式调用主要用于发送错误码。\n    WriteHeader(int)\n    // Write向连接中写入作为HTTP的一部分回复的数据。\n    // 如果被调用时还未调用WriteHeader，本方法会先调用WriteHeader(http.StatusOK)\n    // 如果Header中没有\"Content-Type\"键，\n    // 本方法会使用包函数DetectContentType检查数据的前512字节，将返回值作为该键的值。\n    Write([]byte) (int, error)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231203-ouumijx","Type":"NodeParagraph","Properties":{"id":"20230724231203-ouumijx","updated":"20230724231203"},"Children":[{"Type":"NodeText","Data":"ResponseWriter接口被HTTP处理器用于构造HTTP回复。"}]},{"ID":"20230724231204-7ljlvey","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231204-7ljlvey","updated":"20230724231204"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#79","TextMarkTextContent":"Flusher"}]},{"ID":"20230724231205-722m9ga","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231205-722m9ga","updated":"20230724231205"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Flusher interface {\n    // Flush将缓冲中的所有数据发送到客户端\n    Flush()\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231206-y20ftgt","Type":"NodeParagraph","Properties":{"id":"20230724231206-y20ftgt","updated":"20230724231206"},"Children":[{"Type":"NodeText","Data":"HTTP处理器ResponseWriter接口参数的下层如果实现了Flusher接口，可以让HTTP处理器将缓冲中的数据发送到客户端。"}]},{"ID":"20230724231207-xgwwq5e","Type":"NodeParagraph","Properties":{"id":"20230724231207-xgwwq5e","updated":"20230724231207"},"Children":[{"Type":"NodeText","Data":"注意：即使ResponseWriter接口的下层支持Flush方法，如果客户端是通过HTTP代理连接的，缓冲中的数据也可能直到回复完毕才被传输到客户端。"}]},{"ID":"20230724231208-hxcbnva","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231208-hxcbnva","updated":"20230724231208"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#100","TextMarkTextContent":"CloseNotifier"}]},{"ID":"20230724231209-r1xfonz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231209-r1xfonz","updated":"20230724231209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type CloseNotifier interface {\n    // CloseNotify返回一个通道，该通道会在客户端连接丢失时接收到唯一的值\n    CloseNotify() \u003c-chan bool\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231210-byozfhj","Type":"NodeParagraph","Properties":{"id":"20230724231210-byozfhj","updated":"20230724231210"},"Children":[{"Type":"NodeText","Data":"HTTP处理器ResponseWriter接口参数的下层如果实现了CloseNotifier接口，可以让用户检测下层的连接是否停止。如果客户端在回复准备好之前关闭了连接，该机制可以用于取消服务端耗时较长的操作。"}]},{"ID":"20230724231211-u5nvhq0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231211-u5nvhq0","updated":"20230724231211"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#86","TextMarkTextContent":"Hijacker"}]},{"ID":"20230724231212-2eth85e","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231212-2eth85e","updated":"20230724231212"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Hijacker interface {\n    // Hijack让调用者接管连接，返回连接和关联到该连接的一个缓冲读写器。\n    // 调用本方法后，HTTP服务端将不再对连接进行任何操作，\n    // 调用者有责任管理、关闭返回的连接。\n    Hijack() (net.Conn, *bufio.ReadWriter, error)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231213-07qq4bk","Type":"NodeParagraph","Properties":{"id":"20230724231213-07qq4bk","updated":"20230724231213"},"Children":[{"Type":"NodeText","Data":"HTTP处理器ResponseWriter接口参数的下层如果实现了Hijacker接口，可以让HTTP处理器接管该连接。"}]},{"ID":"20230724231214-m3ntkd7","Type":"NodeParagraph","Properties":{"id":"20230724231214-m3ntkd7","updated":"20230724231214"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231215-rr8v365","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231215-rr8v365","updated":"20230724231215"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#82","TextMarkTextContent":"RoundTripper"}]},{"ID":"20230724231216-wdi0f0d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231216-wdi0f0d","updated":"20230724231216"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type RoundTripper interface {\n    // RoundTrip执行单次HTTP事务，接收并发挥请求req的回复。\n    // RoundTrip不应试图解析/修改得到的回复。\n    // 尤其要注意，只要RoundTrip获得了一个回复，不管该回复的HTTP状态码如何，\n    // 它必须将返回值err设置为nil。\n    // 非nil的返回值err应该留给获取回复失败的情况。\n    // 类似的，RoundTrip不能试图管理高层次的细节，如重定向、认证、cookie。\n    //\n    // 除了从请求的主体读取并关闭主体之外，RoundTrip不应修改请求，包括（请求的）错误。\n    // RoundTrip函数接收的请求的URL和Header字段可以保证是（被）初始化了的。\n    RoundTrip(*Request) (*Response, error)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231217-qp6ujjh","Type":"NodeParagraph","Properties":{"id":"20230724231217-qp6ujjh","updated":"20230724231217"},"Children":[{"Type":"NodeText","Data":"RoundTripper接口是具有执行单次HTTP事务的能力（接收指定请求的回复）的接口。"}]},{"ID":"20230724231218-w4gfi3y","Type":"NodeParagraph","Properties":{"id":"20230724231218-w4gfi3y","updated":"20230724231218"},"Children":[{"Type":"NodeText","Data":"RoundTripper接口的类型必须可以安全的被多线程同时使用。"}]},{"ID":"20230724231219-4alqv4l","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231219-4alqv4l","updated":"20230724231219"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/transport.go?name=release#49","TextMarkTextContent":"Transport"}]},{"ID":"20230724231220-f85wmhh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231220-f85wmhh","updated":"20230724231220"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Transport struct {\n    // Proxy指定一个对给定请求返回代理的函数。\n    // 如果该函数返回了非nil的错误值，请求的执行就会中断并返回该错误。\n    // 如果Proxy为nil或返回nil的*URL置，将不使用代理。\n    Proxy func(*Request) (*url.URL, error)\n    // Dial指定创建TCP连接的拨号函数。如果Dial为nil，会使用net.Dial。\n    Dial func(network, addr string) (net.Conn, error)\n    // TLSClientConfig指定用于tls.Client的TLS配置信息。\n    // 如果该字段为nil，会使用默认的配置信息。\n    TLSClientConfig *tls.Config\n    // TLSHandshakeTimeout指定等待TLS握手完成的最长时间。零值表示不设置超时。\n    TLSHandshakeTimeout time.Duration\n    // 如果DisableKeepAlives为真，会禁止不同HTTP请求之间TCP连接的重用。\n    DisableKeepAlives bool\n    // 如果DisableCompression为真，会禁止Transport在请求中没有Accept-Encoding头时，\n    // 主动添加\"Accept-Encoding: gzip\"头，以获取压缩数据。\n    // 如果Transport自己请求gzip并得到了压缩后的回复，它会主动解压缩回复的主体。\n    // 但如果用户显式的请求gzip压缩数据，Transport是不会主动解压缩的。\n    DisableCompression bool\n    // 如果MaxIdleConnsPerHost!=0，会控制每个主机下的最大闲置连接。\n    // 如果MaxIdleConnsPerHost==0，会使用DefaultMaxIdleConnsPerHost。\n    MaxIdleConnsPerHost int\n    // ResponseHeaderTimeout指定在发送完请求（包括其可能的主体）之后，\n    // 等待接收服务端的回复的头域的最大时间。零值表示不设置超时。\n    // 该时间不包括获取回复主体的时间。\n    ResponseHeaderTimeout time.Duration\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231221-t6ybhcq","Type":"NodeParagraph","Properties":{"id":"20230724231221-t6ybhcq","updated":"20230724231221"},"Children":[{"Type":"NodeText","Data":"Transport类型实现了RoundTripper接口，支持http、https和http/https代理。Transport类型可以缓存连接以在未来重用。"}]},{"ID":"20230724231222-rou27sq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231222-rou27sq","updated":"20230724231222"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var DefaultTransport RoundTripper = \u0026Transport{\n    Proxy: ProxyFromEnvironment,\n    Dial: (\u0026net.Dialer{\n        Timeout:   30 * time.Second,\n        KeepAlive: 30 * time.Second,\n    }).Dial,\n    TLSHandshakeTimeout: 10 * time.Second,\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231223-k4dq0q3","Type":"NodeParagraph","Properties":{"id":"20230724231223-k4dq0q3","updated":"20230724231223"},"Children":[{"Type":"NodeText","Data":"DefaultTransport是被包变量DefaultClient使用的默认RoundTripper接口。它会根据需要创建网络连接，并缓存以便在之后的请求中重用这些连接。它使用环境变量"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"inline-math","TextMarkInlineMathContent":"HTTP_PROXY和"},{"Type":"NodeText","Data":"NO_PROXY（或"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"inline-math","TextMarkInlineMathContent":"http_proxy和"},{"Type":"NodeText","Data":"no_proxy）指定的HTTP代理。"}]},{"ID":"20230724231224-pvojf3r","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231224-pvojf3r","updated":"20230724231224"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Transport) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/transport.go?name=release#217","TextMarkTextContent":"RegisterProtocol"}]},{"ID":"20230724231225-cf6ydyq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231225-cf6ydyq","updated":"20230724231225"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (t *Transport) RegisterProtocol(scheme string, rt RoundTripper)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231226-7nlm23q","Type":"NodeParagraph","Properties":{"id":"20230724231226-7nlm23q","updated":"20230724231226"},"Children":[{"Type":"NodeText","Data":"RegisterProtocol注册一个新的名为scheme的协议。t会将使用scheme协议的请求转交给rt。rt有责任模拟HTTP请求的语义。"}]},{"ID":"20230724231227-qv2dpi3","Type":"NodeParagraph","Properties":{"id":"20230724231227-qv2dpi3","updated":"20230724231227"},"Children":[{"Type":"NodeText","Data":"RegisterProtocol可以被其他包用于提供\"ftp\"或\"file\"等协议的实现。"}]},{"ID":"20230724231228-zk7o8ju","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231228-zk7o8ju","updated":"20230724231228"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Transport) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/transport.go?name=release#164","TextMarkTextContent":"RoundTrip"}]},{"ID":"20230724231229-j70df5q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231229-j70df5q","updated":"20230724231229"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (t *Transport) RoundTrip(req *Request) (resp *Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231230-imzy7la","Type":"NodeParagraph","Properties":{"id":"20230724231230-imzy7la","updated":"20230724231230"},"Children":[{"Type":"NodeText","Data":"RoundTrip方法实现了RoundTripper接口。"}]},{"ID":"20230724231231-dw35yse","Type":"NodeParagraph","Properties":{"id":"20230724231231-dw35yse","updated":"20230724231231"},"Children":[{"Type":"NodeText","Data":"高层次的HTTP客户端支持（如管理cookie和重定向）请参见Get、Post等函数和Client类型。"}]},{"ID":"20230724231232-cbv8j1j","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231232-cbv8j1j","updated":"20230724231232"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Transport) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/transport.go?name=release#236","TextMarkTextContent":"CloseIdleConnections"}]},{"ID":"20230724231233-fu38unu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231233-fu38unu","updated":"20230724231233"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (t *Transport) CloseIdleConnections()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231234-4xzm2gh","Type":"NodeParagraph","Properties":{"id":"20230724231234-4xzm2gh","updated":"20230724231234"},"Children":[{"Type":"NodeText","Data":"CloseIdleConnections关闭所有之前的请求建立但目前处于闲置状态的连接。本方法不会中断正在使用的连接。"}]},{"ID":"20230724231235-mcyhnfj","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231235-mcyhnfj","updated":"20230724231235"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Transport) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/transport.go?name=release#251","TextMarkTextContent":"CancelRequest"}]},{"ID":"20230724231236-ue8g3xo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231236-ue8g3xo","updated":"20230724231236"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (t *Transport) CancelRequest(req *Request)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231237-y39wf4u","Type":"NodeParagraph","Properties":{"id":"20230724231237-y39wf4u","updated":"20230724231237"},"Children":[{"Type":"NodeText","Data":"CancelRequest通过关闭请求所在的连接取消一个执行中的请求。"}]},{"ID":"20230724231238-6bmt4r8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231238-6bmt4r8","updated":"20230724231238"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#35","TextMarkTextContent":"Client"}]},{"ID":"20230724231239-xp6iwv1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231239-xp6iwv1","updated":"20230724231239"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Client struct {\n    // Transport指定执行独立、单次HTTP请求的机制。\n    // 如果Transport为nil，则使用DefaultTransport。\n    Transport RoundTripper\n    // CheckRedirect指定处理重定向的策略。\n    // 如果CheckRedirect不为nil，客户端会在执行重定向之前调用本函数字段。\n    // 参数req和via是将要执行的请求和已经执行的请求（切片，越新的请求越靠后）。\n    // 如果CheckRedirect返回一个错误，本类型的Get方法不会发送请求req，\n    // 而是返回之前得到的最后一个回复和该错误。（包装进url.Error类型里）\n    //\n    // 如果CheckRedirect为nil，会采用默认策略：连续10此请求后停止。\n    CheckRedirect func(req *Request, via []*Request) error\n    // Jar指定cookie管理器。\n    // 如果Jar为nil，请求中不会发送cookie，回复中的cookie会被忽略。\n    Jar CookieJar\n    // Timeout指定本类型的值执行请求的时间限制。\n    // 该超时限制包括连接时间、重定向和读取回复主体的时间。\n    // 计时器会在Head、Get、Post或Do方法返回后继续运作并在超时后中断回复主体的读取。\n    //\n    // Timeout为零值表示不设置超时。\n    //\n    // Client实例的Transport字段必须支持CancelRequest方法，\n    // 否则Client会在试图用Head、Get、Post或Do方法执行请求时返回错误。\n    // 本类型的Transport字段默认值（DefaultTransport）支持CancelRequest方法。\n    Timeout time.Duration\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231240-2adtnv6","Type":"NodeParagraph","Properties":{"id":"20230724231240-2adtnv6","updated":"20230724231240"},"Children":[{"Type":"NodeText","Data":"Client类型代表HTTP客户端。它的零值（DefaultClient）是一个可用的使用DefaultTransport的客户端。"}]},{"ID":"20230724231241-jgxcwf1","Type":"NodeParagraph","Properties":{"id":"20230724231241-jgxcwf1","updated":"20230724231241"},"Children":[{"Type":"NodeText","Data":"Client的Transport字段一般会含有内部状态（缓存TCP连接），因此Client类型值应尽量被重用而不是每次需要都创建新的。Client类型值可以安全的被多个go程同时使用。"}]},{"ID":"20230724231242-f8oojwf","Type":"NodeParagraph","Properties":{"id":"20230724231242-f8oojwf","updated":"20230724231242"},"Children":[{"Type":"NodeText","Data":"Client类型的层次比RoundTripper接口（如Transport）高，还会管理HTTP的cookie和重定向等细节。"}]},{"ID":"20230724231243-0hsznx3","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231243-0hsznx3","updated":"20230724231243"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Client) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#148","TextMarkTextContent":"Do"}]},{"ID":"20230724231244-0yj06pn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231244-0yj06pn","updated":"20230724231244"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Client) Do(req *Request) (resp *Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231245-p4yitj7","Type":"NodeParagraph","Properties":{"id":"20230724231245-p4yitj7","updated":"20230724231245"},"Children":[{"Type":"NodeText","Data":"Do方法发送请求，返回HTTP回复。它会遵守客户端c设置的策略（如重定向、cookie、认证）。"}]},{"ID":"20230724231246-u18t4kt","Type":"NodeParagraph","Properties":{"id":"20230724231246-u18t4kt","updated":"20230724231246"},"Children":[{"Type":"NodeText","Data":"如果客户端的策略（如重定向）返回错误或存在HTTP协议错误时，本方法将返回该错误；如果回应的状态码不是2xx，本方法并不会返回错误。"}]},{"ID":"20230724231247-zr74jao","Type":"NodeParagraph","Properties":{"id":"20230724231247-zr74jao","updated":"20230724231247"},"Children":[{"Type":"NodeText","Data":"如果返回值err为nil，resp.Body总是非nil的，调用者应该在读取完resp.Body后关闭它。如果返回值resp的主体未关闭，c下层的RoundTripper接口（一般为Transport类型）可能无法重用resp主体下层保持的TCP连接去执行之后的请求。"}]},{"ID":"20230724231248-gk5rlwe","Type":"NodeParagraph","Properties":{"id":"20230724231248-gk5rlwe","updated":"20230724231248"},"Children":[{"Type":"NodeText","Data":"请求的主体，如果非nil，会在执行后被c.Transport关闭，即使出现错误。"}]},{"ID":"20230724231249-w6cmb26","Type":"NodeParagraph","Properties":{"id":"20230724231249-w6cmb26","updated":"20230724231249"},"Children":[{"Type":"NodeText","Data":"一般应使用Get、Post或PostForm方法代替Do方法。"}]},{"ID":"20230724231250-hhj8m8x","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231250-hhj8m8x","updated":"20230724231250"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Client) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#462","TextMarkTextContent":"Head"}]},{"ID":"20230724231251-xg4uqtc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231251-xg4uqtc","updated":"20230724231251"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Client) Head(url string) (resp *Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231252-k1hjo84","Type":"NodeParagraph","Properties":{"id":"20230724231252-k1hjo84","updated":"20230724231252"},"Children":[{"Type":"NodeText","Data":"Head向指定的URL发出一个HEAD请求，如果回应的状态码如下，Head会在调用c.CheckRedirect后执行重定向："}]},{"ID":"20230724231253-5d9audk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231253-5d9audk","updated":"20230724231253"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"301 (Moved Permanently)\n302 (Found)\n303 (See Other)\n307 (Temporary Redirect)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231254-d4q3fdv","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231254-d4q3fdv","updated":"20230724231254"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Client) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#270","TextMarkTextContent":"Get"}]},{"ID":"20230724231255-zmqzzqv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231255-zmqzzqv","updated":"20230724231255"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Client) Get(url string) (resp *Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231256-mq108q0","Type":"NodeParagraph","Properties":{"id":"20230724231256-mq108q0","updated":"20230724231256"},"Children":[{"Type":"NodeText","Data":"Get向指定的URL发出一个GET请求，如果回应的状态码如下，Get会在调用c.CheckRedirect后执行重定向："}]},{"ID":"20230724231257-giavuhl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231257-giavuhl","updated":"20230724231257"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"301 (Moved Permanently)\n302 (Found)\n303 (See Other)\n307 (Temporary Redirect)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231258-ytmop7u","Type":"NodeParagraph","Properties":{"id":"20230724231258-ytmop7u","updated":"20230724231258"},"Children":[{"Type":"NodeText","Data":"如果c.CheckRedirect执行失败或存在HTTP协议错误时，本方法将返回该错误；如果回应的状态码不是2xx，本方法并不会返回错误。如果返回值err为nil，resp.Body总是非nil的，调用者应该在读取完resp.Body后关闭它。"}]},{"ID":"20230724231259-orkpzr5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231259-orkpzr5","updated":"20230724231259"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Client) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#411","TextMarkTextContent":"Post"}]},{"ID":"20230724231260-ov2w7o1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231260-ov2w7o1","updated":"20230724231260"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Client) Post(url string, bodyType string, body io.Reader) (resp *Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231261-73jt6gv","Type":"NodeParagraph","Properties":{"id":"20230724231261-73jt6gv","updated":"20230724231261"},"Children":[{"Type":"NodeText","Data":"Post向指定的URL发出一个POST请求。bodyType为POST数据的类型， body为POST数据，作为请求的主体。如果参数body实现了io.Closer接口，它会在发送请求后被关闭。调用者有责任在读取完返回值resp的主体后关闭它。"}]},{"ID":"20230724231262-u2dqqrd","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231262-u2dqqrd","updated":"20230724231262"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Client) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#436","TextMarkTextContent":"PostForm"}]},{"ID":"20230724231263-bh0yg6p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231263-bh0yg6p","updated":"20230724231263"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (c *Client) PostForm(url string, data url.Values) (resp *Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231264-91qafeq","Type":"NodeParagraph","Properties":{"id":"20230724231264-91qafeq","updated":"20230724231264"},"Children":[{"Type":"NodeText","Data":"PostForm向指定的URL发出一个POST请求，url.Values类型的data会被编码为请求的主体。POST数据的类型一般会设为\"application/x-www-form-urlencoded\"。如果返回值err为nil，resp.Body总是非nil的，调用者应该在读取完resp.Body后关闭它。"}]},{"ID":"20230724231265-6rqsdve","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231265-6rqsdve","updated":"20230724231265"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#45","TextMarkTextContent":"Handler"}]},{"ID":"20230724231266-7g0t8zm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231266-7g0t8zm","updated":"20230724231266"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Handler interface {\n    ServeHTTP(ResponseWriter, *Request)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231267-9faykcj","Type":"NodeParagraph","Properties":{"id":"20230724231267-9faykcj","updated":"20230724231267"},"Children":[{"Type":"NodeText","Data":"实现了Handler接口的对象可以注册到HTTP服务端，为特定的路径及其子树提供服务。"}]},{"ID":"20230724231268-isqshdb","Type":"NodeParagraph","Properties":{"id":"20230724231268-isqshdb","updated":"20230724231268"},"Children":[{"Type":"NodeText","Data":"ServeHTTP应该将回复的头域和数据写入ResponseWriter接口然后返回。返回标志着该请求已经结束，HTTP服务端可以转移向该连接上的下一个请求。"}]},{"ID":"20230724231269-qva76lf","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231269-qva76lf","updated":"20230724231269"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1253","TextMarkTextContent":"NotFoundHandler"}]},{"ID":"20230724231270-8i9i08z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231270-8i9i08z","updated":"20230724231270"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NotFoundHandler() Handler\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231271-okcrh7w","Type":"NodeParagraph","Properties":{"id":"20230724231271-okcrh7w","updated":"20230724231271"},"Children":[{"Type":"NodeText","Data":"NotFoundHandler返回一个简单的请求处理器，该处理器会对每个请求都回复\"404 page not found\"。"}]},{"ID":"20230724231272-yiun7bs","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231272-yiun7bs","updated":"20230724231272"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1360","TextMarkTextContent":"RedirectHandler"}]},{"ID":"20230724231273-u4umo44","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231273-u4umo44","updated":"20230724231273"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func RedirectHandler(url string, code int) Handler\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231274-5phr0i0","Type":"NodeParagraph","Properties":{"id":"20230724231274-5phr0i0","updated":"20230724231274"},"Children":[{"Type":"NodeText","Data":"RedirectHandler返回一个请求处理器，该处理器会对每个请求都使用状态码code重定向到网址url。"}]},{"ID":"20230724231275-k0bjtcg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231275-k0bjtcg","updated":"20230724231275"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1860","TextMarkTextContent":"TimeoutHandler"}]},{"ID":"20230724231276-1ypbn3m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231276-1ypbn3m","updated":"20230724231276"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func TimeoutHandler(h Handler, dt time.Duration, msg string) Handler\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231277-ptgd5qb","Type":"NodeParagraph","Properties":{"id":"20230724231277-ptgd5qb","updated":"20230724231277"},"Children":[{"Type":"NodeText","Data":"TimeoutHandler返回一个采用指定时间限制的请求处理器。"}]},{"ID":"20230724231278-1tf5484","Type":"NodeParagraph","Properties":{"id":"20230724231278-1tf5484","updated":"20230724231278"},"Children":[{"Type":"NodeText","Data":"返回的Handler会调用h.ServeHTTP去处理每个请求，但如果某一次调用耗时超过了时间限制，该处理器会回复请求状态码503 Service Unavailable，并将msg作为回复的主体（如果msg为空字符串，将发送一个合理的默认信息）。在超时后，h对它的ResponseWriter接口参数的写入操作会返回ErrHandlerTimeout。"}]},{"ID":"20230724231279-04p2npg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231279-04p2npg","updated":"20230724231279"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1260","TextMarkTextContent":"StripPrefix"}]},{"ID":"20230724231280-ezej0r9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231280-ezej0r9","updated":"20230724231280"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func StripPrefix(prefix string, h Handler) Handler\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231281-p9kunek","Type":"NodeParagraph","Properties":{"id":"20230724231281-p9kunek","updated":"20230724231281"},"Children":[{"Type":"NodeText","Data":"StripPrefix返回一个处理器，该处理器会将请求的URL.Path字段中给定前缀prefix去除后再交由h处理。StripPrefix会向URL.Path字段中没有给定前缀的请求回复404 page not found。"}]},{"ID":"20230724231282-yy1ybaq","Type":"NodeParagraph","Properties":{"id":"20230724231282-yy1ybaq","updated":"20230724231282"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231283-ym0n0pv","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231283-ym0n0pv","updated":"20230724231283"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1231","TextMarkTextContent":"HandlerFunc"}]},{"ID":"20230724231284-6d2vk9b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231284-6d2vk9b","updated":"20230724231284"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type HandlerFunc func(ResponseWriter, *Request)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231285-77jnjwl","Type":"NodeParagraph","Properties":{"id":"20230724231285-77jnjwl","updated":"20230724231285"},"Children":[{"Type":"NodeText","Data":"HandlerFunc type是一个适配器，通过类型转换让我们可以将普通的函数作为HTTP处理器使用。如果f是一个具有适当签名的函数，HandlerFunc(f)通过调用f实现了Handler接口。"}]},{"ID":"20230724231286-qvrv3w3","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231286-qvrv3w3","updated":"20230724231286"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (HandlerFunc) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1234","TextMarkTextContent":"ServeHTTP"}]},{"ID":"20230724231287-jygv9s1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231287-jygv9s1","updated":"20230724231287"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (f HandlerFunc) ServeHTTP(w ResponseWriter, r *Request)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231288-lkaamxx","Type":"NodeParagraph","Properties":{"id":"20230724231288-lkaamxx","updated":"20230724231288"},"Children":[{"Type":"NodeText","Data":"ServeHTTP方法会调用f(w, r)"}]},{"ID":"20230724231289-yrmzx3i","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231289-yrmzx3i","updated":"20230724231289"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1391","TextMarkTextContent":"ServeMux"}]},{"ID":"20230724231290-htske7o","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231290-htske7o","updated":"20230724231290"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ServeMux struct {\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231291-tdjnc6d","Type":"NodeParagraph","Properties":{"id":"20230724231291-tdjnc6d","updated":"20230724231291"},"Children":[{"Type":"NodeText","Data":"ServeMux类型是HTTP请求的多路转接器。它会将每一个接收的请求的URL与一个注册模式的列表进行匹配，并调用和URL最匹配的模式的处理器。"}]},{"ID":"20230724231292-eqoxu1t","Type":"NodeParagraph","Properties":{"id":"20230724231292-eqoxu1t","updated":"20230724231292"},"Children":[{"Type":"NodeText","Data":"模式是固定的、由根开始的路径，如\"/favicon.ico\"，或由根开始的子树，如\"/images/\"（注意结尾的斜杠）。较长的模式优先于较短的模式，因此如果模式\"/images/\"和\"/images/thumbnails/\"都注册了处理器，后一个处理器会用于路径以\"/images/thumbnails/\"开始的请求，前一个处理器会接收到其余的路径在\"/images/\"子树下的请求。"}]},{"ID":"20230724231293-kaaqy01","Type":"NodeParagraph","Properties":{"id":"20230724231293-kaaqy01","updated":"20230724231293"},"Children":[{"Type":"NodeText","Data":"注意，因为以斜杠结尾的模式代表一个由根开始的子树，模式\"/\"会匹配所有的未被其他注册的模式匹配的路径，而不仅仅是路径\"/\"。"}]},{"ID":"20230724231294-mpmu3yi","Type":"NodeParagraph","Properties":{"id":"20230724231294-mpmu3yi","updated":"20230724231294"},"Children":[{"Type":"NodeText","Data":"模式也能（可选地）以主机名开始，表示只匹配该主机上的路径。指定主机的模式优先于一般的模式，因此一个注册了两个模式\"/codesearch\"和\"codesearch.google.com/\"的处理器不会接管目标为\"http://www.google.com/\"的请求。"}]},{"ID":"20230724231295-o8f1p87","Type":"NodeParagraph","Properties":{"id":"20230724231295-o8f1p87","updated":"20230724231295"},"Children":[{"Type":"NodeText","Data":"ServeMux还会注意到请求的URL路径的无害化，将任何路径中包含\".\"或\"..\"元素的请求重定向到等价的没有这两种元素的URL。（参见path.Clean函数）"}]},{"ID":"20230724231296-jn5pjjp","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231296-jn5pjjp","updated":"20230724231296"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1404","TextMarkTextContent":"NewServeMux"}]},{"ID":"20230724231297-syrvz8q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231297-syrvz8q","updated":"20230724231297"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewServeMux() *ServeMux\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231298-1s8mpzq","Type":"NodeParagraph","Properties":{"id":"20230724231298-1s8mpzq","updated":"20230724231298"},"Children":[{"Type":"NodeText","Data":"NewServeMux创建并返回一个新的*ServeMux"}]},{"ID":"20230724231299-njgrsvf","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231299-njgrsvf","updated":"20230724231299"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ServeMux) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1516","TextMarkTextContent":"Handle"}]},{"ID":"20230724231300-o0taxt5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231300-o0taxt5","updated":"20230724231300"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (mux *ServeMux) Handle(pattern string, handler Handler)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231301-8l3to9b","Type":"NodeParagraph","Properties":{"id":"20230724231301-8l3to9b","updated":"20230724231301"},"Children":[{"Type":"NodeText","Data":"Handle注册HTTP处理器handler和对应的模式pattern。如果该模式已经注册有一个处理器，Handle会panic。"}]},{"ID":"20230724231302-9jtbbss","Type":"NodeParagraph","Properties":{"id":"20230724231302-9jtbbss","updated":"20230724231302"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231303-isw0ib6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231303-isw0ib6","updated":"20230724231303"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ServeMux) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1554","TextMarkTextContent":"HandleFunc"}]},{"ID":"20230724231304-ir0hkyo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231304-ir0hkyo","updated":"20230724231304"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (mux *ServeMux) HandleFunc(pattern string, handler func(ResponseWriter, *Request))\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231305-dm9mxtm","Type":"NodeParagraph","Properties":{"id":"20230724231305-dm9mxtm","updated":"20230724231305"},"Children":[{"Type":"NodeText","Data":"HandleFunc注册一个处理器函数handler和对应的模式pattern。"}]},{"ID":"20230724231306-1bw9wyy","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231306-1bw9wyy","updated":"20230724231306"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ServeMux) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1468","TextMarkTextContent":"Handler"}]},{"ID":"20230724231307-dfj05xo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231307-dfj05xo","updated":"20230724231307"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (mux *ServeMux) Handler(r *Request) (h Handler, pattern string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231308-fcya3it","Type":"NodeParagraph","Properties":{"id":"20230724231308-fcya3it","updated":"20230724231308"},"Children":[{"Type":"NodeText","Data":"Handler根据r.Method、r.Host和r.URL.Path等数据，返回将用于处理该请求的HTTP处理器。它总是返回一个非nil的处理器。如果路径不是它的规范格式，将返回内建的用于重定向到等价的规范路径的处理器。"}]},{"ID":"20230724231309-8r61xz9","Type":"NodeParagraph","Properties":{"id":"20230724231309-8r61xz9","updated":"20230724231309"},"Children":[{"Type":"NodeText","Data":"Handler也会返回匹配该请求的的已注册模式；在内建重定向处理器的情况下，pattern会在重定向后进行匹配。如果没有已注册模式可以应用于该请求，本方法将返回一个内建的\"404 page not found\"处理器和一个空字符串模式。"}]},{"ID":"20230724231310-8h37a2x","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231310-8h37a2x","updated":"20230724231310"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ServeMux) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1502","TextMarkTextContent":"ServeHTTP"}]},{"ID":"20230724231311-csggoue","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231311-csggoue","updated":"20230724231311"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (mux *ServeMux) ServeHTTP(w ResponseWriter, r *Request)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231312-69xqk2y","Type":"NodeParagraph","Properties":{"id":"20230724231312-69xqk2y","updated":"20230724231312"},"Children":[{"Type":"NodeText","Data":"ServeHTTP将请求派遣到与请求的URL最匹配的模式对应的处理器。"}]},{"ID":"20230724231313-gha0hy1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231313-gha0hy1","updated":"20230724231313"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1581","TextMarkTextContent":"Server"}]},{"ID":"20230724231314-ckrr2hr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231314-ckrr2hr","updated":"20230724231314"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Server struct {\n    Addr           string        // 监听的TCP地址，如果为空字符串会使用\":http\"\n    Handler        Handler       // 调用的处理器，如为nil会调用http.DefaultServeMux\n    ReadTimeout    time.Duration // 请求的读取操作在超时前的最大持续时间\n    WriteTimeout   time.Duration // 回复的写入操作在超时前的最大持续时间\n    MaxHeaderBytes int           // 请求的头域最大长度，如为0则用DefaultMaxHeaderBytes\n    TLSConfig      *tls.Config   // 可选的TLS配置，用于ListenAndServeTLS方法\n    // TLSNextProto（可选地）指定一个函数来在一个NPN型协议升级出现时接管TLS连接的所有权。\n    // 映射的键为商谈的协议名；映射的值为函数，该函数的Handler参数应处理HTTP请求，\n    // 并且初始化Handler.ServeHTTP的*Request参数的TLS和RemoteAddr字段（如果未设置）。\n    // 连接在函数返回时会自动关闭。\n    TLSNextProto map[string]func(*Server, *tls.Conn, Handler)\n    // ConnState字段指定一个可选的回调函数，该函数会在一个与客户端的连接改变状态时被调用。\n    // 参见ConnState类型和相关常数获取细节。\n    ConnState func(net.Conn, ConnState)\n    // ErrorLog指定一个可选的日志记录器，用于记录接收连接时的错误和处理器不正常的行为。\n    // 如果本字段为nil，日志会通过log包的标准日志记录器写入os.Stderr。\n    ErrorLog *log.Logger\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231315-ec4kntz","Type":"NodeParagraph","Properties":{"id":"20230724231315-ec4kntz","updated":"20230724231315"},"Children":[{"Type":"NodeText","Data":"Server类型定义了运行HTTP服务端的参数。Server的零值是合法的配置。"}]},{"ID":"20230724231316-wx29mzn","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231316-wx29mzn","updated":"20230724231316"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1733","TextMarkTextContent":"SetKeepAlivesEnabled"}]},{"ID":"20230724231317-qithlbr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231317-qithlbr","updated":"20230724231317"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (s *Server) SetKeepAlivesEnabled(v bool)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231318-a0t0ssi","Type":"NodeParagraph","Properties":{"id":"20230724231318-a0t0ssi","updated":"20230724231318"},"Children":[{"Type":"NodeText","Data":"SetKeepAlivesEnabled控制是否允许HTTP闲置连接重用（keep-alive）功能。默认该功能总是被启用的。只有资源非常紧张的环境或者服务端在关闭进程中时，才应该关闭该功能。"}]},{"ID":"20230724231319-zenrqcu","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231319-zenrqcu","updated":"20230724231319"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1694","TextMarkTextContent":"Serve"}]},{"ID":"20230724231320-zn5no9o","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231320-zn5no9o","updated":"20230724231320"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (srv *Server) Serve(l net.Listener) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231321-4b94yn9","Type":"NodeParagraph","Properties":{"id":"20230724231321-4b94yn9","updated":"20230724231321"},"Children":[{"Type":"NodeText","Data":"Serve会接手监听器l收到的每一个连接，并为每一个连接创建一个新的服务go程。该go程会读取请求，然后调用srv.Handler回复请求。"}]},{"ID":"20230724231322-2aetqaf","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231322-2aetqaf","updated":"20230724231322"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1679","TextMarkTextContent":"ListenAndServe"}]},{"ID":"20230724231323-lkvzydk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231323-lkvzydk","updated":"20230724231323"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (srv *Server) ListenAndServe() error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231324-nt4i3s3","Type":"NodeParagraph","Properties":{"id":"20230724231324-nt4i3s3","updated":"20230724231324"},"Children":[{"Type":"NodeText","Data":"ListenAndServe监听srv.Addr指定的TCP地址，并且会调用Serve方法接收到的连接。如果srv.Addr为空字符串，会使用\":http\"。"}]},{"ID":"20230724231325-iumch0j","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231325-iumch0j","updated":"20230724231325"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*Server) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1823","TextMarkTextContent":"ListenAndServeTLS"}]},{"ID":"20230724231326-fm3hh12","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231326-fm3hh12","updated":"20230724231326"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (srv *Server) ListenAndServeTLS(certFile, keyFile string) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231327-5jnbz7j","Type":"NodeParagraph","Properties":{"id":"20230724231327-5jnbz7j","updated":"20230724231327"},"Children":[{"Type":"NodeText","Data":"ListenAndServeTLS监听srv.Addr确定的TCP地址，并且会调用Serve方法处理接收到的连接。必须提供证书文件和对应的私钥文件。如果证书是由权威机构签发的，certFile参数必须是顺序串联的服务端证书和CA证书。如果srv.Addr为空字符串，会使用\":https\"。"}]},{"ID":"20230724231328-luo5o8g","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231328-luo5o8g","updated":"20230724231328"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/fs.go?name=release#58","TextMarkTextContent":"File"}]},{"ID":"20230724231329-c72mzxb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231329-c72mzxb","updated":"20230724231329"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type File interface {\n    io.Closer\n    io.Reader\n    Readdir(count int) ([]os.FileInfo, error)\n    Seek(offset int64, whence int) (int64, error)\n    Stat() (os.FileInfo, error)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231330-sicqmwi","Type":"NodeParagraph","Properties":{"id":"20230724231330-sicqmwi","updated":"20230724231330"},"Children":[{"Type":"NodeText","Data":"File是被FileSystem接口的Open方法返回的接口类型，可以被FileServer等函数用于文件访问服务。"}]},{"ID":"20230724231331-4wld8xn","Type":"NodeParagraph","Properties":{"id":"20230724231331-4wld8xn","updated":"20230724231331"},"Children":[{"Type":"NodeText","Data":"该接口的方法的行为应该和*os.File类型的同名方法相同。"}]},{"ID":"20230724231332-8iazw1t","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231332-8iazw1t","updated":"20230724231332"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/fs.go?name=release#50","TextMarkTextContent":"FileSystem"}]},{"ID":"20230724231333-k9wlnn0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231333-k9wlnn0","updated":"20230724231333"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type FileSystem interface {\n    Open(name string) (File, error)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231334-m2oi4ui","Type":"NodeParagraph","Properties":{"id":"20230724231334-m2oi4ui","updated":"20230724231334"},"Children":[{"Type":"NodeText","Data":"FileSystem接口实现了对一系列命名文件的访问。文件路径的分隔符为'/'，不管主机操作系统的惯例如何。"}]},{"ID":"20230724231335-flwboml","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231335-flwboml","updated":"20230724231335"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/fs.go?name=release#29","TextMarkTextContent":"Dir"}]},{"ID":"20230724231336-bbtobgd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231336-bbtobgd","updated":"20230724231336"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type Dir string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231337-rrkktnw","Type":"NodeParagraph","Properties":{"id":"20230724231337-rrkktnw","updated":"20230724231337"},"Children":[{"Type":"NodeText","Data":"Dir使用限制到指定目录树的本地文件系统实现了http.FileSystem接口。空Dir被视为\".\"，即代表当前目录。"}]},{"ID":"20230724231338-ykdrvln","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231338-ykdrvln","updated":"20230724231338"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (Dir) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/fs.go?name=release#31","TextMarkTextContent":"Open"}]},{"ID":"20230724231339-bqn9758","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231339-bqn9758","updated":"20230724231339"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (d Dir) Open(name string) (File, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231340-72ndet5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231340-72ndet5","updated":"20230724231340"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/filetransport.go?name=release#30","TextMarkTextContent":"NewFileTransport"}]},{"ID":"20230724231341-6syfwy4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231341-6syfwy4","updated":"20230724231341"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewFileTransport(fs FileSystem) RoundTripper\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231342-ex1h4om","Type":"NodeParagraph","Properties":{"id":"20230724231342-ex1h4om","updated":"20230724231342"},"Children":[{"Type":"NodeText","Data":"NewFileTransport返回一个RoundTripper接口，使用FileSystem接口fs提供文件访问服务。 返回的RoundTripper接口会忽略接收的请求的URL主机及其他绝大多数属性。"}]},{"ID":"20230724231343-ayzyr4x","Type":"NodeParagraph","Properties":{"id":"20230724231343-ayzyr4x","updated":"20230724231343"},"Children":[{"Type":"NodeText","Data":"NewFileTransport函数的典型使用情况是给Transport类型的值注册\"file\"协议，如下所示："}]},{"ID":"20230724231344-t7tu8yl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231344-t7tu8yl","updated":"20230724231344"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"t := \u0026http.Transport{}\nt.RegisterProtocol(\"file\", http.NewFileTransport(http.Dir(\"/\")))\nc := \u0026http.Client{Transport: t}\nres, err := c.Get(\"file:///etc/passwd\")\n...\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231345-d6s6hsf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231345-d6s6hsf","updated":"20230724231345"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/fs.go?name=release#435","TextMarkTextContent":"FileServer"}]},{"ID":"20230724231346-4b8x0ra","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231346-4b8x0ra","updated":"20230724231346"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func FileServer(root FileSystem) Handler\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231347-7yw5bg3","Type":"NodeParagraph","Properties":{"id":"20230724231347-7yw5bg3","updated":"20230724231347"},"Children":[{"Type":"NodeText","Data":"FileServer返回一个使用FileSystem接口root提供文件访问服务的HTTP处理器。要使用操作系统的FileSystem接口实现，可使用http.Dir："}]},{"ID":"20230724231348-iqj8zjh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231348-iqj8zjh","updated":"20230724231348"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"http.Handle(\"/\", http.FileServer(http.Dir(\"/tmp\")))\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231349-rx05u4l","Type":"NodeParagraph","Properties":{"id":"20230724231349-rx05u4l","updated":"20230724231349"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231350-jxmc4t6","Type":"NodeParagraph","Properties":{"id":"20230724231350-jxmc4t6","updated":"20230724231350"},"Children":[{"Type":"NodeText","Data":"Example (StripPrefix)"}]},{"ID":"20230724231351-n93b1ev","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231351-n93b1ev","updated":"20230724231351"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/transport.go?name=release#140","TextMarkTextContent":"ProxyURL"}]},{"ID":"20230724231352-xze21v8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231352-xze21v8","updated":"20230724231352"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ProxyURL(fixedURL *url.URL) func(*Request) (*url.URL, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231353-3jqgfxd","Type":"NodeParagraph","Properties":{"id":"20230724231353-3jqgfxd","updated":"20230724231353"},"Children":[{"Type":"NodeText","Data":"ProxyURL返回一个代理函数（用于Transport类型），该函数总是返回同一个URL。"}]},{"ID":"20230724231354-fgf2x1i","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231354-fgf2x1i","updated":"20230724231354"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/transport.go?name=release#115","TextMarkTextContent":"ProxyFromEnvironment"}]},{"ID":"20230724231355-tfacngo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231355-tfacngo","updated":"20230724231355"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ProxyFromEnvironment(req *Request) (*url.URL, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231356-rwp86pg","Type":"NodeParagraph","Properties":{"id":"20230724231356-rwp86pg","updated":"20230724231356"},"Children":[{"Type":"NodeText","Data":"ProxyFromEnvironment使用环境变量"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"inline-math","TextMarkInlineMathContent":"HTTP_PROXY和"},{"Type":"NodeText","Data":"NO_PROXY(或"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"inline-math","TextMarkInlineMathContent":"http_proxy和"},{"Type":"NodeText","Data":"no_proxy)的配置返回用于req的代理。如果代理环境不合法将返回错误；如果环境未设定代理或者给定的request不应使用代理时，将返回(nil, nil)；如果req.URL.Host字段是\"localhost\"（可以有端口号，也可以没有），也会返回(nil, nil)。"}]},{"ID":"20230724231357-pp0zxn9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231357-pp0zxn9","updated":"20230724231357"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/cookie.go?name=release#129","TextMarkTextContent":"SetCookie"}]},{"ID":"20230724231358-iba4s1j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231358-iba4s1j","updated":"20230724231358"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func SetCookie(w ResponseWriter, cookie *Cookie)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231359-k0ip79j","Type":"NodeParagraph","Properties":{"id":"20230724231359-k0ip79j","updated":"20230724231359"},"Children":[{"Type":"NodeText","Data":"SetCookie在w的头域中添加Set-Cookie头，该HTTP头的值为cookie。"}]},{"ID":"20230724231360-o33fsio","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231360-o33fsio","updated":"20230724231360"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1276","TextMarkTextContent":"Redirect"}]},{"ID":"20230724231361-a7lhh06","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231361-a7lhh06","updated":"20230724231361"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Redirect(w ResponseWriter, r *Request, urlStr string, code int)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231362-ntv1l58","Type":"NodeParagraph","Properties":{"id":"20230724231362-ntv1l58","updated":"20230724231362"},"Children":[{"Type":"NodeText","Data":"Redirect回复请求一个重定向地址urlStr和状态码code。该重定向地址可以是相对于请求r的相对地址。"}]},{"ID":"20230724231363-2aisf8n","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231363-2aisf8n","updated":"20230724231363"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1249","TextMarkTextContent":"NotFound"}]},{"ID":"20230724231364-5yytjr3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231364-5yytjr3","updated":"20230724231364"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NotFound(w ResponseWriter, r *Request)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231365-1idfrrd","Type":"NodeParagraph","Properties":{"id":"20230724231365-1idfrrd","updated":"20230724231365"},"Children":[{"Type":"NodeText","Data":"NotFound回复请求404状态码（not found：目标未发现）。"}]},{"ID":"20230724231366-1s1r5r9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231366-1s1r5r9","updated":"20230724231366"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1242","TextMarkTextContent":"Error"}]},{"ID":"20230724231367-5jv244v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231367-5jv244v","updated":"20230724231367"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Error(w ResponseWriter, error string, code int)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231368-m8wra20","Type":"NodeParagraph","Properties":{"id":"20230724231368-m8wra20","updated":"20230724231368"},"Children":[{"Type":"NodeText","Data":"Error使用指定的错误信息和状态码回复请求，将数据写入w。错误信息必须是明文。"}]},{"ID":"20230724231369-z6e721u","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231369-z6e721u","updated":"20230724231369"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/fs.go?name=release#113","TextMarkTextContent":"ServeContent"}]},{"ID":"20230724231370-uas99uq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231370-uas99uq","updated":"20230724231370"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ServeContent(w ResponseWriter, req *Request, name string, modtime time.Time, content io.ReadSeeker)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231371-0k1zdf6","Type":"NodeParagraph","Properties":{"id":"20230724231371-0k1zdf6","updated":"20230724231371"},"Children":[{"Type":"NodeText","Data":"ServeContent使用提供的ReadSeeker的内容回复请求。ServeContent比起io.Copy函数的主要优点，是可以处理范围类请求（只要一部分内容）、设置MIME类型，处理If-Modified-Since请求。"}]},{"ID":"20230724231372-am57fk2","Type":"NodeParagraph","Properties":{"id":"20230724231372-am57fk2","updated":"20230724231372"},"Children":[{"Type":"NodeText","Data":"如果未设定回复的Content-Type头，本函数首先会尝试从name的文件扩展名推断数据类型；如果失败，会用读取content的第1块数据并提供给DetectContentType推断类型；之后会设置Content-Type头。参数name不会用于别的地方，甚至于它可以是空字符串，也永远不会发送到回复里。"}]},{"ID":"20230724231373-knx5yjm","Type":"NodeParagraph","Properties":{"id":"20230724231373-knx5yjm","updated":"20230724231373"},"Children":[{"Type":"NodeText","Data":"如果modtime不是Time零值，函数会在回复的头域里设置Last-Modified头。如果请求的头域包含If-Modified-Since头，本函数会使用modtime参数来确定是否应该发送内容。如果调用者设置了w的ETag头，ServeContent会使用它处理包含If-Range头和If-None-Match头的请求。"}]},{"ID":"20230724231374-lncagdc","Type":"NodeParagraph","Properties":{"id":"20230724231374-lncagdc","updated":"20230724231374"},"Children":[{"Type":"NodeText","Data":"参数content的Seek方法必须有效：函数使用Seek来确定它的大小。"}]},{"ID":"20230724231375-bbmsf4b","Type":"NodeParagraph","Properties":{"id":"20230724231375-bbmsf4b","updated":"20230724231375"},"Children":[{"Type":"NodeText","Data":"注意：本包File接口和*os.File类型都实现了io.ReadSeeker接口。"}]},{"ID":"20230724231376-4g7u1bf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231376-4g7u1bf","updated":"20230724231376"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/fs.go?name=release#419","TextMarkTextContent":"ServeFile"}]},{"ID":"20230724231377-huyopl6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231377-huyopl6","updated":"20230724231377"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ServeFile(w ResponseWriter, r *Request, name string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231378-k4qmba4","Type":"NodeParagraph","Properties":{"id":"20230724231378-k4qmba4","updated":"20230724231378"},"Children":[{"Type":"NodeText","Data":"ServeFile回复请求name指定的文件或者目录的内容。"}]},{"ID":"20230724231379-1qo4x35","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231379-1qo4x35","updated":"20230724231379"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/request.go?name=release#637","TextMarkTextContent":"MaxBytesReader"}]},{"ID":"20230724231380-m9n63aj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231380-m9n63aj","updated":"20230724231380"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func MaxBytesReader(w ResponseWriter, r io.ReadCloser, n int64) io.ReadCloser\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231381-ryamtjk","Type":"NodeParagraph","Properties":{"id":"20230724231381-ryamtjk","updated":"20230724231381"},"Children":[{"Type":"NodeText","Data":"MaxBytesReader类似io.LimitReader，但它是用来限制接收到的请求的Body的大小的。不同于io.LimitReader，本函数返回一个ReadCloser，返回值的Read方法在读取的数据超过大小限制时会返回非EOF错误，其Close方法会关闭下层的io.ReadCloser接口r。"}]},{"ID":"20230724231382-fqecoer","Type":"NodeParagraph","Properties":{"id":"20230724231382-fqecoer","updated":"20230724231382"},"Children":[{"Type":"NodeText","Data":"MaxBytesReader预防客户端因为意外或者蓄意发送的“大”请求，以避免尺寸过大的请求浪费服务端资源。"}]},{"ID":"20230724231383-52jj3ha","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231383-52jj3ha","updated":"20230724231383"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#450","TextMarkTextContent":"Head"}]},{"ID":"20230724231384-v7x5dzx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231384-v7x5dzx","updated":"20230724231384"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Head(url string) (resp *Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231385-233mw5z","Type":"NodeParagraph","Properties":{"id":"20230724231385-233mw5z","updated":"20230724231385"},"Children":[{"Type":"NodeText","Data":"Head向指定的URL发出一个HEAD请求，如果回应的状态码如下，Head会在调用c.CheckRedirect后执行重定向："}]},{"ID":"20230724231386-eve6wuu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231386-eve6wuu","updated":"20230724231386"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"301 (Moved Permanently)\n302 (Found)\n303 (See Other)\n307 (Temporary Redirect)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231387-hr6rux9","Type":"NodeParagraph","Properties":{"id":"20230724231387-hr6rux9","updated":"20230724231387"},"Children":[{"Type":"NodeText","Data":"Head是对包变量DefaultClient的Head方法的包装。"}]},{"ID":"20230724231388-lhu4vka","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231388-lhu4vka","updated":"20230724231388"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#251","TextMarkTextContent":"Get"}]},{"ID":"20230724231389-2y4a214","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231389-2y4a214","updated":"20230724231389"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Get(url string) (resp *Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231390-pgsdxnc","Type":"NodeParagraph","Properties":{"id":"20230724231390-pgsdxnc","updated":"20230724231390"},"Children":[{"Type":"NodeText","Data":"Get向指定的URL发出一个GET请求，如果回应的状态码如下，Get会在调用c.CheckRedirect后执行重定向："}]},{"ID":"20230724231391-n74qgfl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231391-n74qgfl","updated":"20230724231391"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"301 (Moved Permanently)\n302 (Found)\n303 (See Other)\n307 (Temporary Redirect)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231392-iwtg7ov","Type":"NodeParagraph","Properties":{"id":"20230724231392-iwtg7ov","updated":"20230724231392"},"Children":[{"Type":"NodeText","Data":"如果c.CheckRedirect执行失败或存在HTTP协议错误时，本方法将返回该错误；如果回应的状态码不是2xx，本方法并不会返回错误。如果返回值err为nil，resp.Body总是非nil的，调用者应该在读取完resp.Body后关闭它。"}]},{"ID":"20230724231393-if16ml3","Type":"NodeParagraph","Properties":{"id":"20230724231393-if16ml3","updated":"20230724231393"},"Children":[{"Type":"NodeText","Data":"Get是对包变量DefaultClient的Get方法的包装。"}]},{"ID":"20230724231394-2l5ghlr","Type":"NodeParagraph","Properties":{"id":"20230724231394-2l5ghlr","updated":"20230724231394"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231395-vczh6od","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231395-vczh6od","updated":"20230724231395"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#401","TextMarkTextContent":"Post"}]},{"ID":"20230724231396-mg4oclg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231396-mg4oclg","updated":"20230724231396"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Post(url string, bodyType string, body io.Reader) (resp *Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231397-rprdvki","Type":"NodeParagraph","Properties":{"id":"20230724231397-rprdvki","updated":"20230724231397"},"Children":[{"Type":"NodeText","Data":"Post向指定的URL发出一个POST请求。bodyType为POST数据的类型， body为POST数据，作为请求的主体。如果参数body实现了io.Closer接口，它会在发送请求后被关闭。调用者有责任在读取完返回值resp的主体后关闭它。"}]},{"ID":"20230724231398-7nd9s5i","Type":"NodeParagraph","Properties":{"id":"20230724231398-7nd9s5i","updated":"20230724231398"},"Children":[{"Type":"NodeText","Data":"Post是对包变量DefaultClient的Post方法的包装。"}]},{"ID":"20230724231399-sje7gpc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231399-sje7gpc","updated":"20230724231399"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/client.go?name=release#427","TextMarkTextContent":"PostForm"}]},{"ID":"20230724231400-ay8m9jw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231400-ay8m9jw","updated":"20230724231400"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func PostForm(url string, data url.Values) (resp *Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231401-kao83ab","Type":"NodeParagraph","Properties":{"id":"20230724231401-kao83ab","updated":"20230724231401"},"Children":[{"Type":"NodeText","Data":"PostForm向指定的URL发出一个POST请求，url.Values类型的data会被编码为请求的主体。如果返回值err为nil，resp.Body总是非nil的，调用者应该在读取完resp.Body后关闭它。"}]},{"ID":"20230724231402-x1wblaa","Type":"NodeParagraph","Properties":{"id":"20230724231402-x1wblaa","updated":"20230724231402"},"Children":[{"Type":"NodeText","Data":"PostForm是对包变量DefaultClient的PostForm方法的包装。"}]},{"ID":"20230724231403-xdayx7r","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231403-xdayx7r","updated":"20230724231403"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1561","TextMarkTextContent":"Handle"}]},{"ID":"20230724231404-k54xp73","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231404-k54xp73","updated":"20230724231404"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Handle(pattern string, handler Handler)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231405-1jjpuxu","Type":"NodeParagraph","Properties":{"id":"20230724231405-1jjpuxu","updated":"20230724231405"},"Children":[{"Type":"NodeText","Data":"Handle注册HTTP处理器handler和对应的模式pattern（注册到DefaultServeMux）。如果该模式已经注册有一个处理器，Handle会panic。ServeMux的文档解释了模式的匹配机制。"}]},{"ID":"20230724231406-jhr5pt9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231406-jhr5pt9","updated":"20230724231406"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1566","TextMarkTextContent":"HandleFunc"}]},{"ID":"20230724231407-hlb6och","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231407-hlb6och","updated":"20230724231407"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func HandleFunc(pattern string, handler func(ResponseWriter, *Request))\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231408-fh2l2ub","Type":"NodeParagraph","Properties":{"id":"20230724231408-fh2l2ub","updated":"20230724231408"},"Children":[{"Type":"NodeText","Data":"HandleFunc注册一个处理器函数handler和对应的模式pattern（注册到DefaultServeMux）。ServeMux的文档解释了模式的匹配机制。"}]},{"ID":"20230724231409-f99pvl1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231409-f99pvl1","updated":"20230724231409"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1574","TextMarkTextContent":"Serve"}]},{"ID":"20230724231410-2953nt6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231410-2953nt6","updated":"20230724231410"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Serve(l net.Listener, handler Handler) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231411-4bzq9sn","Type":"NodeParagraph","Properties":{"id":"20230724231411-4bzq9sn","updated":"20230724231411"},"Children":[{"Type":"NodeText","Data":"Serve会接手监听器l收到的每一个连接，并为每一个连接创建一个新的服务go程。该go程会读取请求，然后调用handler回复请求。handler参数一般会设为nil，此时会使用DefaultServeMux。"}]},{"ID":"20230724231412-w65bn5y","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231412-w65bn5y","updated":"20230724231412"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1776","TextMarkTextContent":"ListenAndServe"}]},{"ID":"20230724231413-uujhopm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231413-uujhopm","updated":"20230724231413"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ListenAndServe(addr string, handler Handler) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231414-psbpovb","Type":"NodeParagraph","Properties":{"id":"20230724231414-psbpovb","updated":"20230724231414"},"Children":[{"Type":"NodeText","Data":"ListenAndServe监听TCP地址addr，并且会使用handler参数调用Serve函数处理接收到的连接。handler参数一般会设为nil，此时会使用DefaultServeMux。"}]},{"ID":"20230724231415-zs2s8dt","Type":"NodeParagraph","Properties":{"id":"20230724231415-zs2s8dt","updated":"20230724231415"},"Children":[{"Type":"NodeText","Data":"一个简单的服务端例子："}]},{"ID":"20230724231416-p7osrjf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231416-p7osrjf","updated":"20230724231416"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package main\nimport (\n\t\"io\"\n\t\"net/http\"\n\t\"log\"\n)\n// hello world, the web server\nfunc HelloServer(w http.ResponseWriter, req *http.Request) {\n\tio.WriteString(w, \"hello, world!\\n\")\n}\nfunc main() {\n\thttp.HandleFunc(\"/hello\", HelloServer)\n\terr := http.ListenAndServe(\":12345\", nil)\n\tif err != nil {\n\t\tlog.Fatal(\"ListenAndServe: \", err)\n\t}\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231417-n0ipz4r","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231417-n0ipz4r","updated":"20230724231417"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/server.go?name=release#1809","TextMarkTextContent":"ListenAndServeTLS"}]},{"ID":"20230724231418-ta2sr2u","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231418-ta2sr2u","updated":"20230724231418"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ListenAndServeTLS(addr string, certFile string, keyFile string, handler Handler) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231419-nfpx31y","Type":"NodeParagraph","Properties":{"id":"20230724231419-nfpx31y","updated":"20230724231419"},"Children":[{"Type":"NodeText","Data":"ListenAndServeTLS函数和ListenAndServe函数的行为基本一致，除了它期望HTTPS连接之外。此外，必须提供证书文件和对应的私钥文件。如果证书是由权威机构签发的，certFile参数必须是顺序串联的服务端证书和CA证书。如果srv.Addr为空字符串，会使用\":https\"。"}]},{"ID":"20230724231420-e9ofjct","Type":"NodeParagraph","Properties":{"id":"20230724231420-e9ofjct","updated":"20230724231420"},"Children":[{"Type":"NodeText","Data":"一个简单的服务端例子："}]},{"ID":"20230724231421-9ypddji","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231421-9ypddji","updated":"20230724231421"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import (\n\t\"log\"\n\t\"net/http\"\n)\nfunc handler(w http.ResponseWriter, req *http.Request) {\n\tw.Header().Set(\"Content-Type\", \"text/plain\")\n\tw.Write([]byte(\"This is an example server.\\n\"))\n}\nfunc main() {\n\thttp.HandleFunc(\"/\", handler)\n\tlog.Printf(\"About to listen on 10443. Go to https://127.0.0.1:10443/\")\n\terr := http.ListenAndServeTLS(\":10443\", \"cert.pem\", \"key.pem\", nil)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231422-skebfyb","Type":"NodeParagraph","Properties":{"id":"20230724231422-skebfyb","updated":"20230724231422"},"Children":[{"Type":"NodeText","Data":"程序员可以使用crypto/tls包的generate_cert.go文件来生成cert.pem和key.pem两个文件。"}]}]}