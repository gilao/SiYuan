{"ID":"20230904210245-p5109ds","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f6b4-200d-2642-fe0f","id":"20230904210245-p5109ds","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230904210245-p5109ds\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230904222751-siwsjzi\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230904231152-j7jl6vy\u0026quot;,\u0026quot;scrollTop\u0026quot;:4696.66650390625,\u0026quot;focusId\u0026quot;:\u0026quot;20230904231152-j7jl6vy\u0026quot;,\u0026quot;focusStart\u0026quot;:4,\u0026quot;focusEnd\u0026quot;:4\u0026#125;","tags":"数组,二分查找","title":"2 二分查找","updated":"20230904231704"},"Children":[{"ID":"20230904222751-siwsjzi","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230904222751-siwsjzi","updated":"20230904222755"},"Children":[{"Type":"NodeText","Data":"题目"}]},{"ID":"20230904222734-a5li90o","Type":"NodeParagraph","Properties":{"id":"20230904222734-a5li90o","updated":"20230904222734"},"Children":[{"Type":"NodeText","Data":"给定一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"n"},{"Type":"NodeText","Data":"​ 个元素有序的（升序）整型数组 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nums"},{"Type":"NodeText","Data":"​ 和一个目标值 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"target"},{"Type":"NodeText","Data":"​  ，写一个函数搜索 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nums"},{"Type":"NodeText","Data":"​ 中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"target"},{"Type":"NodeText","Data":"​，如果目标值存在返回下标，否则返回 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"-1"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20230904222734-r0gkkn5","Type":"NodeParagraph","Properties":{"id":"20230904222734-r0gkkn5","updated":"20230904222734"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"示例 1:"}]},{"ID":"20230904222734-b5o21r0","Type":"NodeHTMLBlock","Data":"\u003cpre\u003e\u003cstrong\u003e输入:\u003c/strong\u003e \u003ccode\u003enums\u003c/code\u003e = [-1,0,3,5,9,12], \u003ccode\u003etarget\u003c/code\u003e = 9\n\u003cstrong\u003e输出:\u003c/strong\u003e 4\n\u003cstrong\u003e解释:\u003c/strong\u003e 9 出现在 \u003ccode\u003enums\u003c/code\u003e 中并且下标为 4\n\u003c/pre\u003e","Properties":{"id":"20230904222734-b5o21r0","updated":"20230904222734"}},{"ID":"20230904222734-wzicfkj","Type":"NodeParagraph","Properties":{"id":"20230904222734-wzicfkj","updated":"20230904222734"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"示例 2:"}]},{"ID":"20230904222734-x6wbgq2","Type":"NodeHTMLBlock","Data":"\u003cpre\u003e\u003cstrong\u003e输入:\u003c/strong\u003e \u003ccode\u003enums\u003c/code\u003e = [-1,0,3,5,9,12], \u003ccode\u003etarget\u003c/code\u003e = 2\n\u003cstrong\u003e输出:\u003c/strong\u003e -1\n\u003cstrong\u003e解释:\u003c/strong\u003e 2 不存在 \u003ccode\u003enums\u003c/code\u003e 中因此返回 -1\u003c/pre\u003e","Properties":{"id":"20230904222734-x6wbgq2","updated":"20230904222734"}},{"ID":"20230904222850-ivb4wmz","Type":"NodeParagraph","Properties":{"id":"20230904222850-ivb4wmz","updated":"20230904222850"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"提示："}]},{"ID":"20230904222850-1liivkf","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20230904222850-1liivkf","updated":"20230904222850"},"Children":[{"ID":"20230904222850-u66logk","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20230904222850-u66logk","updated":"20230904222850"},"Children":[{"ID":"20230904222850-6si11t1","Type":"NodeParagraph","Properties":{"id":"20230904222850-6si11t1","updated":"20230904222850"},"Children":[{"Type":"NodeText","Data":"你可以假设 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nums"},{"Type":"NodeText","Data":"​ 中的所有元素是不重复的。"}]}]},{"ID":"20230904222850-izkhqfp","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20230904222850-izkhqfp","updated":"20230904222850"},"Children":[{"ID":"20230904222850-tr0r1zf","Type":"NodeParagraph","Properties":{"id":"20230904222850-tr0r1zf","updated":"20230904222850"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"n"},{"Type":"NodeText","Data":"​ 将在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"[1, 10000]"},{"Type":"NodeText","Data":"​之间。"}]}]},{"ID":"20230904222850-bd1yimn","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20230904222850-bd1yimn","updated":"20230904222850"},"Children":[{"ID":"20230904222850-wyxsqx8","Type":"NodeParagraph","Properties":{"id":"20230904222850-wyxsqx8","updated":"20230904222850"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nums"},{"Type":"NodeText","Data":"​ 的每个元素都将在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"[-9999, 9999]"},{"Type":"NodeText","Data":"​之间。"}]}]}]},{"ID":"20230904222748-b36158v","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230904222748-b36158v","updated":"20230904222803"},"Children":[{"Type":"NodeText","Data":"思路"}]},{"ID":"20230904222814-5b1hmfj","Type":"NodeParagraph","Properties":{"id":"20230904222814-5b1hmfj","updated":"20230904222910"},"Children":[{"Type":"NodeText","Data":"这道题⽬的前提是数组为"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-info-background); color: var(--b3-card-info-color);"},"TextMarkType":"text","TextMarkTextContent":"有序数组"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-info-background); color: var(--b3-card-info-color);\"}"},{"Type":"NodeText","Data":"，同时题⽬还强调"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-info-background); color: var(--b3-card-info-color);"},"TextMarkType":"text","TextMarkTextContent":"数组中⽆重复元素"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-info-background); color: var(--b3-card-info-color);\"}"},{"Type":"NodeText","Data":"，因为⼀旦有重复元素，使⽤⼆分查找法返回的元素下标可能不是唯⼀的，这些都是使⽤⼆分法的前提条件，当⼤家看到题⽬描述满⾜如上条件的时候，可要想⼀想是不是可以⽤⼆分法了。"}]},{"ID":"20230904223353-6ho3m6m","Type":"NodeParagraph","Properties":{"id":"20230904223353-6ho3m6m"}},{"ID":"20230904223127-5ntk9t0","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230904223127-5ntk9t0","updated":"20230904223314"},"Children":[{"Type":"NodeText","Data":"二分法使用前提"}]},{"ID":"20230904223314-xoc8mi2","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20230904223314-xoc8mi2","updated":"20230904223318"},"Children":[{"ID":"20230904223318-2mvx93m","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20230904223318-2mvx93m","updated":"20230904223318"},"Children":[{"ID":"20230904223318-3jlkw7b","Type":"NodeParagraph","Properties":{"id":"20230904223318-3jlkw7b","updated":"20230904223321"},"Children":[{"Type":"NodeText","Data":"有序数组"}]}]},{"ID":"20230904223321-ty443q7","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20230904223321-ty443q7"},"Children":[{"ID":"20230904223321-4k3sfim","Type":"NodeParagraph","Properties":{"id":"20230904223321-4k3sfim","updated":"20230904223331"},"Children":[{"Type":"NodeText","Data":"数组中无重复元素"}]}]}]},{"ID":"20230904223351-mmij3bb","Type":"NodeParagraph","Properties":{"id":"20230904223351-mmij3bb","updated":"20230904223352"}},{"ID":"20230904223110-3e45bd5","Type":"NodeParagraph","Properties":{"id":"20230904223110-3e45bd5","updated":"20230904223110"},"Children":[{"Type":"NodeText","Data":"⼆分查找涉及的很多的边界条件，逻辑⽐较简单，但就是写不好。例如到底是 while(left \u003c right) 还是while(left \u003c= right) ，到底是 right = middle 呢，还是要 right = middle - 1 呢？"}]},{"ID":"20230904223401-tse1kbv","Type":"NodeParagraph","Properties":{"id":"20230904223401-tse1kbv","updated":"20230904223502"},"Children":[{"Type":"NodeText","Data":"大家写二分法经常写乱，主要是因为对区间的定义没有想清楚，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"区间的定义就是不变量。"}]},{"ID":"20230904223504-4xdkzq6","Type":"NodeParagraph","Properties":{"id":"20230904223504-4xdkzq6","updated":"20230904223706"},"Children":[{"Type":"NodeText","Data":"要在二分查找的过程中保持不变量，就是在for中寻找每一次边界的处理都要坚持根据区间的定义来操作，这就是 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"循环不变量 "},{"Type":"NodeText","Data":"规则。"}]},{"ID":"20230904223709-coi1hv3","Type":"NodeParagraph","Properties":{"id":"20230904223709-coi1hv3","updated":"20230904223838"},"Children":[{"Type":"NodeText","Data":"写二分法，区间的定义一般为两种，左闭右闭即 [left,right]，或者左闭右开即 [left,right)。"}]},{"ID":"20230904223838-378p8zi","Type":"NodeParagraph","Properties":{"id":"20230904223838-378p8zi","updated":"20230904223910"},"Children":[{"Type":"NodeText","Data":"下面分别用这两种区间的定义分别讲解两种不同的二分法："}]},{"ID":"20230904223910-fj5jp8k","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230904223910-fj5jp8k","updated":"20230904224059"},"Children":[{"Type":"NodeText","Data":"二分法 左闭右闭区间"}]},{"ID":"20230904224059-p7ibr8l","Type":"NodeParagraph","Properties":{"id":"20230904224059-p7ibr8l","updated":"20230904224200"},"Children":[{"Type":"NodeText","Data":"第一种写法：我们定义 target 是在一个左闭右闭的区间里，也就是 [left,right]"}]},{"ID":"20230904224203-ytdv84o","Type":"NodeParagraph","Properties":{"id":"20230904224203-ytdv84o","updated":"20230904224344"},"Children":[{"Type":"NodeText","Data":"区间的定义就决定了二分法的代码应该如何写，因为定义 target 在 [left,right]区间，所以有如下两点："}]},{"ID":"20230904224344-0bicie7","Type":"NodeList","ListData":{},"Properties":{"id":"20230904224344-0bicie7","updated":"20230904224346"},"Children":[{"ID":"20230904224346-tjyrkmn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230904224346-tjyrkmn","updated":"20230904224346"},"Children":[{"ID":"20230904224346-v370j4u","Type":"NodeParagraph","Properties":{"id":"20230904224346-v370j4u","updated":"20230904224448"},"Children":[{"Type":"NodeText","Data":"for left \u003c= right : 要使用 \u003c=，因为left == right是有意义的，所以使用 \u003c="}]}]},{"ID":"20230904224450-bn4je3x","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230904224450-bn4je3x"},"Children":[{"ID":"20230904224450-ia1w4xl","Type":"NodeParagraph","Properties":{"id":"20230904224450-ia1w4xl","updated":"20230904224643"},"Children":[{"Type":"NodeText","Data":"if (nums[middle] \u003e target) right 要赋值为 middle-1，因为当前这个nums[middle]一定不是 target，那么接下来要查找的左区间结束下标位置就是 middle -1"}]}]}]},{"ID":"20230904224645-el35tgv","Type":"NodeParagraph","Properties":{"id":"20230904224645-el35tgv","updated":"20230904224654"},"Children":[{"Type":"NodeText","Data":"例如在数组：1,2,3,4,7,9,10中查找元素2，如图所示："}]},{"ID":"20230904224823-4dlu5c4","Type":"NodeParagraph","Properties":{"id":"20230904224823-4dlu5c4","updated":"20230904224823"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20230904224823-mvegthw.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230904224841-c1gcgxy","Type":"NodeParagraph","Properties":{"id":"20230904224841-c1gcgxy","updated":"20230904224858"},"Children":[{"Type":"NodeText","Data":"代码如下："}]},{"ID":"20230904224859-wgqncj7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230904224859-wgqncj7","updated":"20230904225914"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// 左闭右闭\npackage main\n\nimport \"fmt\"\n\n// 二分法\nfunc search(nums []int, target int) int {\n\tleft, right := 0, len(nums)-1 // 定义target在左闭右闭的区间⾥，[left, right]\n\tfor left \u003c= right {           // 当 left == right,区间[left,right]依然有效，所以用\u003c=\n\t\tmiddle := left + (right-left)/2 // 防止溢出，等同于 (left+right)/2\n\n\t\tif nums[middle] \u003e target {\n\t\t\tright = middle - 1 // target在左区间，所以[left,middle-1]\n\t\t} else if nums[middle] \u003c target {\n\t\t\tleft = middle + 1 // target在右区间，所以[middle+1,right]\n\t\t} else { // nums[middle] == target\n\t\t\treturn middle // 数组中找到目标值，直接返回下标\n\t\t}\n\t}\n\t// 未找到目标值\n\treturn -1\n}\n\nfunc main() {\n\tnums := []int{1, 3, 5, 7, 9}\n\ttarget := 5\n\tindex := search(nums, target)\n\tfmt.Println(index) // 输出：2\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230904225948-7dcj5bf","Type":"NodeParagraph","Properties":{"id":"20230904225948-7dcj5bf","updated":"20230904230243"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"时间复杂度： O(log n)，其中n是数组的大小"}]},{"ID":"20230904230225-yr0jiuc","Type":"NodeParagraph","Properties":{"id":"20230904230225-yr0jiuc","updated":"20230904230241"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"空间复杂度：O(1)"}]},{"ID":"20230904230235-l6j0lyi","Type":"NodeParagraph","Properties":{"id":"20230904230235-l6j0lyi"}},{"ID":"20230904230236-8hbuofs","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230904230236-8hbuofs","updated":"20230904230324"},"Children":[{"Type":"NodeText","Data":"二分法 左闭右开"}]},{"ID":"20230904230344-g8vzjpp","Type":"NodeParagraph","Properties":{"id":"20230904230344-g8vzjpp","updated":"20230904230344"},"Children":[{"Type":"NodeText","Data":"如果说定义 target 是在⼀个在左闭右开的区间⾥，也就是[left, right) ，那么⼆分法的边界处理⽅式则截然不同。"}]},{"ID":"20230904230344-9ri0046","Type":"NodeParagraph","Properties":{"id":"20230904230344-9ri0046","updated":"20230904230344"},"Children":[{"Type":"NodeText","Data":"有如下两点："}]},{"ID":"20230904230344-qq44xr0","Type":"NodeList","ListData":{},"Properties":{"id":"20230904230344-qq44xr0","updated":"20230904230408"},"Children":[{"ID":"20230904230349-njp1663","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230904230349-njp1663","updated":"20230904230408"},"Children":[{"ID":"20230904230349-sa45d5o","Type":"NodeParagraph","Properties":{"id":"20230904230349-sa45d5o","updated":"20230904230408"},"Children":[{"Type":"NodeText","Data":"for left\u003cright，这⾥使⽤ \u003c ,因为left == right在区间[left, right)是没有意义的"}]}]}]},{"ID":"20230904230344-d4xgwpw","Type":"NodeList","ListData":{},"Properties":{"id":"20230904230344-d4xgwpw","updated":"20230904230354"},"Children":[{"ID":"20230904230354-qyqc7ri","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230904230354-qyqc7ri","updated":"20230904230354"},"Children":[{"ID":"20230904230354-vw57dbd","Type":"NodeParagraph","Properties":{"id":"20230904230354-vw57dbd","updated":"20230904230354"},"Children":[{"Type":"NodeText","Data":"if (nums[middle] \u003e target) right 更新为 middle，因为当前nums[middle]不等于target，去左区间继续寻找，⽽寻找区间是左闭右开区间，所以right更新为middle，即：下⼀个查询区间不会去⽐较nums[middle]"}]}]}]},{"ID":"20230904230344-ejhrjyn","Type":"NodeParagraph","Properties":{"id":"20230904230344-ejhrjyn","updated":"20230904230344"},"Children":[{"Type":"NodeText","Data":"在数组：1,2,3,4,7,9,10中查找元素2，如图所示：（注意和⽅法⼀的区别）"}]},{"ID":"20230904230605-jwex4xa","Type":"NodeParagraph","Properties":{"id":"20230904230605-jwex4xa","updated":"20230904230605"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20230904230605-rusvnr8.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230904230704-f0m9xht","Type":"NodeParagraph","Properties":{"id":"20230904230704-f0m9xht","updated":"20230904230714"},"Children":[{"Type":"NodeText","Data":"代码如下："}]},{"ID":"20230904230714-ocng3g1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230904230714-ocng3g1","updated":"20230904231104"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func search(nums []int, target int) int {\n\tleft, right := 0, len(nums) // 定义target在左闭右开的区间[left, right)，注意right改为len(nums)\n\n\tfor left \u003c right { // 因为left == right的时候，在[left, right)是无效的空间，所以使用\u003c\n\t\tmiddle := left + ((right - left) \u003e\u003e 1)\n\n\t\tif nums[middle] \u003e target {\n\t\t\tright = middle // target在左区间，在[left, middle)中\n\t\t} else if nums[middle] \u003c target {\n\t\t\tleft = middle + 1 // target在右区间，在[middle+1, right)中\n\t\t} else { // nums[middle] == target\n\t\t\treturn middle // 数组中找到目标值，直接返回下标\n\t\t}\n\t}\n\n\t// 未找到目标值\n\treturn -1\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230904231119-ehd0sgx","Type":"NodeParagraph","Properties":{"id":"20230904231119-ehd0sgx","updated":"20230904231119"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"时间复杂度： O(log n)，其中n是数组的大小"}]},{"ID":"20230904231119-cc708eu","Type":"NodeParagraph","Properties":{"id":"20230904231119-cc708eu","updated":"20230904231119"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"空间复杂度：O(1)"}]},{"ID":"20230904231120-lirhb8i","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230904231120-lirhb8i","updated":"20230904231129"},"Children":[{"Type":"NodeText","Data":"总结"}]},{"ID":"20230904231129-d0a30iv","Type":"NodeParagraph","Properties":{"id":"20230904231129-d0a30iv","updated":"20230904231142"},"Children":[{"Type":"NodeText","Data":"二分法是非常重要的基础算法"}]},{"ID":"20230904231152-dqkkre1","Type":"NodeParagraph","Properties":{"id":"20230904231152-dqkkre1","updated":"20230904231152"},"Children":[{"Type":"NodeText","Data":"其实主要就是对区间的定义没有理解清楚，在循环中没有始终坚持根据查找区间的定义来做边界处理。"}]},{"ID":"20230904231152-b9yxxvi","Type":"NodeParagraph","Properties":{"id":"20230904231152-b9yxxvi","updated":"20230904231152"},"Children":[{"Type":"NodeText","Data":"区间的定义就是不变量，那么在循环中坚持根据查找区间的定义来做边界处理，就是循环不变量规则。"}]},{"ID":"20230904231152-kpcbiye","Type":"NodeParagraph","Properties":{"id":"20230904231152-kpcbiye","updated":"20230904231152"},"Children":[{"Type":"NodeText","Data":"本篇根据两种常⻅的区间定义，给出了两种⼆分法的写法，每⼀个边界为什么这么处理，都根据区间的定义做了详"}]},{"ID":"20230904231152-j7jl6vy","Type":"NodeParagraph","Properties":{"id":"20230904231152-j7jl6vy","updated":"20230904231152"},"Children":[{"Type":"NodeText","Data":"细介绍。"}]},{"ID":"20230904231642-wev3yfh","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230904231642-wev3yfh","updated":"20230904231651"},"Children":[{"Type":"NodeText","Data":"相关题目"}]},{"ID":"20230904231652-otdetdc","Type":"NodeParagraph","Properties":{"id":"20230904231652-otdetdc","updated":"20230904231652"},"Children":[{"Type":"NodeText","Data":"相关题⽬推荐"}]},{"ID":"20230904231652-ked1jsd","Type":"NodeParagraph","Properties":{"id":"20230904231652-ked1jsd","updated":"20230904231704"},"Children":[{"Type":"NodeText","Data":"35.搜索插⼊位置"}]},{"ID":"20230904231652-n0r45q0","Type":"NodeParagraph","Properties":{"id":"20230904231652-n0r45q0","updated":"20230904231652"},"Children":[{"Type":"NodeText","Data":"34.在排序数组中查找元素的第⼀个和最后⼀个位置"}]},{"ID":"20230904231652-ccwtomg","Type":"NodeParagraph","Properties":{"id":"20230904231652-ccwtomg","updated":"20230904231652"},"Children":[{"Type":"NodeText","Data":"69.x 的平⽅根"}]},{"ID":"20230904231652-d340ym1","Type":"NodeParagraph","Properties":{"id":"20230904231652-d340ym1","updated":"20230904231652"},"Children":[{"Type":"NodeText","Data":"367.有效的完全平⽅数"}]},{"ID":"20230904231654-cimciej","Type":"NodeParagraph","Properties":{"id":"20230904231654-cimciej"}}]}