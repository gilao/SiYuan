{"ID":"20240125004951-7k60d82","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240125004951-7k60d82","title":"Redis最佳实践","updated":"20240125005458"},"Children":[{"ID":"20240125004951-rj4qnm5","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240125004951-rj4qnm5","updated":"20240125005155"},"Children":[{"Type":"NodeText","Data":"如何使用Redis更节省内存"}]},{"ID":"20240125005429-hqtoyir","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240125005429-hqtoyir","updated":"20240125005439"},"Children":[{"Type":"NodeText","Data":"1） 控制 key 的长度"}]},{"ID":"20240125005446-e64ugco","Type":"NodeParagraph","Properties":{"id":"20240125005446-e64ugco","updated":"20240125005446"},"Children":[{"Type":"NodeText","Data":"最简单直接的内存优化，就是控制 key 的长度。"}]},{"ID":"20240125005446-406x4zo","Type":"NodeParagraph","Properties":{"id":"20240125005446-406x4zo","updated":"20240125005446"},"Children":[{"Type":"NodeText","Data":"在开发业务时，你需要提前预估整个 Redis 中写入 key 的数量，如果 key 数量达到了百万级别，那么，过长的 key 名也会占用过多的内存空间。"}]},{"ID":"20240125005446-w24dx6g","Type":"NodeParagraph","Properties":{"id":"20240125005446-w24dx6g","updated":"20240125005446"},"Children":[{"Type":"NodeText","Data":"所以，你需要保证 key 在简单、清晰的前提下，尽可能把 key 定义得短一些。"}]},{"ID":"20240125005446-a3dnvhz","Type":"NodeParagraph","Properties":{"id":"20240125005446-a3dnvhz","updated":"20240125005446"},"Children":[{"Type":"NodeText","Data":"例如，原有的 key 为 user📖123，则可以优化为 u:bk:123。"}]},{"ID":"20240125005446-sbb6k15","Type":"NodeParagraph","Properties":{"id":"20240125005446-sbb6k15","updated":"20240125005446"},"Children":[{"Type":"NodeText","Data":"这样一来，你的 Redis 就可以节省大量的内存，这个方案对内存的优化非常直接和高效。"}]},{"ID":"20240125005447-6z6x2q6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240125005447-6z6x2q6","updated":"20240125005458"},"Children":[{"Type":"NodeText","Data":"避免 bigkey"}]},{"ID":"20240125005458-tfn804b","Type":"NodeParagraph","Properties":{"id":"20240125005458-tfn804b","updated":"20240125005458"}}]}