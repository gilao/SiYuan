{"ID":"20231215155641-hl53ht8","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f52d","id":"20231215155641-hl53ht8","tags":"Go 内置函数,公众号-Golang语言开发栈","title":"Go 语言 15 个内置函数详解","updated":"20231215162031"},"Children":[{"ID":"20231215155641-ze4ti0k","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231215155641-ze4ti0k","updated":"20231215155652"},"Children":[{"Type":"NodeText","Data":"介绍"}]},{"ID":"20231215155657-konkcq5","Type":"NodeParagraph","Properties":{"id":"20231215155657-konkcq5","updated":"20231215155657"},"Children":[{"Type":"NodeText","Data":"Go 语言为了方便我们开发，提供了 15 个内置函数，比如 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"len"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"cap"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"make"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"new"},{"Type":"NodeText","Data":"​ 等。"}]},{"ID":"20231215155657-c8v4eux","Type":"NodeParagraph","Properties":{"id":"20231215155657-c8v4eux","updated":"20231215155657"},"Children":[{"Type":"NodeText","Data":"本文我们结合 Go 内置函数官方文档"},{"Type":"NodeTextMark","TextMarkType":"sup","TextMarkTextContent":"[1]"},{"Type":"NodeText","Data":"，介绍一下 Go 语言中的内置函数。"}]},{"ID":"20231215155712-ezrkmxk","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231215155712-ezrkmxk","updated":"20231215161149"},"Children":[{"Type":"NodeText","Data":"内置函数"}]},{"ID":"20231215161150-cf99rd5","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231215161150-cf99rd5","updated":"20231215161202"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"append"},{"Type":"NodeText","Data":"​:"}]},{"ID":"20231215161202-svn9h5n","Type":"NodeParagraph","Properties":{"id":"20231215161202-svn9h5n","updated":"20231215161207"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"append"},{"Type":"NodeText","Data":"​ 可以将元素追加到切片的末尾。"}]},{"ID":"20231215161208-65yljoq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161208-65yljoq","updated":"20231215161214"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func append(slice []Type, elems ...Type) []Type\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215155712-wbicsqh","Type":"NodeParagraph","Properties":{"id":"20231215155712-wbicsqh","updated":"20231215161218"},"Children":[{"Type":"NodeText","Data":"当我们使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"append"},{"Type":"NodeText","Data":"​ 向切片中追加元素时，切片的底层数组必须具有足够的容量，否则，将会分配一个新的底层数组。"}]},{"ID":"20231215161233-iazs4h9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161233-iazs4h9","updated":"20231215161233"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"func main() {\n s := []int{1, 2, 3}\n fmt.Printf(\"%p %d\\n\", s, s)\n s = append(s, 4)\n fmt.Printf(\"%p %d\\n\", s, s)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161233-nmnttau","Type":"NodeParagraph","Properties":{"id":"20231215161233-nmnttau","updated":"20231215161233"},"Children":[{"Type":"NodeText","Data":"输出结果："}]},{"ID":"20231215161233-w5lhhhx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161233-w5lhhhx","updated":"20231215161233"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"0xc0000b2018 [1 2 3]\n0xc0000ae030 [1 2 3 4]\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161233-h487wyo","Type":"NodeParagraph","Properties":{"id":"20231215161233-h487wyo","updated":"20231215161233"},"Children":[{"Type":"NodeText","Data":"所以，我们需要注意的是，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"append"},{"Type":"NodeText","Data":"​ 之后的切片赋值给"},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"同一个变量"},{"Type":"NodeText","Data":"。"}]},{"ID":"20231215161233-cpfd5wm","Type":"NodeParagraph","Properties":{"id":"20231215161233-cpfd5wm","updated":"20231215161233"},"Children":[{"Type":"NodeText","Data":"除了使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"append"},{"Type":"NodeText","Data":"​ 向切片中追加元素之外，我们还可以向切片中追加另一个切片，例如："}]},{"ID":"20231215161233-ybnbii5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161233-ybnbii5","updated":"20231215161233"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"s1 := []int{5, 6, 7}\ns = append(s, s1...)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161233-t58y3sk","Type":"NodeParagraph","Properties":{"id":"20231215161233-t58y3sk","updated":"20231215161233"},"Children":[{"Type":"NodeText","Data":"此外，还可以使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"append"},{"Type":"NodeText","Data":"​ 将字符串追加到字节切片中，例如："}]},{"ID":"20231215161233-9ambft0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161233-9ambft0","updated":"20231215161233"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"str := \"hello \"\nbs := append([]byte(str), \"world\"...)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161302-s442bse","Type":"NodeParagraph","Properties":{"id":"20231215161302-s442bse"}},{"ID":"20231215161308-xs21ckw","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231215161308-xs21ckw","updated":"20231215161320"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"copy"},{"Type":"NodeText","Data":"​："}]},{"ID":"20231215161320-tt1bdst","Type":"NodeParagraph","Properties":{"id":"20231215161320-tt1bdst","updated":"20231215161325"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"copy"},{"Type":"NodeText","Data":"​ 可以将源切片中的元素拷贝到目标切片。"}]},{"ID":"20231215161326-znahs9f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161326-znahs9f","updated":"20231215161330"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"\nfunc main() {\n src := []string{\"go\", \"vue\"}\n dst := make([]string, 2)\n n := copy(dst, src)\n fmt.Printf(\"%s %d\\n\", dst, n)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161339-bcuxj0s","Type":"NodeParagraph","Properties":{"id":"20231215161339-bcuxj0s","updated":"20231215161339"},"Children":[{"Type":"NodeText","Data":"输出结果："}]},{"ID":"20231215161339-9yp83vp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161339-9yp83vp","updated":"20231215161339"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"[go vue] 2\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161339-8cgvsn1","Type":"NodeParagraph","Properties":{"id":"20231215161339-8cgvsn1","updated":"20231215161410"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"copy"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 的返回值是拷贝元素的个数，返回值是 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"len(src)"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"len(dst)"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 的最小值。"}]},{"ID":"20231215161339-iot61sr","Type":"NodeParagraph","Properties":{"id":"20231215161339-iot61sr","updated":"20231215161339"},"Children":[{"Type":"NodeText","Data":"需要注意的是，源切片和目标切片中的元素可能会重叠。"}]},{"ID":"20231215161339-w33dmd3","Type":"NodeParagraph","Properties":{"id":"20231215161339-w33dmd3","updated":"20231215161420"},"Children":[{"Type":"NodeText","Data":"此外，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"还可以使用 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"copy"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 将一个字符串中的字节拷贝到一个字节切片中"},{"Type":"NodeText","Data":"，例如："}]},{"ID":"20231215161719-86eupgn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161719-86eupgn","updated":"20231215161725"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main() {\n str := \"hello\"\n bs := make([]byte, 5)\n n := copy(bs, str)\n fmt.Printf(\"%s %d\\n\", bs, n)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161732-8sjeeus","Type":"NodeParagraph","Properties":{"id":"20231215161732-8sjeeus","updated":"20231215161732"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数"},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"delete"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161732-xhs4mpv","Type":"NodeParagraph","Properties":{"id":"20231215161732-xhs4mpv","updated":"20231215161859"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"delete"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 通过指定键 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"m[key]"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 删除 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"map"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 中的元素。"}]},{"ID":"20231215161732-7e2awfu","Type":"NodeParagraph","Properties":{"id":"20231215161732-7e2awfu","updated":"20231215161857"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"map"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 是 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"nil"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 或没有元素，"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"delete"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 不做任何操作。"}]},{"ID":"20231215161733-9oxbfz3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161733-9oxbfz3","updated":"20231215161741"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main() {\n var m map[int]string\n fmt.Println(m)\n delete(m, 0)\n fmt.Println(m)\n m1 := make(map[int]string)\n fmt.Println(m1)\n delete(m1, 0)\n fmt.Println(m1)\n m2 := make(map[int]string, 2)\n m2[0] = \"hello\"\n m2[1] = \"world\"\n fmt.Println(m2)\n delete(m2, 0)\n fmt.Println(m2)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161841-gqsn9a7","Type":"NodeParagraph","Properties":{"id":"20231215161841-gqsn9a7","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"输出结果："}]},{"ID":"20231215161841-rga71nq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161841-rga71nq","updated":"20231215161841"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"map[]\nmap[]\nmap[]\nmap[]\nmap[0:hello 1:world]\nmap[1:world]\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161841-e22batc","Type":"NodeParagraph","Properties":{"id":"20231215161841-e22batc","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"len"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-pz67nwl","Type":"NodeParagraph","Properties":{"id":"20231215161841-pz67nwl","updated":"20231215161908"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"len"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 返回值的长度，值的类型不同，值的长度含义也不同。"}]},{"ID":"20231215161841-l8kv03t","Type":"NodeList","ListData":{},"Properties":{"id":"20231215161841-l8kv03t","updated":"20231215161934"},"Children":[{"ID":"20231215161841-idrywg6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-idrywg6","updated":"20231215161923"},"Children":[{"ID":"20231215161841-yozz38a","Type":"NodeParagraph","Properties":{"id":"20231215161841-yozz38a","updated":"20231215161923"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"array"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 数组中元素的个数。"}]}]},{"ID":"20231215161841-vutg6y4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-vutg6y4","updated":"20231215161930"},"Children":[{"ID":"20231215161841-c9nu48m","Type":"NodeParagraph","Properties":{"id":"20231215161841-c9nu48m","updated":"20231215161930"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"*array"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 数组指针中元素的个数，即使数组指针的值是 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"nil"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"。"}]}]},{"ID":"20231215161841-3089ozt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-3089ozt","updated":"20231215161931"},"Children":[{"ID":"20231215161841-i1a6qpp","Type":"NodeParagraph","Properties":{"id":"20231215161841-i1a6qpp","updated":"20231215161931"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"slice"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"map"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 切片或映射中元素的个数，如果切片或映射的值是 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"nil"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"，"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"len(v)"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 值的长度是 0。"}]}]},{"ID":"20231215161841-559sdpz","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-559sdpz","updated":"20231215161933"},"Children":[{"ID":"20231215161841-3alsgyg","Type":"NodeParagraph","Properties":{"id":"20231215161841-3alsgyg","updated":"20231215161933"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"string"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 字符串中字节的个数。"}]}]},{"ID":"20231215161841-es1b80z","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-es1b80z","updated":"20231215161934"},"Children":[{"ID":"20231215161841-6o5lapq","Type":"NodeParagraph","Properties":{"id":"20231215161841-6o5lapq","updated":"20231215161934"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"channel"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 通道缓冲区中未读元素的个数，如果缓冲通道的值是 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"nil"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"，"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"len(v)"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 值的长度是 0。"}]}]}]},{"ID":"20231215161841-xoks43f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161841-xoks43f","updated":"20231215161841"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"func main() {\n arr := [3]int{1, 2, 3}\n fmt.Println(arr)\n fmt.Println(len(arr))\n var arr1 *[3]int\n fmt.Println(arr1)\n fmt.Println(len(arr1))\n var s []int\n fmt.Println(len(s))\n s = []int{1, 2, 3}\n fmt.Println(len(s))\n var m map[int]string\n fmt.Println(len(m))\n m = make(map[int]string)\n m[0] = \"hello\"\n fmt.Println(len(m))\n str := \"frank\"\n fmt.Println(len(str))\n var c chan int\n fmt.Println(c)\n fmt.Println(len(c))\n c = make(chan int)\n fmt.Println(len(c))\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161841-qra4bwl","Type":"NodeParagraph","Properties":{"id":"20231215161841-qra4bwl","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"输出结果："}]},{"ID":"20231215161841-t3ha0ny","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161841-t3ha0ny","updated":"20231215161841"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"[1 2 3]\n3\n\u003cnil\u003e\n3\n0\n3\n0\n1\n5\n\u003cnil\u003e\n0\n0\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161841-t8xb3yb","Type":"NodeParagraph","Properties":{"id":"20231215161841-t8xb3yb","updated":"20231215161941"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"需要注意的是，"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"slice"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"、"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"map"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"channel"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 必须先使用内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"make"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 初始化后，该类型的值才可以使用。"}]},{"ID":"20231215161841-zsouea2","Type":"NodeParagraph","Properties":{"id":"20231215161841-zsouea2","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"cap"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-su2uugu","Type":"NodeParagraph","Properties":{"id":"20231215161841-su2uugu","updated":"20231215161947"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"cap"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 返回值的容量，值的类型不同，值的容量含义也不同。"}]},{"ID":"20231215161841-v9tbgez","Type":"NodeList","ListData":{},"Properties":{"id":"20231215161841-v9tbgez","updated":"20231215161841"},"Children":[{"ID":"20231215161841-i1dc3hm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-i1dc3hm","updated":"20231215161841"},"Children":[{"ID":"20231215161841-ueb1qke","Type":"NodeParagraph","Properties":{"id":"20231215161841-ueb1qke","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"array"},{"Type":"NodeText","Data":"​ 数组中元素的个数，数组的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"cap(v)"},{"Type":"NodeText","Data":"​ 与 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"len(v)\u0026lt;span\u0026gt; \u0026lt;/span\u0026gt;"},{"Type":"NodeText","Data":"​相等。"}]}]},{"ID":"20231215161841-r2q7flw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-r2q7flw","updated":"20231215161841"},"Children":[{"ID":"20231215161841-pnms9ha","Type":"NodeParagraph","Properties":{"id":"20231215161841-pnms9ha","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"*array"},{"Type":"NodeText","Data":"​ 数组指针中元素的个数，数组指针的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"cap(v)"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"len(v)"},{"Type":"NodeText","Data":"​ 相等。"}]}]},{"ID":"20231215161841-k976aht","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-k976aht","updated":"20231215161841"},"Children":[{"ID":"20231215161841-46w4z86","Type":"NodeParagraph","Properties":{"id":"20231215161841-46w4z86","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"slice"},{"Type":"NodeText","Data":"​ 切片可以容纳元素的最大长度，如果切片的值是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​，该切片 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"cap(v)"},{"Type":"NodeText","Data":"​ 值的容量是 0。"}]}]},{"ID":"20231215161841-r9vlmy4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-r9vlmy4","updated":"20231215161841"},"Children":[{"ID":"20231215161841-tffzqhe","Type":"NodeParagraph","Properties":{"id":"20231215161841-tffzqhe","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"channel"},{"Type":"NodeText","Data":"​ 通道缓冲区的容量，如果通道的值是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​，该通道 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"cap(v)"},{"Type":"NodeText","Data":"​ 值的容量是 0。"}]}]}]},{"ID":"20231215161841-lwpab8n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161841-lwpab8n","updated":"20231215161841"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"func main() {\n var arr [3]int\n fmt.Println(arr)\n fmt.Println(cap(arr))\n var arr1 *[3]int\n fmt.Println(arr1)\n fmt.Println(cap(arr1))\n var s []string\n fmt.Println(s)\n fmt.Println(cap(s))\n s = make([]string, 1)\n s[0] = \"go\"\n fmt.Println(s)\n fmt.Println(cap(s))\n var c chan int\n fmt.Println(c)\n fmt.Println(cap(c))\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161841-4e8fiy0","Type":"NodeParagraph","Properties":{"id":"20231215161841-4e8fiy0","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"输出结果："}]},{"ID":"20231215161841-fdizfkp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161841-fdizfkp","updated":"20231215161841"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"[0 0 0]\n3\n\u003cnil\u003e\n3\n[]\n0\n[go]\n1\n\u003cnil\u003e\n0\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161841-boz4dt3","Type":"NodeParagraph","Properties":{"id":"20231215161841-boz4dt3","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"make"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-ga45k7g","Type":"NodeParagraph","Properties":{"id":"20231215161841-ga45k7g","updated":"20231215161952"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"make"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 仅限为 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"slice"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"、"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"map"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"channel"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 分配内存并初始化。"}]},{"ID":"20231215161841-p4pdghr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231215161841-p4pdghr","updated":"20231215161841"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"func make(t Type, size ...IntegerType) Type\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231215161841-d9oebqr","Type":"NodeParagraph","Properties":{"id":"20231215161841-d9oebqr","updated":"20231215161955"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"make"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 第一个参数是类型，而不是值；第二个参数是可选（变长）参数，整型类型的值，返回值是该类型的值本身。"}]},{"ID":"20231215161841-pwfu0c0","Type":"NodeParagraph","Properties":{"id":"20231215161841-pwfu0c0","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"需要注意的是，第一个参数不同（不同类型），第二个参数的含义不同。"}]},{"ID":"20231215161841-lp4ceyg","Type":"NodeList","ListData":{},"Properties":{"id":"20231215161841-lp4ceyg","updated":"20231215161841"},"Children":[{"ID":"20231215161841-k11xydt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-k11xydt","updated":"20231215161841"},"Children":[{"ID":"20231215161841-0iqf02b","Type":"NodeParagraph","Properties":{"id":"20231215161841-0iqf02b","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"slice"},{"Type":"NodeText","Data":"​ 第一个参数是切片类型，第二个参数的含义是指定切片的长度。如果没有传递第三个参数（整型类型的值），切片的容量等同于切片的长度，否则，切片的容量等同于第三个参数的值，需要注意的是，切片的容量必须不小于切片的长度。"}]}]},{"ID":"20231215161841-othvncv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-othvncv","updated":"20231215161841"},"Children":[{"ID":"20231215161841-m19l6vd","Type":"NodeParagraph","Properties":{"id":"20231215161841-m19l6vd","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"map"},{"Type":"NodeText","Data":"​ 分配一个有足够空间可以容纳指定数量元素的空映射，第二个参数可以省略，如果省略第二个参数，将分配一个起始值 0。"}]}]},{"ID":"20231215161841-1hj4l8b","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231215161841-1hj4l8b","updated":"20231215161841"},"Children":[{"ID":"20231215161841-4rwgtm5","Type":"NodeParagraph","Properties":{"id":"20231215161841-4rwgtm5","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"channel"},{"Type":"NodeText","Data":"​ 指定缓冲区大小，初始化通道，如果第二个参数省略，或指定值为 0，该通道将被初始化为一个无缓冲通道。"}]}]}]},{"ID":"20231215161841-7txw759","Type":"NodeParagraph","Properties":{"id":"20231215161841-7txw759","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"new"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-nk8eg8z","Type":"NodeParagraph","Properties":{"id":"20231215161841-nk8eg8z","updated":"20231215162001"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"new"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 也可以分配内存，与 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"make"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 的区别是，它仅分配内存，而未初始化。"}]},{"ID":"20231215161841-z93a1i6","Type":"NodeParagraph","Properties":{"id":"20231215161841-z93a1i6","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"make"},{"Type":"NodeText","Data":"​ 相同，第一个参数是类型，而不是值；"}]},{"ID":"20231215161841-o3fhtiz","Type":"NodeParagraph","Properties":{"id":"20231215161841-o3fhtiz","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"make"},{"Type":"NodeText","Data":"​ 不同，返回值是新分配的类型零值的指针。"}]},{"ID":"20231215161841-7ya5vhw","Type":"NodeParagraph","Properties":{"id":"20231215161841-7ya5vhw","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"complex"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-9vhxjem","Type":"NodeParagraph","Properties":{"id":"20231215161841-9vhxjem","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"complex"},{"Type":"NodeText","Data":"​ 将两个浮点型的值构造为一个复合类型的值，需要注意的是，实部和虚部必须是相同类型，即都是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float32"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float64"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231215161841-qn64nqq","Type":"NodeParagraph","Properties":{"id":"20231215161841-qn64nqq","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"返回值是对应的复合类型，即 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"complex64"},{"Type":"NodeText","Data":"​ 对应 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float32"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"complex128"},{"Type":"NodeText","Data":"​ 对应 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float64"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231215161841-theap7k","Type":"NodeParagraph","Properties":{"id":"20231215161841-theap7k","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"real"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-lvl4rt4","Type":"NodeParagraph","Properties":{"id":"20231215161841-lvl4rt4","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"real"},{"Type":"NodeText","Data":"​ 用于返回复合类型的值的实部，返回值是对应的浮点数类型。"}]},{"ID":"20231215161841-6kol8s1","Type":"NodeParagraph","Properties":{"id":"20231215161841-6kol8s1","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"imag"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-v3mcpcs","Type":"NodeParagraph","Properties":{"id":"20231215161841-v3mcpcs","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"imag"},{"Type":"NodeText","Data":"​ 用于返回复合类型的值的虚部，返回值是对应的浮点数类型。"}]},{"ID":"20231215161841-exwraie","Type":"NodeBlockquote","Properties":{"id":"20231215161841-exwraie","updated":"20231215161841"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231215161841-b0a5zxk","Type":"NodeParagraph","Properties":{"id":"20231215161841-b0a5zxk","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"注意："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"complex"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"real"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"imag"},{"Type":"NodeText","Data":"​ 三个内置函数，一般不常用，读者朋友们只需简单了解即可。"}]}]},{"ID":"20231215161841-6m8mjz9","Type":"NodeParagraph","Properties":{"id":"20231215161841-6m8mjz9","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"close"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-lqv9fdd","Type":"NodeParagraph","Properties":{"id":"20231215161841-lqv9fdd","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"close"},{"Type":"NodeText","Data":"​ 关闭通道，被关闭的通道必须是一个双向通道或仅支持发送的单向通道。"}]},{"ID":"20231215161841-53cze3s","Type":"NodeParagraph","Properties":{"id":"20231215161841-53cze3s","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"并且 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"close"},{"Type":"NodeText","Data":"​ 应该由发送者执行，结果是在最后一个发送的值被接收后，关闭该通道。"}]},{"ID":"20231215161841-f9f55c9","Type":"NodeParagraph","Properties":{"id":"20231215161841-f9f55c9","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"通道被关闭后，任何该通道的接收者将返回成功而不会阻塞，接收者得到的返回值是该通道的类型零值和一个布尔类型的零值 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"false"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231215161841-jjlpcdu","Type":"NodeParagraph","Properties":{"id":"20231215161841-jjlpcdu","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"需要注意的是，不仅是关闭通道会返回 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"false"},{"Type":"NodeText","Data":"​，空通道也会返回 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"false"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231215161841-k10wu9e","Type":"NodeParagraph","Properties":{"id":"20231215161841-k10wu9e","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"panic"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-4ap1fci","Type":"NodeParagraph","Properties":{"id":"20231215161841-4ap1fci","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"panic"},{"Type":"NodeText","Data":"​ 停止当前 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"goroutine"},{"Type":"NodeText","Data":"​ 正常执行，当一个函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"F"},{"Type":"NodeText","Data":"​ 调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"panic"},{"Type":"NodeText","Data":"​ 时，该函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"F"},{"Type":"NodeText","Data":"​ 立即停止正常执行。"}]},{"ID":"20231215161841-kdpk64s","Type":"NodeParagraph","Properties":{"id":"20231215161841-kdpk64s","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"该函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"F"},{"Type":"NodeText","Data":"​ 通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"defer"},{"Type":"NodeText","Data":"​ 延迟调用的任意函数，仍然会执行，并将执行结果返回给 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"F"},{"Type":"NodeText","Data":"​ 调用者。"}]},{"ID":"20231215161841-qhy5w61","Type":"NodeParagraph","Properties":{"id":"20231215161841-qhy5w61","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"对于 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"F"},{"Type":"NodeText","Data":"​ 的调用者 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"F2"},{"Type":"NodeText","Data":"​，调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"F"},{"Type":"NodeText","Data":"​ 也会像调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"panic"},{"Type":"NodeText","Data":"​，停止 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"F2"},{"Type":"NodeText","Data":"​ 的执行，并运行 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"F2"},{"Type":"NodeText","Data":"​ 通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"defer"},{"Type":"NodeText","Data":"​ 延迟调用的任意函数。以此类推，一直持续到当前 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"goroutine"},{"Type":"NodeText","Data":"​ 中的所有函数都以相反的顺序停止运行。"}]},{"ID":"20231215161841-n5bggf7","Type":"NodeParagraph","Properties":{"id":"20231215161841-n5bggf7","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"此时，程序以非 0 退出代码终止运行。"}]},{"ID":"20231215161841-vhzqov5","Type":"NodeParagraph","Properties":{"id":"20231215161841-vhzqov5","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"以上终止程序运行的序列称为“恐慌”，可以通过接下来我们要介绍的内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​ 进行控制。"}]},{"ID":"20231215161841-8azr2xm","Type":"NodeParagraph","Properties":{"id":"20231215161841-8azr2xm","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-yvzt64q","Type":"NodeParagraph","Properties":{"id":"20231215161841-yvzt64q","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​ 允许程序管理“恐慌”的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"goroutine"},{"Type":"NodeText","Data":"​ 的行为。"}]},{"ID":"20231215161841-6emmcxl","Type":"NodeParagraph","Properties":{"id":"20231215161841-6emmcxl","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"可以在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"defer"},{"Type":"NodeText","Data":"​ 中调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​ 恢复正常执行来停止“恐慌”，并且检索导致“恐慌”的错误。"}]},{"ID":"20231215161841-rhjgs99","Type":"NodeParagraph","Properties":{"id":"20231215161841-rhjgs99","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"但是，如果在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"defer"},{"Type":"NodeText","Data":"​ 之外调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​，它不会恢复正常执行来停止“恐慌”。此种情况，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​ 的返回值是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​。此外，当前执行 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​ 的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"goroutine"},{"Type":"NodeText","Data":"​ 未“恐慌”，或调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"panic(nil)"},{"Type":"NodeText","Data":"​ 时，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​ 的返回值也是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231215161841-xcj58ax","Type":"NodeParagraph","Properties":{"id":"20231215161841-xcj58ax","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"因此，我们可以通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​ 的返回值，判断当前 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"goroutine"},{"Type":"NodeText","Data":"​ 是否“恐慌”。"}]},{"ID":"20231215161841-kb2q8kj","Type":"NodeBlockquote","Properties":{"id":"20231215161841-kb2q8kj","updated":"20231215161841"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231215161841-ylnkcp2","Type":"NodeParagraph","Properties":{"id":"20231215161841-ylnkcp2","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"注意：此处讲的在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"defer"},{"Type":"NodeText","Data":"​ 中调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​，是指在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"defer"},{"Type":"NodeText","Data":"​ 本身中，而不是任何被 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"defer"},{"Type":"NodeText","Data":"​ 调用的函数中。"}]}]},{"ID":"20231215161841-hmajcka","Type":"NodeParagraph","Properties":{"id":"20231215161841-hmajcka","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"print"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-7dgbgzg","Type":"NodeParagraph","Properties":{"id":"20231215161841-7dgbgzg","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"print"},{"Type":"NodeText","Data":"​ 可以通过指定格式来格式化其参数，并将结果输出。"}]},{"ID":"20231215161841-yo6jgqu","Type":"NodeParagraph","Properties":{"id":"20231215161841-yo6jgqu","updated":"20231215161841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"println"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"："}]},{"ID":"20231215161841-167v0e0","Type":"NodeParagraph","Properties":{"id":"20231215161841-167v0e0","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"println"},{"Type":"NodeText","Data":"​ 可以通过指定格式来格式化其参数，并将结果输出。与 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"print"},{"Type":"NodeText","Data":"​ 的区别是，参数之间会添加空格，末尾会添加换行符。"}]},{"ID":"20231215161841-izv5vvn","Type":"NodeBlockquote","Properties":{"id":"20231215161841-izv5vvn","updated":"20231215161841"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231215161841-wpfafip","Type":"NodeParagraph","Properties":{"id":"20231215161841-wpfafip","updated":"20231215161841"},"Children":[{"Type":"NodeText","Data":"注意："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"print"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"println"},{"Type":"NodeText","Data":"​ 与标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"fmt"},{"Type":"NodeText","Data":"​ 中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"fmt.Print()"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"fmt.Println()"},{"Type":"NodeText","Data":"​ 的区别是，前者是标准错误输出，后者是标准输出。在 Go 语言开发中，官方推荐使用标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"fmt"},{"Type":"NodeText","Data":"​ 包，感兴趣的读者朋友们可以查阅相关资料进一步了解。"}]}]},{"ID":"20231215162031-i0qsvsn","Type":"NodeParagraph","Properties":{"id":"20231215162031-i0qsvsn","updated":"20231215162031"},"Children":[{"Type":"NodeText","Data":"总结"}]},{"ID":"20231215162031-iq1rxfi","Type":"NodeParagraph","Properties":{"id":"20231215162031-iq1rxfi","updated":"20231215162031"},"Children":[{"Type":"NodeText","Data":"本文我们介绍 Go 语言的内置函数，读者朋友们需要重点掌握的内置函数是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"len"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"cap"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"make"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"new"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"append"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"copy"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"delete"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"close"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"panic"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"recover"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231215162031-ses8gor","Type":"NodeParagraph","Properties":{"id":"20231215162031-ses8gor","updated":"20231215162031"},"Children":[{"Type":"NodeText","Data":"Go 语言作为静态编程语言，分为编译期和运行时，Go 语言的内置函数的底层原理，感兴趣的读者朋友们可以阅读 Go 语言内置函数的源码"},{"Type":"NodeTextMark","TextMarkType":"sup","TextMarkTextContent":"[2]"},{"Type":"NodeText","Data":"。"}]},{"ID":"20231215155713-y7f9trp","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231215155713-y7f9trp","updated":"20231215155713"},"Children":[{"Type":"NodeText","Data":"参考资料"}]},{"ID":"20231215155713-bqzo0z1","Type":"NodeParagraph","Properties":{"id":"20231215155713-bqzo0z1","updated":"20231215155713"},"Children":[{"Type":"NodeText","Data":"[1]Go 内置函数官方文档: "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"https://pkg.go.dev/builtin@go1.20.3"}]},{"ID":"20231215155713-c5m6s1l","Type":"NodeParagraph","Properties":{"id":"20231215155713-c5m6s1l","updated":"20231215155713"},"Children":[{"Type":"NodeText","Data":"[2]Go 语言内置函数的源码: "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"https://cs.opensource.google/go/go/+/refs/tags/go1.20.3:src/cmd/compile/internal/typecheck/universe.go"}]}]}