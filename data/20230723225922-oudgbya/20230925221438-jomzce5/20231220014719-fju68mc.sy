{"ID":"20231220014719-fju68mc","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f6ec","id":"20231220014719-fju68mc","tags":"Go-defer,公众号-Golang语言开发栈","title":"Golang 语言中的 defer 怎么使用？","updated":"20231220015508"},"Children":[{"ID":"20231220014719-jmn3v9k","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231220014719-jmn3v9k","updated":"20231220014731"},"Children":[{"Type":"NodeText","Data":"介绍"}]},{"ID":"20231220014742-q7ogjdz","Type":"NodeParagraph","Properties":{"id":"20231220014742-q7ogjdz","updated":"20231220014842"},"Children":[{"Type":"NodeText","Data":"在 Golang 语言中，"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"我们可以在函数（自定义和部分内置）或方法中使用 defer 关键字注册延迟调用（一个或多个），多个延迟调用的执行顺序是先进后出（FILO）。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"strong text","TextMarkTextContent":"并且不会受到函数执行结束退出，显式调用 return 和主动（或被动）触发 panic 的影响，注册成功的所有延迟调用都会被执行，除非 defer 注册在 return 之后或者函数（或方法）调用 "},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"code strong text","TextMarkTextContent":"os.Exit(1)"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"strong text","TextMarkTextContent":"。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"}]},{"ID":"20231220014742-oo75zyd","Type":"NodeParagraph","Properties":{"id":"20231220014742-oo75zyd","updated":"20231220014742"},"Children":[{"Type":"NodeText","Data":"defer 注册多个延迟调用，执行顺序是先进后出（FILO）。"}]},{"ID":"20231220014742-gey88i7","Type":"NodeParagraph","Properties":{"id":"20231220014742-gey88i7","updated":"20231220014742"},"Children":[{"Type":"NodeText","Data":"示例代码："}]},{"ID":"20231220014742-hsh6ht7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231220014742-hsh6ht7","updated":"20231220014747"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main () {\n defer func() {\n  fmt.Println(\"A\")\n }()\n\n defer func() {\n  fmt.Println(\"B\")\n }()\n\n fmt.Println(\"main goroutine run over\")\n\n // panic(\"this is a panic example\")\n\n // return\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231220014742-29e5af1","Type":"NodeParagraph","Properties":{"id":"20231220014742-29e5af1","updated":"20231220014931"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"defer 如果定义在 return 之后，它等于 defer 没有注册，将不会执行。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"}]},{"ID":"20231220014742-iovlpiz","Type":"NodeParagraph","Properties":{"id":"20231220014742-iovlpiz","updated":"20231220014742"},"Children":[{"Type":"NodeText","Data":"示例代码："}]},{"ID":"20231220014742-8wc0nsh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231220014742-8wc0nsh","updated":"20231220014751"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main () {\n fmt.Println(\"main\")\n return\n defer func() {\n  fmt.Println(\"A\")\n }()\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231220014742-csuacx0","Type":"NodeParagraph","Properties":{"id":"20231220014742-csuacx0","updated":"20231220014937"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"defer 所在的函数或方法中，如果调用 "},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"code strong text","TextMarkTextContent":"os.Exit(1)"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"，defer 即便注册，也不会执行。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"}]},{"ID":"20231220014742-l388g6a","Type":"NodeParagraph","Properties":{"id":"20231220014742-l388g6a","updated":"20231220014742"},"Children":[{"Type":"NodeText","Data":"示例代码："}]},{"ID":"20231220014742-c2m8vqk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231220014742-c2m8vqk","updated":"20231220014756"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main () {\n defer func() {\n  fmt.Println(\"A\")\n }()\n fmt.Println(\"main\")\n os.Exit(1)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231220014742-7sz6dmc","Type":"NodeParagraph","Properties":{"id":"20231220014742-7sz6dmc","updated":"20231220014955"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"defer 必须在函数和方法中才可以使用，并且 defer 后面必须是函数（自定义和部分内置函数）或方法，defer 函数的实参是值拷贝。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"}]},{"ID":"20231220014742-t1gtbb3","Type":"NodeParagraph","Properties":{"id":"20231220014742-t1gtbb3","updated":"20231220014742"},"Children":[{"Type":"NodeText","Data":"示例代码"}]},{"ID":"20231220014742-hfdpass","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231220014742-hfdpass","updated":"20231220014800"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main () {\n a := 0\n defer func(num int) {\n  fmt.Println(\"defer func()\", num)\n }(a)\n a++\n fmt.Println(a)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231220014803-5r8ay3l","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231220014803-5r8ay3l","updated":"20231220014807"},"Children":[{"Type":"NodeText","Data":"使用场景"}]},{"ID":"20231220015014-wz6mpzo","Type":"NodeParagraph","Properties":{"id":"20231220015014-wz6mpzo","updated":"20231220015046"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"使用关键字 defer 注册的函数（自定义和部分内置）或方法，因为不会受到函数执行结束，显式调用 return 和主动（或被动）触发 panic 的影响，通常会用于防止忘记释放资源和捕获 panic（同一 goroutine 中） 防止应用程序崩溃退出的应用场景。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"}]},{"ID":"20231220015014-vjlerit","Type":"NodeParagraph","Properties":{"id":"20231220015014-vjlerit","updated":"20231220015014"},"Children":[{"Type":"NodeText","Data":"示例代码："}]},{"ID":"20231220015014-b01hsz2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231220015014-b01hsz2","updated":"20231220015024"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main () {\n f, err := os.OpenFile(\"text.txt\", os.O_WRONLY|os.O_APPEND|os.O_CREATE, 0755)\n if err != nil {\n  fmt.Println(err)\n }\n defer f.Close()\n n, err := f.WriteString(\"this is a text file\\t\")\n if err != nil {\n  fmt.Println(err)\n }\n fmt.Println(n)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231220015014-7dsjmq4","Type":"NodeParagraph","Properties":{"id":"20231220015014-7dsjmq4","updated":"20231220015014"},"Children":[{"Type":"NodeText","Data":"阅读上面这段代码，我们使用 defer 延迟调用释放资源，防止忘记释放资源（关闭文件或解锁），通常 defer 会放在错误检查之后。"}]},{"ID":"20231220015014-mhhrlug","Type":"NodeParagraph","Properties":{"id":"20231220015014-mhhrlug","updated":"20231220015014"},"Children":[{"Type":"NodeText","Data":"示例代码："}]},{"ID":"20231220015014-3djhlsk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231220015014-3djhlsk","updated":"20231220015028"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main () {\n defer func() {\n  if err := recover(); err != nil {\n   fmt.Println(\"this is a panic\" )\n  }\n }()\n panic(\"this is a test panic\")\n fmt.Println(\"main\")\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231220015014-iyztjmt","Type":"NodeParagraph","Properties":{"id":"20231220015014-iyztjmt","updated":"20231220015014"},"Children":[{"Type":"NodeText","Data":"阅读上面这段代码，我们使用 defer 配合 recover 函数，用于拦截 panic（同一 goroutine 中），防止程序崩溃退出。"}]},{"ID":"20231220015056-rnid2yg","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231220015056-rnid2yg","updated":"20231220015348"},"Children":[{"Type":"NodeText","Data":"注意事项"}]},{"ID":"20231220015354-3j63625","Type":"NodeParagraph","Properties":{"id":"20231220015354-3j63625","updated":"20231220015354"},"Children":[{"Type":"NodeText","Data":"虽然使用 defer 具有可以用于防止忘记释放资源和拦截 panic（同一 goroutine 中）防止应用程序崩溃退出等好处。"}]},{"ID":"20231220015354-hczlcae","Type":"NodeParagraph","Properties":{"id":"20231220015354-hczlcae","updated":"20231220015414"},"Children":[{"Type":"NodeText","Data":"但是 "},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"strong text","TextMarkTextContent":"defer 也有副作用，它会使资源延迟释放，defer 尽量不要再 for-loop 中使用，并且相比于未使用 defer 调用的函数（自定义和部分内置）或方法，defer 也有一定的性能损耗，Golang 语言官方也在 golang 1.13 和 golang 1.14 中优化了 defer 的性能。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"}]},{"ID":"20231220015354-ozfh1dc","Type":"NodeParagraph","Properties":{"id":"20231220015354-ozfh1dc","updated":"20231220015354"},"Children":[{"Type":"NodeText","Data":"相比于 defer 的性能损耗，defer 带来的使代码更加优雅、可读和健壮等优势，我认为 defer 综合来看，利大于弊，它可以给 gopher 们带来的收益比付出的代价更大。所以，我建议大家尽量使用 defer。"}]},{"ID":"20231220015354-zyyhnqo","Type":"NodeParagraph","Properties":{"id":"20231220015354-zyyhnqo","updated":"20231220015354"},"Children":[{"Type":"NodeText","Data":"还有一点需要注意的是，我们不要使用 defer 调用有返回值的自定义函数或方法，返回值会丢失，可能会给应用程序带来意想不到的错误。"}]},{"ID":"20231220015457-qd3jwq7","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231220015457-qd3jwq7","updated":"20231220015503"},"Children":[{"Type":"NodeText","Data":"总结"}]},{"ID":"20231220015508-znfwdcj","Type":"NodeParagraph","Properties":{"id":"20231220015508-znfwdcj","updated":"20231220015508"},"Children":[{"Type":"NodeText","Data":"本文我们介绍了 defer 的执行机制，使用场景和注意事项，并且给出了相应的示例代码。通常我们会在 Golang 语言开发中使用 defer 防止忘记释放资源（关闭文件或解锁）和捕获 panic（同一 goroutine 中） 防止应用程序崩溃退出。"}]},{"ID":"20231220015508-gpcxzrb","Type":"NodeParagraph","Properties":{"id":"20231220015508-gpcxzrb","updated":"20231220015508"},"Children":[{"Type":"NodeText","Data":"关于 defer 的原理分析，限于篇幅，并没有花费笔墨，感兴趣的读者朋友们，建议自行搜索相关资料了解相关内容。"}]}]}