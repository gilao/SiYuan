{"ID":"20231218225833-xvckblo","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f4cb","id":"20231218225833-xvckblo","tags":"公众号-Golang语言开发栈,Go-MySQL","title":"Go 语言使用 XORM 操作 MySQL 的陷阱","updated":"20231218235616"},"Children":[{"ID":"20231218225833-z6smc8n","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231218225833-z6smc8n","updated":"20231218225910"},"Children":[{"Type":"NodeText","Data":"介绍"}]},{"ID":"20231218225916-zielh4o","Type":"NodeParagraph","Properties":{"id":"20231218225916-zielh4o","updated":"20231218233505"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"在 Go 语言开发中，大家为了方便，通常会选择使用 ORM 操作数据库，比如使用 XORM 或 GORM 操作 MySQL。"}]},{"ID":"20231218225916-8auttpn","Type":"NodeParagraph","Properties":{"id":"20231218225916-8auttpn","updated":"20231218225916"},"Children":[{"Type":"NodeText","Data":"虽然使用 ORM 操作 MySQL 比直接使用标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"sql"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"sup","TextMarkTextContent":"[1]"},{"Type":"NodeText","Data":" 和三方 MySQL 数据库驱动包"},{"Type":"NodeTextMark","TextMarkType":"sup","TextMarkTextContent":"[2]"},{"Type":"NodeText","Data":"操作 MySQL 更加方便，但是也会遇到一些陷阱。"}]},{"ID":"20231218225916-5fwo0nm","Type":"NodeParagraph","Properties":{"id":"20231218225916-5fwo0nm","updated":"20231218225916"},"Children":[{"Type":"NodeText","Data":"本文我们来介绍一下使用 XORM"},{"Type":"NodeTextMark","TextMarkType":"sup","TextMarkTextContent":"[3]"},{"Type":"NodeText","Data":" 操作 MySQL 可能会遇到的陷阱。"}]},{"ID":"20231218233351-nrd1r6a","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231218233351-nrd1r6a","updated":"20231218233416"},"Children":[{"Type":"NodeText","Data":"使用XORM 操作MySQL 的陷阱"}]},{"ID":"20231218233416-bw29bt5","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231218233416-bw29bt5","updated":"20231218233426"},"Children":[{"Type":"NodeText","Data":"类型零值"}]},{"ID":"20231218233448-ncq4a4c","Type":"NodeParagraph","Properties":{"id":"20231218233448-ncq4a4c","updated":"20231218233448"},"Children":[{"Type":"NodeText","Data":"在 Golang 中，每个数据类型都有各自的类型零值，比如 int 的零值是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":"​，string 的零值是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"''"},{"Type":"NodeText","Data":"​等。"}]},{"ID":"20231218233448-w2vpxgz","Type":"NodeParagraph","Properties":{"id":"20231218233448-w2vpxgz","updated":"20231218233448"},"Children":[{"Type":"NodeText","Data":"示例代码："}]},{"ID":"20231218233508-3f4rlfs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218233508-3f4rlfs","updated":"20231218233649"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n \"fmt\"\n _ \"github.com/go-sql-driver/mysql\"\n \"xorm.io/xorm\"\n)\n\nfunc main() {\n // 创建 Engine\n engine, err := xorm.NewEngine(\"mysql\", \"root:root@/example?charset=utf8\")\n defer func() {\n  err = engine.Close()\n  if err != nil {\n   fmt.Printf(\"engine close err=%v\\n\", err)\n   return\n  }\n }()\n if err != nil {\n  fmt.Printf(\"init xorm engine fail, err=%v\\n\", err)\n  return\n }\n\n // 更新数据\n example := \u0026Example{\n  Title: \"go\",\n  View:  0,\n }\n condi := \u0026Example{\n  Id: 2,\n }\n affected, err := engine.Update(example, condi)\n if err != nil {\n  fmt.Printf(\"Update err=%v\\n\", err)\n  return\n }\n fmt.Printf(\"affected=%d\\n\", affected)\n}\n\ntype Example struct {\n Id      int    `json:\"id\" form:\"id\"`\n Title   string `json:\"title\" form:\"title\"`\n View    int    `json:\"view\" form:\"view\"`\n Created int    `json:\"created\" form:\"created\" xorm:\"created\"`\n Updated int    `json:\"updated\" form:\"updated\" xorm:\"updated\"`\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218233736-q7him7c","Type":"NodeParagraph","Properties":{"id":"20231218233736-q7him7c","updated":"20231218233736"},"Children":[{"Type":"NodeText","Data":"阅读上面这段代码，我们可以发现示例代码中将 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"id=2"},{"Type":"NodeText","Data":"​ 的数据 view 字段更新为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":"​，因为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":"​ 是 int 的类型零值，XORM 的 Update 方法会自动忽略类型零值，所以该数据 view 字段的值没有更改。"}]},{"ID":"20231218233736-oc09o45","Type":"NodeParagraph","Properties":{"id":"20231218233736-oc09o45","updated":"20231218233736"},"Children":[{"Type":"NodeText","Data":"但是，在实际项目开发中，我们可能需要将某个字段的值更新为该字段类型的类型零值，此时我们该怎么操作呢？"}]},{"ID":"20231218233737-zvfro8b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218233737-zvfro8b","updated":"20231218233744"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"affected, err := engine.Cols(\"title\", \"view\").Update(example, condi)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218233745-bq4lo08","Type":"NodeParagraph","Properties":{"id":"20231218233745-bq4lo08","updated":"20231218233752"},"Children":[{"Type":"NodeText","Data":"我们可以使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Cols()"},{"Type":"NodeText","Data":"​ 方法，指定需要更新的字段，这样即便需要更新字段的值是该字段类型的类型零值，也可以正常更改。"}]},{"ID":"20231218233824-7dizl5v","Type":"NodeBlockquote","Properties":{"id":"20231218233824-7dizl5v","updated":"20231218233826"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231218233825-mpnahr0","Type":"NodeParagraph","Properties":{"id":"20231218233825-mpnahr0","updated":"20231218233826"},"Children":[{"Type":"NodeText","Data":"提示：建议在设计数据库表时，字段的值尽量使用非类型零值。"}]}]},{"ID":"20231218233841-7mps2nf","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231218233841-7mps2nf","updated":"20231218233841"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"自增 id"}]},{"ID":"20231218233841-t4se0gg","Type":"NodeParagraph","Properties":{"id":"20231218233841-t4se0gg","updated":"20231218233841"},"Children":[{"Type":"NodeText","Data":"在插入数据时，我们可能需要返回自增 id，我们先看一段代码："}]},{"ID":"20231218233902-c7vzwz3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218233902-c7vzwz3","updated":"20231218233909"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// 插入数据\nexample := \u0026Example{\n  Title: \"PHP\",\n  View:  90,\n}\naffected, err := engine.Insert(example)\nif err != nil {\n  fmt.Printf(\"Insert err=%v\\n\", err)\n  return\n}\nfmt.Printf(\"affected=%v\\n\", affected)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218234021-30g12ms","Type":"NodeParagraph","Properties":{"id":"20231218234021-30g12ms","updated":"20231218234021"},"Children":[{"Type":"NodeText","Data":"阅读上面这段代码，我们插入一条数据，返回结果是影响行数和错误信息，而不是直接返回该条数据的自增 id。"}]},{"ID":"20231218234021-7vi4krj","Type":"NodeParagraph","Properties":{"id":"20231218234021-7vi4krj","updated":"20231218234021"},"Children":[{"Type":"NodeText","Data":"可能有些读者朋友们会接着使用查询方法，查询最新一条数据的 id，在并发请求数低的场景中，该方法是可以查到新插入数据的自增 id。"}]},{"ID":"20231218234021-y0x1nne","Type":"NodeParagraph","Properties":{"id":"20231218234021-y0x1nne","updated":"20231218234021"},"Children":[{"Type":"NodeText","Data":"但是在并发请求数高的场景中，该方法查到的最新一条数据的 id，未必是我们刚插入的数据的自增 id。"}]},{"ID":"20231218234216-sfrd828","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218234216-sfrd828","updated":"20231218234223"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"id := example.Id\nfmt.Printf(\"affected=%v || id=%d\\n\", affected, id)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218234224-p035pis","Type":"NodeParagraph","Properties":{"id":"20231218234224-p035pis","updated":"20231218235556"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"text","TextMarkTextContent":"阅读上面这段代码，我们想要获取新插入数据的自增 id，直接 "},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"code text","TextMarkTextContent":"example.Id"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"text","TextMarkTextContent":" 即可获取，但是"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"前提条件"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"text","TextMarkTextContent":"是结构体中，"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"code text","TextMarkTextContent":"id"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"text","TextMarkTextContent":" 字段使用 "},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"code text","TextMarkTextContent":"xorm:\u0026quot;autoincr\u0026quot;"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"text","TextMarkTextContent":" 标签。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"}]},{"ID":"20231218234240-ipiyw4e","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231218234240-ipiyw4e","updated":"20231218234252"},"Children":[{"Type":"NodeText","Data":"更新 created 字段"}]},{"ID":"20231218234322-le4vcyl","Type":"NodeParagraph","Properties":{"id":"20231218234322-le4vcyl","updated":"20231218235616"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"我们在结构体中，使用标签 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"xorm:created"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"xorm:updated"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 即可自动插入当前时间。"}]},{"ID":"20231218234322-f0e2mld","Type":"NodeParagraph","Properties":{"id":"20231218234322-f0e2mld","updated":"20231218234322"},"Children":[{"Type":"NodeText","Data":"但是，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"xorm:created"},{"Type":"NodeText","Data":"​ 标签的字段，只有在第一次插入数据时写入当前时间，此后将不再会更改；使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"xorm:updated"},{"Type":"NodeText","Data":"​ 标签的字段，在第一次插入数据时写入当前时间，此后每次 Update 操作，时间都会更改。"}]},{"ID":"20231218234322-x93kax6","Type":"NodeParagraph","Properties":{"id":"20231218234322-x93kax6","updated":"20231218234322"},"Children":[{"Type":"NodeText","Data":"如果我们的业务需求是需要更改使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"xorm:created"},{"Type":"NodeText","Data":"​ 标签的字段，可以做到吗？"}]},{"ID":"20231218234324-ljyac4p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218234324-ljyac4p","updated":"20231218234332"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// 更改数据\nexample := \u0026Example{\n  Title: \"JavaScript\",\n  View:  98,\n}\n\ncondi := \u0026Example{\n  Id: 2,\n}\n\naffected, err := engine.Update(example, condi)\nif err != nil {\n  fmt.Printf(\"Update err=%v\\n\", err)\n  return\n}\nfmt.Printf(\"affected=%d\\n\", affected)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218234335-670cekb","Type":"NodeParagraph","Properties":{"id":"20231218234335-670cekb","updated":"20231218234711"},"Children":[{"Type":"NodeText","Data":"阅读上面这段代码，我们发现执行 Update 方法之后，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"xorm:updated"},{"Type":"NodeText","Data":"​ 标签的字段的值被更改，而使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"xorm:created"},{"Type":"NodeText","Data":"​ 标签的字段的值没被更改。"}]},{"ID":"20231218234727-pt8lbbr","Type":"NodeParagraph","Properties":{"id":"20231218234727-pt8lbbr","updated":"20231218234800"},"Children":[{"Type":"NodeText","Data":"我们换一种更新数据的方式，代码如下："}]},{"ID":"20231218234801-qibakq8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218234801-qibakq8","updated":"20231218234828"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// 更改数据\nsql := \"UPDATE example SET title=?, view=?, created=? WHERE id=?\"\nres, err := engine.Exec(sql, \"Python\", 60, time.Now().Unix(), 2)\nif err != nil {\n  fmt.Printf(\"Update err=%v\\n\", err)\n  return\n}\naffected, err := res.RowsAffected()\nif err != nil {\n  fmt.Printf(\"RowsAffected err=%v\\n\", err)\n  return\n}\nfmt.Printf(\"affected=%d\\n\", affected)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218234851-hucp7xx","Type":"NodeParagraph","Properties":{"id":"20231218234851-hucp7xx","updated":"20231218234852"},"Children":[{"Type":"NodeText","Data":"阅读上面这段代码，我们可以发现使用 Exec 方法执行原生 SQL 可以满足我们的需求。"}]},{"ID":"20231218234853-frmci68","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231218234853-frmci68","updated":"20231218234856"},"Children":[{"Type":"NodeText","Data":"总结"}]},{"ID":"20231218234902-bgzscq0","Type":"NodeParagraph","Properties":{"id":"20231218234902-bgzscq0","updated":"20231218234902"},"Children":[{"Type":"NodeText","Data":"本文我们介绍了使用 XORM 操作 MySQL 时，新手读者朋友们可能会遇到的陷阱，希望可以给大家带来一些帮助。"}]},{"ID":"20231218234902-nnqk2jc","Type":"NodeParagraph","Properties":{"id":"20231218234902-nnqk2jc","updated":"20231218234902"},"Children":[{"Type":"NodeText","Data":"读者朋友们在使用 XORM 或 GORM 操作 MySQL 时，还遇到过哪些陷阱，欢迎读者朋友们在留言区分享。"}]}]}