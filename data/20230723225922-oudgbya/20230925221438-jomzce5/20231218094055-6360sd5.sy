{"ID":"20231218094055-6360sd5","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f964","id":"20231218094055-6360sd5","tags":"公众号-Golang语言开发栈,Go-数组","title":"Go 语言为什么很少使用数组","updated":"20231218095037"},"Children":[{"ID":"20231218094108-g6p3ius","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231218094108-g6p3ius","updated":"20231218094146"},"Children":[{"Type":"NodeText","Data":"介绍"}]},{"ID":"20231218094153-p7kgwsl","Type":"NodeParagraph","Properties":{"id":"20231218094153-p7kgwsl","updated":"20231218094202"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"在 Go 语言中，数组是一块连续的内存，数组不可以扩容，数组在作为参数传递时，属于值传递。"}]},{"ID":"20231218094153-kqjwxvw","Type":"NodeParagraph","Properties":{"id":"20231218094153-kqjwxvw","updated":"20231218094400"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"数组的长度和类型共同决定数组的类型"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"不同类型的数组之间不可以比较"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeText","Data":"，否则在编译时会报错。"}]},{"ID":"20231218094153-t6bjw3i","Type":"NodeParagraph","Properties":{"id":"20231218094153-t6bjw3i","updated":"20231218094153"},"Children":[{"Type":"NodeText","Data":"因为数组的一些特性，我们在 Go 项目开发中，很少使用数组。本文我们介绍一下数组的特性。"}]},{"ID":"20231218094303-6ze6bwn","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231218094303-6ze6bwn","updated":"20231218094307"},"Children":[{"Type":"NodeText","Data":"数组"}]},{"ID":"20231218094405-0na9hk6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231218094405-0na9hk6","updated":"20231218094410"},"Children":[{"Type":"NodeText","Data":"声明方式"}]},{"ID":"20231218094411-0yrb77r","Type":"NodeParagraph","Properties":{"id":"20231218094411-0yrb77r","updated":"20231218094425"},"Children":[{"Type":"NodeText","Data":"在Go语言中，数组的声明方式有三种。"}]},{"ID":"20231218094425-7nuv5xr","Type":"NodeParagraph","Properties":{"id":"20231218094425-7nuv5xr","updated":"20231218094428"},"Children":[{"Type":"NodeText","Data":"示例代码"}]},{"ID":"20231218094429-xyr543j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218094429-xyr543j","updated":"20231218094435"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main() {\n var arr1 [2]int\n var arr2 = [2]int{1, 2}\n var arr3 = [...]int{1, 2}\n fmt.Println(arr1)\n fmt.Println(arr2)\n fmt.Println(arr3)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218094440-2ey0ls3","Type":"NodeParagraph","Properties":{"id":"20231218094440-2ey0ls3","updated":"20231218094444"},"Children":[{"Type":"NodeText","Data":"输出结果"}]},{"ID":"20231218094445-2s2568e","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218094445-2s2568e","updated":"20231218094450"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"[0 0]\n[1 2]\n[1 2]\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218094501-t1dazak","Type":"NodeParagraph","Properties":{"id":"20231218094501-t1dazak","updated":"20231218094501"},"Children":[{"Type":"NodeText","Data":"阅读上面这段代码，我们使用三种方式声明数组，其中 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"arr1"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"arr2"},{"Type":"NodeText","Data":"​ 的区别是，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"arr1"},{"Type":"NodeText","Data":"​ 在声明时没有为数组赋值，所以输出结果是类型零值 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"[0 0]"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231218094501-d5pbvij","Type":"NodeParagraph","Properties":{"id":"20231218094501-d5pbvij","updated":"20231218094501"},"Children":[{"Type":"NodeText","Data":"需要注意的是，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"arr3"},{"Type":"NodeText","Data":"​ 没有指定数组的长度，而是使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"[...]"},{"Type":"NodeText","Data":"​ 替代，这实际上是 Go 语言中声明数组的语法糖，编译时通过数组的赋值，自动推断数组的长度，我们可以使用内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"len()"},{"Type":"NodeText","Data":"​ 查询数组的长度。"}]},{"ID":"20231218094558-qklbwyi","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231218094558-qklbwyi","updated":"20231218094604"},"Children":[{"Type":"NodeText","Data":"数组的特性"}]},{"ID":"20231218094612-2b4su17","Type":"NodeParagraph","Properties":{"id":"20231218094612-2b4su17","updated":"20231218094612"},"Children":[{"Type":"NodeText","Data":"在了解完数组的声明方式之后，我们再来介绍一下数组具有哪些特性。"}]},{"ID":"20231218094612-34ue4gp","Type":"NodeParagraph","Properties":{"id":"20231218094612-34ue4gp","updated":"20231218094807"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"数组的长度和类型共同决定数组的类型"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeText","Data":"，例如 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"var arr1 [2]int"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"var arr2 [3]int"},{"Type":"NodeText","Data":"​ 是不同的类型。"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"并且不同类型的数组之间是不可以比较的。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"strong text","TextMarkTextContent":"因为数组的长度是指定的，所以数组也不可以扩容。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"}]},{"ID":"20231218094612-nmwx2oy","Type":"NodeParagraph","Properties":{"id":"20231218094612-nmwx2oy","updated":"20231218094612"},"Children":[{"Type":"NodeText","Data":"如果数组长度小于等于 4 时，在编译时会对数组做内存优化，程序启动时在栈区初始化数组，我们在使用数组类型时，也可以注意一下这一点。"}]},{"ID":"20231218094612-cnhbt8c","Type":"NodeParagraph","Properties":{"id":"20231218094612-cnhbt8c","updated":"20231218094612"},"Children":[{"Type":"NodeText","Data":"使用数组下标访问数组中的元素时，越界访问，在编译时会报错。但是，如果我们使用变量 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"arr[i]"},{"Type":"NodeText","Data":"​ 作为数组下标访问数组中的元素，在编译时无法检查是否越界访问，在运行时会引发 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"panic"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231218094843-fz9bniz","Type":"NodeParagraph","Properties":{"id":"20231218094843-fz9bniz","updated":"20231218094847"},"Children":[{"Type":"NodeText","Data":"示例代码："}]},{"ID":"20231218094848-q6p5dcu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218094848-q6p5dcu","updated":"20231218094855"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func Store() {\n var arr [2]int\n for i := 0; i \u003c 5; i++ {\n  arr[i] = i + 1\n }\n fmt.Println(arr)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218094908-k0nlun9","Type":"NodeParagraph","Properties":{"id":"20231218094908-k0nlun9","updated":"20231218094911"},"Children":[{"Type":"NodeText","Data":"输出结果"}]},{"ID":"20231218094912-opvjvyo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218094912-opvjvyo","updated":"20231218094912"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"panic: runtime error: index out of range [2] with length 2\n\ngoroutine 1 [running]:\n...\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218094919-5gb40g9","Type":"NodeParagraph","Properties":{"id":"20231218094919-5gb40g9","updated":"20231218094935"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"在作为参数传递数组类型的变量时，属于值传递"},{"Type":"NodeText","Data":"，我们在使用数组类型的参数时，要特别注意这一点。"}]},{"ID":"20231218094919-qvo7b35","Type":"NodeParagraph","Properties":{"id":"20231218094919-qvo7b35","updated":"20231218094919"},"Children":[{"Type":"NodeText","Data":"示例代码："}]},{"ID":"20231218094936-8q4qko2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218094936-8q4qko2","updated":"20231218094944"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func main() {\n var arr2 = [2]int{1, 2}\n Get(arr2)\n fmt.Printf(\"arr2=%p\\n%d\\n\", \u0026arr2, arr2)\n}\n\nfunc Get(arr [2]int) {\n fmt.Printf(\"Get()=%p\\n%d\\n\", \u0026arr, arr)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218094958-crtyvnf","Type":"NodeParagraph","Properties":{"id":"20231218094958-crtyvnf","updated":"20231218095001"},"Children":[{"Type":"NodeText","Data":"输出结果"}]},{"ID":"20231218095001-5xgoi8i","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231218095001-5xgoi8i","updated":"20231218095007"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"Get()=0xc0000120f0\n[1 2]\narr2=0xc0000120b0\n[1 2]\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231218095021-8oeml0y","Type":"NodeParagraph","Properties":{"id":"20231218095021-8oeml0y","updated":"20231218095026"},"Children":[{"Type":"NodeText","Data":"阅读上面这段代码，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"我们可以发现数组在作为参数传递时，地址发生变化，可以证明其属于值传递，即分配一块新内存，将数组的值拷贝到新内存。"}]},{"ID":"20231218095026-mfy27q4","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231218095026-mfy27q4","updated":"20231218095030"},"Children":[{"Type":"NodeText","Data":"总结"}]},{"ID":"20231218095037-niilkyp","Type":"NodeParagraph","Properties":{"id":"20231218095037-niilkyp","updated":"20231218095037"},"Children":[{"Type":"NodeText","Data":"本文我们通过介绍 Go 语言中数组的一些特性，佐证数组在 Go 项目开发中很少使用的原因。"}]},{"ID":"20231218095037-q3yt9ab","Type":"NodeParagraph","Properties":{"id":"20231218095037-q3yt9ab","updated":"20231218095037"},"Children":[{"Type":"NodeText","Data":"主要原因有两点，一是数组不可以扩容；二是值传递，大数组要特别小心，如果无法避免使用大数组，可以使用数组指针。"}]}]}