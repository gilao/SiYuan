{"ID":"20231223113834-7r3ycof","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f9ff","id":"20231223113834-7r3ycof","tags":"公众号-Golang语言开发栈,Go-bufio 库","title":"Go 语言标准库 bufio 详解","updated":"20231223125711"},"Children":[{"ID":"20231223113834-xksb2y2","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231223113834-xksb2y2","updated":"20231223113948"},"Children":[{"Type":"NodeText","Data":"介绍"}]},{"ID":"20231223113949-9u027yl","Type":"NodeParagraph","Properties":{"id":"20231223113949-9u027yl","updated":"20231223114819"},"Children":[{"Type":"NodeText","Data":"Go 语言标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 是基于 Go 语言标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"io"},{"Type":"NodeText","Data":"​ 实现的， 查看源码可以发现，实际上他是包装了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"io。Reader"},{"Type":"NodeText","Data":"​ 接口 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"io.Writer"},{"Type":"NodeText","Data":"​ 接口，并且实现他们。"}]},{"ID":"20231223120053-10bhrx2","Type":"NodeParagraph","Properties":{"id":"20231223120053-10bhrx2","updated":"20231223120053"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 顾名思义，就是在缓冲区读写数据，比直接读写文件或网络中的数据，性能更好些。"}]},{"ID":"20231223120053-skagajl","Type":"NodeParagraph","Properties":{"id":"20231223120053-skagajl","updated":"20231223120053"},"Children":[{"Type":"NodeText","Data":"本文我们介绍 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 的相关内容，建议读者朋友们最好是先了解一下 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"io"},{"Type":"NodeText","Data":"​ 的相关内容。"}]},{"ID":"20231223120054-pbl44re","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231223120054-pbl44re","updated":"20231223120111"},"Children":[{"Type":"NodeText","Data":"标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 的数据类型"}]},{"ID":"20231223120123-g2t1pqg","Type":"NodeParagraph","Properties":{"id":"20231223120123-g2t1pqg","updated":"20231223120123"},"Children":[{"Type":"NodeText","Data":"查看标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 的文档"},{"Type":"NodeTextMark","TextMarkType":"sup","TextMarkTextContent":"[1]"},{"Type":"NodeText","Data":"，它的数据类型主要有 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio.Reader"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio.Writer"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio.ReadWriter"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio.Scanner"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231223120123-0siop23","Type":"NodeParagraph","Properties":{"id":"20231223120123-0siop23","updated":"20231223120123"},"Children":[{"Type":"NodeText","Data":"我们以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio.Reader"},{"Type":"NodeText","Data":"​ 为例，介绍它的数据结构、初始化方式和提供的方法。"}]},{"ID":"20231223120143-7luot14","Type":"NodeParagraph","Properties":{"id":"20231223120143-7luot14","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"bufio.Reader"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 的数据结构："}]},{"ID":"20231223120143-6k773zw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231223120143-6k773zw","updated":"20231223125151"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"type Reader struct {\n buf          []byte\n rd           io.Reader\n r, w         int\n err          error\n lastByte     int\n lastRuneSize int\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231223120143-5127kc3","Type":"NodeParagraph","Properties":{"id":"20231223120143-5127kc3","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"阅读源码，我们可以发现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio.Reader"},{"Type":"NodeText","Data":"​ 中包含的字段："}]},{"ID":"20231223120143-5hxifww","Type":"NodeList","ListData":{},"Properties":{"id":"20231223120143-5hxifww","updated":"20231223120143"},"Children":[{"ID":"20231223120143-hl8rbbm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231223120143-hl8rbbm","updated":"20231223120143"},"Children":[{"ID":"20231223120143-pc1wiz1","Type":"NodeParagraph","Properties":{"id":"20231223120143-pc1wiz1","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"buf []byte"},{"Type":"NodeText","Data":"​ 缓冲区。"}]}]},{"ID":"20231223120143-zr3znks","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231223120143-zr3znks","updated":"20231223120143"},"Children":[{"ID":"20231223120143-2n8tsnm","Type":"NodeParagraph","Properties":{"id":"20231223120143-2n8tsnm","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"rd io.Reader"},{"Type":"NodeText","Data":"​ 缓冲区的数据源。"}]}]},{"ID":"20231223120143-vszo0pg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231223120143-vszo0pg","updated":"20231223120143"},"Children":[{"ID":"20231223120143-pj42dzn","Type":"NodeParagraph","Properties":{"id":"20231223120143-pj42dzn","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"r,w int"},{"Type":"NodeText","Data":"​ 缓冲区读写索引位置。"}]}]},{"ID":"20231223120143-emd64c9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231223120143-emd64c9","updated":"20231223120143"},"Children":[{"ID":"20231223120143-0e31yhy","Type":"NodeParagraph","Properties":{"id":"20231223120143-0e31yhy","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"err error"},{"Type":"NodeText","Data":"​ 错误。"}]}]},{"ID":"20231223120143-qvhbr4h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231223120143-qvhbr4h","updated":"20231223120143"},"Children":[{"ID":"20231223120143-134y96h","Type":"NodeParagraph","Properties":{"id":"20231223120143-134y96h","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"lastByte int"},{"Type":"NodeText","Data":"​ 未读字节的上一个字节。"}]}]},{"ID":"20231223120143-dwzrt8h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231223120143-dwzrt8h","updated":"20231223120143"},"Children":[{"ID":"20231223120143-rk5idmr","Type":"NodeParagraph","Properties":{"id":"20231223120143-rk5idmr","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"lastRuneSize"},{"Type":"NodeText","Data":"​ 未读字符的上一个字符的大小。"}]}]}]},{"ID":"20231223120143-peqs2yf","Type":"NodeParagraph","Properties":{"id":"20231223120143-peqs2yf","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"bufio.Reader"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 的初始化方式："}]},{"ID":"20231223120143-hmyi3zt","Type":"NodeParagraph","Properties":{"id":"20231223120143-hmyi3zt","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio.Reader"},{"Type":"NodeText","Data":"​ 时，需要先初始化，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 包提供了两个初始化的函数，分别是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NewReaderSize"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NewReader"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231223120143-r34yykz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231223120143-r34yykz","updated":"20231223125147"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func NewReaderSize(rd io.Reader, size int) *Reader {\n // Is it already a Reader?\n b, ok := rd.(*Reader)\n if ok \u0026\u0026 len(b.buf) \u003e= size {\n  return b\n }\n if size \u003c minReadBufferSize {\n  size = minReadBufferSize\n }\n r := new(Reader)\n r.reset(make([]byte, size), rd)\n return r\n}\n\nfunc NewReader(rd io.Reader) *Reader {\n return NewReaderSize(rd, defaultBufSize)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231223120143-qbb6cw0","Type":"NodeParagraph","Properties":{"id":"20231223120143-qbb6cw0","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"阅读源码，我们可以发现这两个函数的返回值都是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"*bufio.Reader"},{"Type":"NodeText","Data":"​ 类型。"}]},{"ID":"20231223120143-xbxnjv5","Type":"NodeParagraph","Properties":{"id":"20231223120143-xbxnjv5","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"其中 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NewReader"},{"Type":"NodeText","Data":"​ 是包装了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NewReaderSize"},{"Type":"NodeText","Data":"​ 函数，给定了一个默认值 4096，设置读缓冲区的大小。"}]},{"ID":"20231223120143-yq01qyz","Type":"NodeParagraph","Properties":{"id":"20231223120143-yq01qyz","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"如果我们使用默认值，一般选择使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NewReader"},{"Type":"NodeText","Data":"​ 函数。"}]},{"ID":"20231223120143-athh7ng","Type":"NodeParagraph","Properties":{"id":"20231223120143-athh7ng","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"如果不想使用默认值，可以选择使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NewReaderSize"},{"Type":"NodeText","Data":"​ 函数。"}]},{"ID":"20231223120143-jc1cfxk","Type":"NodeParagraph","Properties":{"id":"20231223120143-jc1cfxk","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"bufio.Reader"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 提供的方法："}]},{"ID":"20231223120143-iwvcqhk","Type":"NodeParagraph","Properties":{"id":"20231223120143-iwvcqhk","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio.Reader"},{"Type":"NodeText","Data":"​ 提供了 15 个方法，我们介绍两个比较常用的方法，分别是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Read"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ReadBytes"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231223120143-nxpd6nq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231223120143-nxpd6nq","updated":"20231223125134"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func (b *Reader) Read(p []byte) (n int, err error) {\n // 省略代码 ...\n if b.r == b.w {\n  if b.err != nil {\n   return 0, b.readErr()\n  }\n  if len(p) \u003e= len(b.buf) {\n   // Large read, empty buffer.\n   // Read directly into p to avoid copy.\n   n, b.err = b.rd.Read(p)\n   if n \u003c 0 {\n    panic(errNegativeRead)\n   }\n   if n \u003e 0 {\n    b.lastByte = int(p[n-1])\n    b.lastRuneSize = -1\n   }\n   return n, b.readErr()\n  }\n  // 省略代码 ...\n  b.w += n\n }\n\n // copy as much as we can\n // Note: if the slice panics here, it is probably because\n // the underlying reader returned a bad count. See issue 49795.\n n = copy(p, b.buf[b.r:b.w])\n b.r += n\n b.lastByte = int(b.buf[b.r-1])\n b.lastRuneSize = -1\n return n, nil\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231223120143-34metl4","Type":"NodeParagraph","Properties":{"id":"20231223120143-34metl4","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"阅读源码，我们可以发现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Read"},{"Type":"NodeText","Data":"​ 方法是将缓冲区中的数据，读取到 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"p"},{"Type":"NodeText","Data":"​ 中，并返回读取的字节大小和错误。"}]},{"ID":"20231223120143-7hjiba6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231223120143-7hjiba6","updated":"20231223120143"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"func (b *Reader) ReadBytes(delim byte) ([]byte, error) {\n full, frag, n, err := b.collectFragments(delim)\n // Allocate new buffer to hold the full pieces and the fragment.\n buf := make([]byte, n)\n n = 0\n // Copy full pieces and fragment in.\n for i := range full {\n  n += copy(buf[n:], full[i])\n }\n copy(buf[n:], frag)\n return buf, err\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231223120143-j9plwm5","Type":"NodeParagraph","Properties":{"id":"20231223120143-j9plwm5","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"阅读源码，我们可以发现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ReadBytes"},{"Type":"NodeText","Data":"​ 方法是读取缓冲区中的数据截止到分隔符 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"delim"},{"Type":"NodeText","Data":"​ 的位置，并返回数据和错误。"}]},{"ID":"20231223120143-0m2chhq","Type":"NodeParagraph","Properties":{"id":"20231223120143-0m2chhq","updated":"20231223120143"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用示例："}]},{"ID":"20231223120143-qfcz8n1","Type":"NodeParagraph","Properties":{"id":"20231223120143-qfcz8n1","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Read"},{"Type":"NodeText","Data":"​ 方法"}]},{"ID":"20231223120143-ze15s34","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231223120143-ze15s34","updated":"20231223120143"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"func main() {\n f, _ := os.Open(\"/Users/frank/GolandProjects/go-package/lesson14/file.txt\")\n defer f.Close()\n r := bufio.NewReader(f)\n p := make([]byte, 12)\n index, _ := r.Read(p)\n fmt.Println(index)\n fmt.Println(string(p[:index]))\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231223120143-b0t8s2t","Type":"NodeParagraph","Properties":{"id":"20231223120143-b0t8s2t","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"需要注意的是，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"p"},{"Type":"NodeText","Data":"​ 字节切片的长度，一个中文字符是 3 个字节，一个英文字符是 1 个字节。"}]},{"ID":"20231223120143-qehsusz","Type":"NodeParagraph","Properties":{"id":"20231223120143-qehsusz","updated":"20231223120143"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ReadBytes"},{"Type":"NodeText","Data":"​ 方法"}]},{"ID":"20231223120143-ht2qqvb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231223120143-ht2qqvb","updated":"20231223120143"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"func main() {\n f, _ := os.Open(\"/Users/frank/GolandProjects/go-package/lesson14/file.txt\")\n defer f.Close()\n r := bufio.NewReader(f)\n  bs, _ := r.ReadBytes('\\n')\n fmt.Println(string(bs))\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231223120143-ps3vlxf","Type":"NodeParagraph","Properties":{"id":"20231223120143-ps3vlxf","updated":"20231223120839"},"Children":[{"Type":"NodeText","Data":"需要注意的是，分隔符参数是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"byte"},{"Type":"NodeText","Data":"​ 类型，使用单引号。 "}]},{"ID":"20231223125657-ypvaa52","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231223125657-ypvaa52","updated":"20231223125657"},"Children":[{"Type":"NodeText","Data":"总结"}]},{"ID":"20231223125657-4k9qnoq","Type":"NodeParagraph","Properties":{"id":"20231223125657-4k9qnoq","updated":"20231223125657"},"Children":[{"Type":"NodeText","Data":"本文我们以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio.Reader"},{"Type":"NodeText","Data":"​ 为例，介绍标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 的数据类型、初始化方式和提供的方法。"}]},{"ID":"20231223125657-le2e426","Type":"NodeParagraph","Properties":{"id":"20231223125657-le2e426","updated":"20231223125657"},"Children":[{"Type":"NodeText","Data":"实际上标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 使用非常简单，但是想要避免踩 “坑”，读者朋友们最好是熟读标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 的源码"},{"Type":"NodeTextMark","TextMarkType":"sup","TextMarkTextContent":"[2]"},{"Type":"NodeText","Data":"。"}]},{"ID":"20231223125711-xo2atbb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231223125711-xo2atbb","updated":"20231223125711"},"Children":[{"Type":"NodeText","Data":"参考资料"}]},{"ID":"20231223125711-1hodr4h","Type":"NodeParagraph","Properties":{"id":"20231223125711-1hodr4h","updated":"20231223125711"},"Children":[{"Type":"NodeText","Data":"[1]标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 的文档: "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"https://pkg.go.dev/bufio@go1.20.2"}]},{"ID":"20231223125711-fjqnqij","Type":"NodeParagraph","Properties":{"id":"20231223125711-fjqnqij","updated":"20231223125711"},"Children":[{"Type":"NodeText","Data":"[2]标准库 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bufio"},{"Type":"NodeText","Data":"​ 的源码: "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"https://cs.opensource.google/go/go/+/refs/tags/go1.20.2:src/bufio/"}]}]}