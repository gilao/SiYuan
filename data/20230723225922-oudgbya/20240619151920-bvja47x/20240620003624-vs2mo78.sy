{"ID":"20240620003624-vs2mo78","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f382","id":"20240620003624-vs2mo78","title":"使用Go语言中的Buffer实现高性能处理字节和字符串","type":"doc","updated":"20240620003643"},"Children":[{"ID":"20240620003643-o10cnht","Type":"NodeParagraph","Properties":{"id":"20240620003643-o10cnht","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"在Go语言标准库中，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bytes"},{"Type":"NodeText","Data":"​包提供了对byte slice ("},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"[]byte"},{"Type":"NodeText","Data":"​)的便捷操作，其中"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​是一个实现了"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"io.Reader"},{"Type":"NodeText","Data":"​和"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"io.Writer"},{"Type":"NodeText","Data":"​接口的可变大小的字节缓冲。我们通常使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​来读写数据、处理字符串和字节的过程中实现高性能的操作。"}]},{"ID":"20240620003643-miq33xp","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240620003643-miq33xp","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"Buffer的使用场景"}]},{"ID":"20240620003643-74pqwi2","Type":"NodeParagraph","Properties":{"id":"20240620003643-74pqwi2","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​在以下场景中特别有用："}]},{"ID":"20240620003643-r927odk","Type":"NodeList","ListData":{},"Properties":{"id":"20240620003643-r927odk","updated":"20240620003643"},"Children":[{"ID":"20240620003643-ndep8pm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240620003643-ndep8pm","updated":"20240620003643"},"Children":[{"ID":"20240620003643-mmk8r6x","Type":"NodeParagraph","Properties":{"id":"20240620003643-mmk8r6x","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"当需要一个字节缓冲时"}]}]},{"ID":"20240620003643-3p8fogq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240620003643-3p8fogq","updated":"20240620003643"},"Children":[{"ID":"20240620003643-vekdpqn","Type":"NodeParagraph","Properties":{"id":"20240620003643-vekdpqn","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"进行字符串的高效拼接"}]}]},{"ID":"20240620003643-1qzupsx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240620003643-1qzupsx","updated":"20240620003643"},"Children":[{"ID":"20240620003643-qj2jewi","Type":"NodeParagraph","Properties":{"id":"20240620003643-qj2jewi","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"将字节序列读入或写出到其他数据流中"}]}]},{"ID":"20240620003643-6a4stcu","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240620003643-6a4stcu","updated":"20240620003643"},"Children":[{"ID":"20240620003643-h0shp9w","Type":"NodeParagraph","Properties":{"id":"20240620003643-h0shp9w","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"处理输入输出（IO）操作时作为临时存储"}]}]}]},{"ID":"20240620003643-snutzvk","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240620003643-snutzvk","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"创建与初始化Buffer"}]},{"ID":"20240620003643-7oc76qm","Type":"NodeParagraph","Properties":{"id":"20240620003643-7oc76qm","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"创建"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​非常简单，你可以使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bytes.NewBuffer"},{"Type":"NodeText","Data":"​或直接声明："}]},{"ID":"20240620003643-oy91878","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240620003643-oy91878","updated":"20240620003643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"var b bytes.Buffer // 直接声明一个Buffer\n// 或者\nb := new(bytes.Buffer) // 使用new创建一个Buffer指针\n// 或者\nbuf := bytes.NewBuffer([]byte(\"initial string\")) // 通过给定的字节切片初始化\n\n// 也可以使用字面量初始化\nb := bytes.Buffer{}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240620003643-tiq68r6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240620003643-tiq68r6","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"常用的Buffer操作"}]},{"ID":"20240620003643-swn3c8e","Type":"NodeParagraph","Properties":{"id":"20240620003643-swn3c8e","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"以下是"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​的一些常用操作，将通过示例展示它们的用法："}]},{"ID":"20240620003643-pz26hs8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240620003643-pz26hs8","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"写入数据（Write and WriteString）"}]},{"ID":"20240620003643-gnv4tzb","Type":"NodeParagraph","Properties":{"id":"20240620003643-gnv4tzb","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"向Buffer写入数据："}]},{"ID":"20240620003643-atp4bs0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240620003643-atp4bs0","updated":"20240620003643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"b := bytes.Buffer{}\nb.Write([]byte(\"Hello\"))\nb.WriteString(\" World\")\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240620003643-coz2v56","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240620003643-coz2v56","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"读取数据（Read, ReadByte, ReadBytes, and ReadString）"}]},{"ID":"20240620003643-69al8io","Type":"NodeParagraph","Properties":{"id":"20240620003643-69al8io","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"从Buffer读取数据："}]},{"ID":"20240620003643-9k5n2vm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240620003643-9k5n2vm","updated":"20240620003643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"bufferContents, err := b.ReadBytes('\\n')\nif err != nil \u0026\u0026 err != io.EOF {\n    log.Fatal(err)\n}\n\n// 读取单个字节\nbyte, err := b.ReadByte()\n// 读取直到分隔符的数据\nline, err := b.ReadString('\\n')\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240620003643-o06hwsc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240620003643-o06hwsc","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"获取Buffer内容（Bytes and String）"}]},{"ID":"20240620003643-7p7m6tu","Type":"NodeParagraph","Properties":{"id":"20240620003643-7p7m6tu","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"获取Buffer的内容："}]},{"ID":"20240620003643-0agadsp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240620003643-0agadsp","updated":"20240620003643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"// 获取Buffer中的数据（返回[]byte）\nbytes := b.Bytes()\n\n// 获取Buffer中的数据的字符串表示\nstr := b.String()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240620003643-l5uxhym","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240620003643-l5uxhym","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"Buffer转换为Reader或Writer"}]},{"ID":"20240620003643-0nl2483","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240620003643-0nl2483","updated":"20240620003643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"// 用Buffer作为io.Reader传递\nio.Copy(os.Stdout, \u0026b)\n\n// 用Buffer作为io.Writer传递\nio.Copy(\u0026b, os.Stdin)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240620003643-k8yzua1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240620003643-k8yzua1","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"Buffer重置（Reset）"}]},{"ID":"20240620003643-qe89era","Type":"NodeParagraph","Properties":{"id":"20240620003643-qe89era","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"当你想复用Buffer而不需要里面已有的数据时："}]},{"ID":"20240620003643-olsmn55","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240620003643-olsmn55","updated":"20240620003643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"b.Reset()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240620003643-99e483c","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240620003643-99e483c","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"Buffer的实现"}]},{"ID":"20240620003643-fx2sq3l","Type":"NodeParagraph","Properties":{"id":"20240620003643-fx2sq3l","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​内部通过一个"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"[]byte"},{"Type":"NodeText","Data":"​字节切片来实现。它具备自动扩容的能力，这意味着你在使用时不需要担心容量问题，可以无限制地往"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​中写入数据。"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​还实现了"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"io.ReaderFrom"},{"Type":"NodeText","Data":"​和"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"io.WriterTo"},{"Type":"NodeText","Data":"​接口，这使得它能够与其他IO操作兼容，非常方便地读取或写入其他数据流中。"}]},{"ID":"20240620003643-2rxdgt4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240620003643-2rxdgt4","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"Buffer的编码与解码操作"}]},{"ID":"20240620003643-voqv6eu","Type":"NodeParagraph","Properties":{"id":"20240620003643-voqv6eu","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bytes"},{"Type":"NodeText","Data":"​包和"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"encoding"},{"Type":"NodeText","Data":"​相关的子包可以配合使用来进行数据的编解码。例如："}]},{"ID":"20240620003643-d3xudas","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240620003643-d3xudas","updated":"20240620003643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"var b bytes.Buffer\n\n// 将数据编码为JSON并写入Buffer\nencoder := json.NewEncoder(\u0026b)\nerr := encoder.Encode(data)\nif err != nil {\n    log.Fatal(err)\n}\n\n// 从Buffer中读取并解码JSON数据\ndecoder := json.NewDecoder(\u0026b)\nerr = decoder.Decode(\u0026target)\nif err != nil {\n    log.Fatal(err)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240620003643-tssme8y","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240620003643-tssme8y","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"结语"}]},{"ID":"20240620003643-yw1rzql","Type":"NodeParagraph","Properties":{"id":"20240620003643-yw1rzql","updated":"20240620003643"},"Children":[{"Type":"NodeText","Data":"使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​比直接操作字节切片更加方便高效，特别是在需要拼接字符串或在数据流之间传递数据时。由于"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​自动管理内存，它还可以显著减少内存分配的开销。不论你是在处理IO、进行文本处理，还是在进行网络编程，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​都是一个非常实用的工具，能够提高程序的性能和开发效率。在实际开发中灵活运用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Buffer"},{"Type":"NodeText","Data":"​，将使你的代码更为简洁和高效。"}]}]}