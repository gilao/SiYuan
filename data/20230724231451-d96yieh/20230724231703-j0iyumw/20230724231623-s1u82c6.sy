{"ID":"20230724231623-s1u82c6","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231623-s1u82c6","title":"runtime-debug","updated":"20230724231623"},"Children":[{"ID":"20230724231624-axbnemy","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231624-axbnemy","updated":"20230724231624"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"runtime-debug"}]},{"ID":"20230724231625-brlcf16","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231625-brlcf16","updated":"20230724231625"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"runtime/debug\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231626-gyq84td","Type":"NodeParagraph","Properties":{"id":"20230724231626-gyq84td","updated":"20230724231626"},"Children":[{"Type":"NodeText","Data":"Package debug contains facilities for programs to debug themselves while they are running."}]},{"ID":"20230724231627-x6p273c","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231627-x6p273c","updated":"20230724231627"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/runtime/debug/garbage.go?name=release#103","TextMarkTextContent":"FreeOSMemory"}]},{"ID":"20230724231628-kv4slr2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231628-kv4slr2","updated":"20230724231628"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func FreeOSMemory()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231629-pnpl47n","Type":"NodeParagraph","Properties":{"id":"20230724231629-pnpl47n","updated":"20230724231629"},"Children":[{"Type":"NodeText","Data":"FreeOSMemory强制进行一次垃圾收集，以释放尽量多的内存回操作系统。（即使没有调用，运行时环境也会在后台任务里逐渐将内存释放给系统）"}]},{"ID":"20230724231630-2qmiyf9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231630-2qmiyf9","updated":"20230724231630"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/runtime/debug/garbage.go?name=release#93","TextMarkTextContent":"SetGCPercent"}]},{"ID":"20230724231631-g78ex4t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231631-g78ex4t","updated":"20230724231631"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func SetGCPercent(percent int) int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231632-l2pv5cd","Type":"NodeParagraph","Properties":{"id":"20230724231632-l2pv5cd","updated":"20230724231632"},"Children":[{"Type":"NodeText","Data":"SetGCPercent设定垃圾收集的目标百分比：当新申请的内存大小占前次垃圾收集剩余可用内存大小的比率达到设定值时，就会触发垃圾收集。SetGCPercent返回之前的设定。初始值设定为环境变量GOGC的值；如果没有设置该环境变量，初始值为100。percent参数如果是负数值，会关闭垃圾收集。"}]},{"ID":"20230724231633-m3jztv8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231633-m3jztv8","updated":"20230724231633"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/runtime/debug/garbage.go?name=release#117","TextMarkTextContent":"SetMaxStack"}]},{"ID":"20230724231634-664sc27","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231634-664sc27","updated":"20230724231634"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func SetMaxStack(bytes int) int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231635-3vbq09f","Type":"NodeParagraph","Properties":{"id":"20230724231635-3vbq09f","updated":"20230724231635"},"Children":[{"Type":"NodeText","Data":"SetMaxStack设置该以被单个go程调用栈可使用的内存最大值。如果任何go程在增加其调用栈时超出了该限制，程序就会崩溃。SetMaxStack返回之前的设置。默认设置在32位系统是250MB，在64位系统是1GB。"}]},{"ID":"20230724231636-yy00fkk","Type":"NodeParagraph","Properties":{"id":"20230724231636-yy00fkk","updated":"20230724231636"},"Children":[{"Type":"NodeText","Data":"SetMaxStack主要用于限制无限递归的go程带来的灾难。 它只会限制未来增长的调用栈。"}]},{"ID":"20230724231637-bp7twhm","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231637-bp7twhm","updated":"20230724231637"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/runtime/debug/garbage.go?name=release#135","TextMarkTextContent":"SetMaxThreads"}]},{"ID":"20230724231638-1t9dv6y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231638-1t9dv6y","updated":"20230724231638"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func SetMaxThreads(threads int) int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231639-aniwi8a","Type":"NodeParagraph","Properties":{"id":"20230724231639-aniwi8a","updated":"20230724231639"},"Children":[{"Type":"NodeText","Data":"SetMaxThreads设置go程序可以使用的最大操作系统线程数。如果程序试图使用超过该限制的线程数，就会导致程序崩溃。SetMaxThreads返回之前的设置，初始设置为10000个线程。"}]},{"ID":"20230724231640-fhopq38","Type":"NodeParagraph","Properties":{"id":"20230724231640-fhopq38","updated":"20230724231640"},"Children":[{"Type":"NodeText","Data":"该限制控制操作系统线程数，而非go程数。go程序只有在一个go程准备要执行，但现有的线程都阻塞在系统调用、cgo调用或被runtime.LockOSThread函数阻塞在其他go程时，才会创建一个新的线程。"}]},{"ID":"20230724231641-387rm4r","Type":"NodeParagraph","Properties":{"id":"20230724231641-387rm4r","updated":"20230724231641"},"Children":[{"Type":"NodeText","Data":"SetMaxThreads主要用于限制程序无限制的创造线程导致的灾难。目的是让程序在干掉操作系统之前，先干掉它自己。"}]},{"ID":"20230724231642-l676r2b","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231642-l676r2b","updated":"20230724231642"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/runtime/debug/garbage.go?name=release#148","TextMarkTextContent":"SetPanicOnFault"}]},{"ID":"20230724231643-xeynsgp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231643-xeynsgp","updated":"20230724231643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func SetPanicOnFault(enabled bool) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231644-ikkyd3l","Type":"NodeParagraph","Properties":{"id":"20230724231644-ikkyd3l","updated":"20230724231644"},"Children":[{"Type":"NodeText","Data":"SetPanicOnFault控制程序在不期望（非nil）的地址出错时的运行时行为。这些错误一般是因为运行时内存破坏的bug引起的，因此默认反应是使程序崩溃。使用内存映射的文件或进行内存的不安全操作的程序可能会在非nil的地址出现错误；SetPanicOnFault允许这些程序请求运行时只触发一个panic，而不是崩溃。SetPanicOnFault只用于当前的go程。它返回之前的设置。"}]},{"ID":"20230724231645-7t0oj4z","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231645-7t0oj4z","updated":"20230724231645"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/runtime/debug/garbage.go?name=release#14","TextMarkTextContent":"GCStats"}]},{"ID":"20230724231646-yypktdm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231646-yypktdm","updated":"20230724231646"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type GCStats struct {\n    LastGC         time.Time       // 最近一次垃圾收集的时间\n    NumGC          int64           // 垃圾收集的次数\n    PauseTotal     time.Duration   // 所有暂停收集垃圾消耗的总时间\n    Pause          []time.Duration // 每次暂停收集垃圾的消耗的时间\n    PauseQuantiles []time.Duration\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231647-932jq3a","Type":"NodeParagraph","Properties":{"id":"20230724231647-932jq3a","updated":"20230724231647"},"Children":[{"Type":"NodeText","Data":"GCStats收集了近期垃圾收集的信息。"}]},{"ID":"20230724231648-blnfanx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231648-blnfanx","updated":"20230724231648"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/runtime/debug/garbage.go?name=release#38","TextMarkTextContent":"ReadGCStats"}]},{"ID":"20230724231649-e1tp425","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231649-e1tp425","updated":"20230724231649"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ReadGCStats(stats *GCStats)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231650-iyxynn2","Type":"NodeParagraph","Properties":{"id":"20230724231650-iyxynn2","updated":"20230724231650"},"Children":[{"Type":"NodeText","Data":"ReadGCStats将垃圾收集信息填入stats里。stats.Pause字段的长度是依赖于系统的；stats.Pause切片如果长度足够会被重用，否则会重新申请。ReadGCStats可能会使用stats.Pause切片的全部容量。"}]},{"ID":"20230724231651-ntwh1sh","Type":"NodeParagraph","Properties":{"id":"20230724231651-ntwh1sh","updated":"20230724231651"},"Children":[{"Type":"NodeText","Data":"如果stats.PauseQuantiles字段是非空的，ReadGCStats会在其中填写说明暂停时间分配的分位数。例如，如果len(stats.PauseQuantiles)为5，该字段会被填写上0%、25%、50%、75%、100%位置的分位数（就是说，不大于该位置暂停时间的暂停次数占总暂停次数的比例分别是0%、25%……）"}]},{"ID":"20230724231652-gl0mnmn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231652-gl0mnmn","updated":"20230724231652"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/runtime/debug/garbage.go?name=release#153","TextMarkTextContent":"WriteHeapDump"}]},{"ID":"20230724231653-fhozray","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231653-fhozray","updated":"20230724231653"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func WriteHeapDump(fd uintptr)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231654-tscyapd","Type":"NodeParagraph","Properties":{"id":"20230724231654-tscyapd","updated":"20230724231654"},"Children":[{"Type":"NodeText","Data":"WriteHeapDump将内存分配堆和其中对象的描述写入给定文件描述符fd指定的文件。"}]},{"ID":"20230724231655-pf3nyn0","Type":"NodeParagraph","Properties":{"id":"20230724231655-pf3nyn0","updated":"20230724231655"},"Children":[{"Type":"NodeText","Data":"堆转储格式参见http://golang.org/s/go13heapdump"}]},{"ID":"20230724231656-zyl06bn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231656-zyl06bn","updated":"20230724231656"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/runtime/debug/stack.go?name=release#35","TextMarkTextContent":"Stack"}]},{"ID":"20230724231657-qucqtw6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231657-qucqtw6","updated":"20230724231657"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Stack() []byte\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231658-4s2uymw","Type":"NodeParagraph","Properties":{"id":"20230724231658-4s2uymw","updated":"20230724231658"},"Children":[{"Type":"NodeText","Data":"Stack 返回格式化的go程的调用栈踪迹。 对于每一个调用栈，它包括原文件的行信息和PC值；对go函数还会尝试获取调用该函数的函数或方法，及调用所在行的文本。"}]},{"ID":"20230724231659-s9j4sjg","Type":"NodeParagraph","Properties":{"id":"20230724231659-s9j4sjg","updated":"20230724231659"},"Children":[{"Type":"NodeText","Data":"此函数已废弃。请使用runtime包中的Stack函数代替。"}]},{"ID":"20230724231660-7cz8y1o","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231660-7cz8y1o","updated":"20230724231660"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/runtime/debug/stack.go?name=release#25","TextMarkTextContent":"PrintStack"}]},{"ID":"20230724231661-6zm7wni","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231661-6zm7wni","updated":"20230724231661"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func PrintStack()\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231662-ih1ufr8","Type":"NodeParagraph","Properties":{"id":"20230724231662-ih1ufr8","updated":"20230724231662"},"Children":[{"Type":"NodeText","Data":"PrintStack将Stack返回信息打印到标准错误输出。"}]}]}