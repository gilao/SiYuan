{"ID":"20230724231542-og54j4g","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231542-og54j4g","title":"net-http-httputil","updated":"20230724231542"},"Children":[{"ID":"20230724231543-7r6fdi7","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231543-7r6fdi7","updated":"20230724231543"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"net-http-httputil"}]},{"ID":"20230724231544-edkk1vh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231544-edkk1vh","updated":"20230724231544"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"net/http/httputil\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231545-0pbkw0t","Type":"NodeParagraph","Properties":{"id":"20230724231545-0pbkw0t","updated":"20230724231545"},"Children":[{"Type":"NodeText","Data":"httputil包提供了HTTP公用函数，是对net/http包的更常见函数的补充。"}]},{"ID":"20230724231546-jsanq6x","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231546-jsanq6x","updated":"20230724231546"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Variables"}]},{"ID":"20230724231547-4qpwxdz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231547-4qpwxdz","updated":"20230724231547"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var (\n    ErrPersistEOF = \u0026http.ProtocolError{ErrorString: \"persistent connection closed\"}\n    ErrClosed     = \u0026http.ProtocolError{ErrorString: \"connection closed by user\"}\n    ErrPipeline   = \u0026http.ProtocolError{ErrorString: \"pipeline error\"}\n)\nvar ErrLineTooLong = errors.New(\"header line too long\")\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231548-bvtngm8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231548-bvtngm8","updated":"20230724231548"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/dump.go?name=release#176","TextMarkTextContent":"DumpRequest"}]},{"ID":"20230724231549-xdn1rbb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231549-xdn1rbb","updated":"20230724231549"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func DumpRequest(req *http.Request, body bool) (dump []byte, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231550-oqkjuhp","Type":"NodeParagraph","Properties":{"id":"20230724231550-oqkjuhp","updated":"20230724231550"},"Children":[{"Type":"NodeText","Data":"DumpRequest返回req的和被服务端接收到时一样的有线表示，可选地包括请求的主体，用于debug。本函数在语义上是无操作的，但为了转储请求主体，他会读取主体的数据到内存中，并将req.Body修改为指向内存中的拷贝。req的字段的使用细节请参见http.Request的文档。"}]},{"ID":"20230724231551-tnvb1dx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231551-tnvb1dx","updated":"20230724231551"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/dump.go?name=release#61","TextMarkTextContent":"DumpRequestOut"}]},{"ID":"20230724231552-r1qsfoi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231552-r1qsfoi","updated":"20230724231552"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func DumpRequestOut(req *http.Request, body bool) ([]byte, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231553-rhia3px","Type":"NodeParagraph","Properties":{"id":"20230724231553-rhia3px","updated":"20230724231553"},"Children":[{"Type":"NodeText","Data":"DumpRequestOut类似DumpRequest，但会包括标准http.Transport类型添加的头域，如User-Agent。"}]},{"ID":"20230724231554-op4qjl9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231554-op4qjl9","updated":"20230724231554"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/dump.go?name=release#251","TextMarkTextContent":"DumpResponse"}]},{"ID":"20230724231555-lsep9mh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231555-lsep9mh","updated":"20230724231555"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func DumpResponse(resp *http.Response, body bool) (dump []byte, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231556-9inq2zx","Type":"NodeParagraph","Properties":{"id":"20230724231556-9inq2zx","updated":"20230724231556"},"Children":[{"Type":"NodeText","Data":"DumpResponse类似DumpRequest，但转储的是一个回复。"}]},{"ID":"20230724231557-9hry9be","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231557-9hry9be","updated":"20230724231557"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/httputil.go?name=release#17","TextMarkTextContent":"NewChunkedReader"}]},{"ID":"20230724231558-7qxg4fu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231558-7qxg4fu","updated":"20230724231558"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewChunkedReader(r io.Reader) io.Reader\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231559-flspx7z","Type":"NodeParagraph","Properties":{"id":"20230724231559-flspx7z","updated":"20230724231559"},"Children":[{"Type":"NodeText","Data":"NewChunkedReader返回一个io.Reader。返回值的Read方法会将从r读取的采用HTTP \"chunked\"传输编码的数据翻译之后返回。当读取到最后的零长chunk时，返回值的Read会返回io.EOF。"}]},{"ID":"20230724231560-1x1i6ez","Type":"NodeParagraph","Properties":{"id":"20230724231560-1x1i6ez","updated":"20230724231560"},"Children":[{"Type":"NodeText","Data":"NewChunkedReader在正常的应用中是不需要的，http包在读取回复主体时会自动将\"chunked\"编码进行解码。"}]},{"ID":"20230724231561-60r8ktu","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231561-60r8ktu","updated":"20230724231561"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/httputil.go?name=release#30","TextMarkTextContent":"NewChunkedWriter"}]},{"ID":"20230724231562-31k4c41","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231562-31k4c41","updated":"20230724231562"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewChunkedWriter(w io.Writer) io.WriteCloser\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231563-bjqvy7m","Type":"NodeParagraph","Properties":{"id":"20230724231563-bjqvy7m","updated":"20230724231563"},"Children":[{"Type":"NodeText","Data":"NewChunkedWriter返回一个io.Writer。返回值的Write方法会将写入的数据编码为HTTP \"chunked\"传输编码格式后再写入w。其Close方法会将最后的零长chunk写入w，标注数据流的结尾。"}]},{"ID":"20230724231564-wm66m5e","Type":"NodeParagraph","Properties":{"id":"20230724231564-wm66m5e","updated":"20230724231564"},"Children":[{"Type":"NodeText","Data":"正常的应用中不需要NewChunkedWriter，http包会在处理器未设置Content-Length头时主动进行chunked编码。在处理器内部使用本函数会导致双重chunked或者有Content-Length头的chunked，两个都是错误的。"}]},{"ID":"20230724231565-yj2s76t","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231565-yj2s76t","updated":"20230724231565"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#229","TextMarkTextContent":"ClientConn"}]},{"ID":"20230724231566-586r8r2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231566-586r8r2","updated":"20230724231566"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ClientConn struct {\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231567-xpwwsgy","Type":"NodeParagraph","Properties":{"id":"20230724231567-xpwwsgy","updated":"20230724231567"},"Children":[{"Type":"NodeText","Data":"ClientConn类型会在尊重HTTP keepalive逻辑的前提下，在下层的连接上发送请求和接收回复的头域。ClientConn类型支持通过Hijack方法劫持下层连接，取回对下层连接的控制权，按照调用者的预期处理该连接。"}]},{"ID":"20230724231568-4ozsbix","Type":"NodeParagraph","Properties":{"id":"20230724231568-4ozsbix","updated":"20230724231568"},"Children":[{"Type":"NodeText","Data":"ClientConn是旧的、低层次的。应用程序应使用net/http包的Client类型和Transport类型代替它。"}]},{"ID":"20230724231569-ogavg9j","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231569-ogavg9j","updated":"20230724231569"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#247","TextMarkTextContent":"NewClientConn"}]},{"ID":"20230724231570-u1jpok6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231570-u1jpok6","updated":"20230724231570"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewClientConn(c net.Conn, r *bufio.Reader) *ClientConn\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231571-7bnq8ey","Type":"NodeParagraph","Properties":{"id":"20230724231571-7bnq8ey","updated":"20230724231571"},"Children":[{"Type":"NodeText","Data":"NewClientConn返回一个对c进行读写的ClientConn。如果r不是nil，它是从c读取时使用的缓冲。"}]},{"ID":"20230724231572-jp61w0e","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231572-jp61w0e","updated":"20230724231572"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#264","TextMarkTextContent":"NewProxyClientConn"}]},{"ID":"20230724231573-500ic65","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231573-500ic65","updated":"20230724231573"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewProxyClientConn(c net.Conn, r *bufio.Reader) *ClientConn\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231574-ss2r57j","Type":"NodeParagraph","Properties":{"id":"20230724231574-ss2r57j","updated":"20230724231574"},"Children":[{"Type":"NodeText","Data":"NewProxyClientConn类似NewClientConn，但使用Request.WriteProxy方法将请求写入c。"}]},{"ID":"20230724231575-45ziiwo","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231575-45ziiwo","updated":"20230724231575"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ClientConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#351","TextMarkTextContent":"Pending"}]},{"ID":"20230724231576-wynbohy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231576-wynbohy","updated":"20230724231576"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (cc *ClientConn) Pending() int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231577-2a26jec","Type":"NodeParagraph","Properties":{"id":"20230724231577-2a26jec","updated":"20230724231577"},"Children":[{"Type":"NodeText","Data":"Pending返回该连接上已发送但还未接收到回复的请求的数量。"}]},{"ID":"20230724231578-vngrbri","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231578-vngrbri","updated":"20230724231578"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ClientConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#298","TextMarkTextContent":"Write"}]},{"ID":"20230724231579-s6s3lv5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231579-s6s3lv5","updated":"20230724231579"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (cc *ClientConn) Write(req *http.Request) (err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231580-0f0q9f6","Type":"NodeParagraph","Properties":{"id":"20230724231580-0f0q9f6","updated":"20230724231580"},"Children":[{"Type":"NodeText","Data":"Write写入一个请求。如果该连接已经在HTTP keepalive逻辑上关闭了（表示该连接不会再发送新的请求）返回ErrPersistEOF。如果req.Close设置为真，keepalive连接会在这次请求后逻辑上关闭，并通知远端的服务器。ErrUnexpectedEOF表示远端关闭了下层的TCP连接，这一般被视为优雅的（正常的）关闭。"}]},{"ID":"20230724231581-0g91zpn","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231581-0g91zpn","updated":"20230724231581"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ClientConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#361","TextMarkTextContent":"Read"}]},{"ID":"20230724231582-i628opb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231582-i628opb","updated":"20230724231582"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (cc *ClientConn) Read(req *http.Request) (resp *http.Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231583-zyl2qwf","Type":"NodeParagraph","Properties":{"id":"20230724231583-zyl2qwf","updated":"20230724231583"},"Children":[{"Type":"NodeText","Data":"Read读取下一个回复。合法的回复可能会和ErrPersistEOF一起返回，这表示远端要求该请求是最后一个被服务的请求。Read可以和Write同时调用，但不能和另一个Read同时调用。"}]},{"ID":"20230724231584-3oapa7o","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231584-3oapa7o","updated":"20230724231584"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ClientConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#423","TextMarkTextContent":"Do"}]},{"ID":"20230724231585-nku2rta","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231585-nku2rta","updated":"20230724231585"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (cc *ClientConn) Do(req *http.Request) (resp *http.Response, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231586-xit3uvi","Type":"NodeParagraph","Properties":{"id":"20230724231586-xit3uvi","updated":"20230724231586"},"Children":[{"Type":"NodeText","Data":"Do是一个便利方法，它会写入一个请求，并读取一个回复。（能不能保证二者对应？不知道）"}]},{"ID":"20230724231587-t60ytpd","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231587-t60ytpd","updated":"20230724231587"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ClientConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#274","TextMarkTextContent":"Hijack"}]},{"ID":"20230724231588-n87xv6q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231588-n87xv6q","updated":"20230724231588"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (cc *ClientConn) Hijack() (c net.Conn, r *bufio.Reader)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231589-64nyvji","Type":"NodeParagraph","Properties":{"id":"20230724231589-64nyvji","updated":"20230724231589"},"Children":[{"Type":"NodeText","Data":"Hijack拆开ClientConn返回下层的连接和读取侧的缓冲，其中可能有部分剩余的数据。Hijack可以在调用者自身或者其Read方法发出keepalive逻辑的终止信号之前调用。调用者不应在Write或Read执行过程中调用Hijack。"}]},{"ID":"20230724231590-7x4dyll","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231590-7x4dyll","updated":"20230724231590"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ClientConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#285","TextMarkTextContent":"Close"}]},{"ID":"20230724231591-z053vqu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231591-z053vqu","updated":"20230724231591"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (cc *ClientConn) Close() error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231592-bto5nq1","Type":"NodeParagraph","Properties":{"id":"20230724231592-bto5nq1","updated":"20230724231592"},"Children":[{"Type":"NodeText","Data":"Close调用Hijack，然后关闭下层的连接。"}]},{"ID":"20230724231593-6z7vyz5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231593-6z7vyz5","updated":"20230724231593"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#36","TextMarkTextContent":"ServerConn"}]},{"ID":"20230724231594-5uw3lqp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231594-5uw3lqp","updated":"20230724231594"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ServerConn struct {\n    // 内含隐藏或非导出字段\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231595-qa293fi","Type":"NodeParagraph","Properties":{"id":"20230724231595-qa293fi","updated":"20230724231595"},"Children":[{"Type":"NodeText","Data":"ServerConn类型在下层的连接上接收请求和发送回复，直到HTTP keepalive逻辑结束。ServerConn类型支持通过Hijack方法劫持下层连接，取回对下层连接的控制权，按照调用者的预期处理该连接。ServerConn支持管道内套，例如，请求可以不和回复的发送同步的读取（但仍按照相同的顺序）。"}]},{"ID":"20230724231596-itjsk58","Type":"NodeParagraph","Properties":{"id":"20230724231596-itjsk58","updated":"20230724231596"},"Children":[{"Type":"NodeText","Data":"ServerConn是旧的、低层次的。应用程序应使用net/http包的Server类型代替它。"}]},{"ID":"20230724231597-p65vbhx","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231597-p65vbhx","updated":"20230724231597"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#53","TextMarkTextContent":"NewServerConn"}]},{"ID":"20230724231598-54fvs7b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231598-54fvs7b","updated":"20230724231598"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewServerConn(c net.Conn, r *bufio.Reader) *ServerConn\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231599-eoxe489","Type":"NodeParagraph","Properties":{"id":"20230724231599-eoxe489","updated":"20230724231599"},"Children":[{"Type":"NodeText","Data":"NewServerConn返回一个新的从c读写的ServerConn。如果r补位nil，它将作为从c读取时的缓冲。"}]},{"ID":"20230724231600-0tg0ksh","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231600-0tg0ksh","updated":"20230724231600"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ServerConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#163","TextMarkTextContent":"Pending"}]},{"ID":"20230724231601-xzp6tbt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231601-xzp6tbt","updated":"20230724231601"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (sc *ServerConn) Pending() int\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231602-3hktygo","Type":"NodeParagraph","Properties":{"id":"20230724231602-3hktygo","updated":"20230724231602"},"Children":[{"Type":"NodeText","Data":"Pending返回该连接上已接收到但还未回复的请求的数量。"}]},{"ID":"20230724231603-1fhf17p","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231603-1fhf17p","updated":"20230724231603"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ServerConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#87","TextMarkTextContent":"Read"}]},{"ID":"20230724231604-u2h795n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231604-u2h795n","updated":"20230724231604"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (sc *ServerConn) Read() (req *http.Request, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231605-ezy3pg6","Type":"NodeParagraph","Properties":{"id":"20230724231605-ezy3pg6","updated":"20230724231605"},"Children":[{"Type":"NodeText","Data":"Read读取下一个请求。如果它优雅的决定不会再有更多的请求（例如，在HTTP/1.0连接的第一个请求之后，或者HTTP/1.1的一个具有\" Connection:close \"头的请求之后），会返回ErrPersistEOF。"}]},{"ID":"20230724231606-ey26v30","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231606-ey26v30","updated":"20230724231606"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ServerConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#172","TextMarkTextContent":"Write"}]},{"ID":"20230724231607-ale93lx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231607-ale93lx","updated":"20230724231607"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (sc *ServerConn) Write(req *http.Request, resp *http.Response) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231608-t7tovf8","Type":"NodeParagraph","Properties":{"id":"20230724231608-t7tovf8","updated":"20230724231608"},"Children":[{"Type":"NodeText","Data":"Write写入req的回复resp。如要优雅的关闭该连接，可以设置resp.Close字段为真。Write方法应该尽量执行（以回复尽量多的请求），直到Write本身返回错误，而不应考虑读取侧返回的任何错误。"}]},{"ID":"20230724231609-u1ysfbj","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231609-u1ysfbj","updated":"20230724231609"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ServerConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#64","TextMarkTextContent":"Hijack"}]},{"ID":"20230724231610-ed0s4im","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231610-ed0s4im","updated":"20230724231610"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (sc *ServerConn) Hijack() (c net.Conn, r *bufio.Reader)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231611-xd9hbs8","Type":"NodeParagraph","Properties":{"id":"20230724231611-xd9hbs8","updated":"20230724231611"},"Children":[{"Type":"NodeText","Data":"Hijack拆开ServerConn返回下层的连接和读取侧的缓冲，其中可能有部分剩余的数据。Hijack可以在调用者自身或者其Read方法发出keepalive逻辑的终止信号之前调用。调用者不应在Write或Read执行过程中调用Hijack。"}]},{"ID":"20230724231612-zsxwz7v","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231612-zsxwz7v","updated":"20230724231612"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ServerConn) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/persist.go?name=release#75","TextMarkTextContent":"Close"}]},{"ID":"20230724231613-kozs871","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231613-kozs871","updated":"20230724231613"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (sc *ServerConn) Close() error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231614-x80tii9","Type":"NodeParagraph","Properties":{"id":"20230724231614-x80tii9","updated":"20230724231614"},"Children":[{"Type":"NodeText","Data":"Close调用Hijack，然后关闭下层的连接。"}]},{"ID":"20230724231615-yerqhwz","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231615-yerqhwz","updated":"20230724231615"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/reverseproxy.go?name=release#27","TextMarkTextContent":"ReverseProxy"}]},{"ID":"20230724231616-0021nwk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231616-0021nwk","updated":"20230724231616"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type ReverseProxy struct {\n    // Director必须是将请求修改为新的请求的函数。\n    // 修改后的请求会使用Transport发送，得到的回复会不经修改的返回给客户端。\n    Director func(*http.Request)\n    // Transport用于执行代理请求。\n    // 如果本字段为nil，会使用http.DefaultTransport。\n    Transport http.RoundTripper\n    // FlushInterval指定拷贝回复的主体时将数据刷新给客户端的时间间隔。\n    // 如果本字段为零值，不会进行周期的刷新。（拷贝完回复主体后再刷新）\n    FlushInterval time.Duration\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231617-mngl40b","Type":"NodeParagraph","Properties":{"id":"20230724231617-mngl40b","updated":"20230724231617"},"Children":[{"Type":"NodeText","Data":"ReverseProxy是一个HTTP处理器，它接收一个请求，发送给另一个服务端，将回复转发给客户端。"}]},{"ID":"20230724231618-nmhv368","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231618-nmhv368","updated":"20230724231618"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/reverseproxy.go?name=release#61","TextMarkTextContent":"NewSingleHostReverseProxy"}]},{"ID":"20230724231619-8hwnznx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231619-8hwnznx","updated":"20230724231619"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func NewSingleHostReverseProxy(target *url.URL) *ReverseProxy\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231620-guyt821","Type":"NodeParagraph","Properties":{"id":"20230724231620-guyt821","updated":"20230724231620"},"Children":[{"Type":"NodeText","Data":"NewSingleHostReverseProxy返回一个新的ReverseProxy。返回值会将请求的URL重写为target参数提供的协议、主机和基路径。如果target参数的Path字段为\"/base\"，接收到的请求的URL.Path为\"/dir\"，修改后的请求的URL.Path将会是\"/base/dir\"。"}]},{"ID":"20230724231621-9y3d94s","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230724231621-9y3d94s","updated":"20230724231621"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func (*ReverseProxy) "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/net/http/httputil/reverseproxy.go?name=release#97","TextMarkTextContent":"ServeHTTP"}]},{"ID":"20230724231622-xb0h41t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231622-xb0h41t","updated":"20230724231622"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func (p *ReverseProxy) ServeHTTP(rw http.ResponseWriter, req *http.Request)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]}