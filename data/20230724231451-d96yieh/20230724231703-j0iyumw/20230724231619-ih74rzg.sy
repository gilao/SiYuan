{"ID":"20230724231619-ih74rzg","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231619-ih74rzg","title":"path","updated":"20230724231619"},"Children":[{"ID":"20230724231620-hopxmb5","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231620-hopxmb5","updated":"20230724231620"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"package path"}]},{"ID":"20230724231621-6xhhsog","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231621-6xhhsog","updated":"20230724231621"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"path\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231622-7yktlri","Type":"NodeParagraph","Properties":{"id":"20230724231622-7yktlri","updated":"20230724231622"},"Children":[{"Type":"NodeText","Data":"path实现了对斜杠分隔的路径的实用操作函数。"}]},{"ID":"20230724231623-3k4fy6y","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231623-3k4fy6y","updated":"20230724231623"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Variables"}]},{"ID":"20230724231624-fm4fn22","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231624-fm4fn22","updated":"20230724231624"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var ErrBadPattern = errors.New(\"syntax error in pattern\")\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231625-lbd0mjz","Type":"NodeParagraph","Properties":{"id":"20230724231625-lbd0mjz","updated":"20230724231625"},"Children":[{"Type":"NodeText","Data":"ErrBadPattern表示一个glob模式匹配字符串的格式错误。"}]},{"ID":"20230724231626-4lbu6li","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231626-4lbu6li","updated":"20230724231626"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/path.go?name=release#196","TextMarkTextContent":"IsAbs"}]},{"ID":"20230724231627-9p2prgw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231627-9p2prgw","updated":"20230724231627"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func IsAbs(path string) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231628-pjhh5j9","Type":"NodeParagraph","Properties":{"id":"20230724231628-pjhh5j9","updated":"20230724231628"},"Children":[{"Type":"NodeText","Data":"IsAbs返回路径是否是一个绝对路径。"}]},{"ID":"20230724231629-eax5iuq","Type":"NodeParagraph","Properties":{"id":"20230724231629-eax5iuq","updated":"20230724231629"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231630-94xe8ry","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231630-94xe8ry","updated":"20230724231630"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/path.go?name=release#142","TextMarkTextContent":"Split"}]},{"ID":"20230724231631-5zmg3cq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231631-5zmg3cq","updated":"20230724231631"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Split(path string) (dir, file string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231632-3rvbuzb","Type":"NodeParagraph","Properties":{"id":"20230724231632-3rvbuzb","updated":"20230724231632"},"Children":[{"Type":"NodeText","Data":"Split函数将路径从最后一个斜杠后面位置分隔为两个部分（dir和file）并返回。如果路径中没有斜杠，函数返回值dir会设为空字符串，file会设为path。两个返回值满足path == dir+file。"}]},{"ID":"20230724231633-205dxm6","Type":"NodeParagraph","Properties":{"id":"20230724231633-205dxm6","updated":"20230724231633"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231634-r3w0tal","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231634-r3w0tal","updated":"20230724231634"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/path.go?name=release#150","TextMarkTextContent":"Join"}]},{"ID":"20230724231635-o4n5ws8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231635-o4n5ws8","updated":"20230724231635"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Join(elem ...string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231636-bos81ep","Type":"NodeParagraph","Properties":{"id":"20230724231636-bos81ep","updated":"20230724231636"},"Children":[{"Type":"NodeText","Data":"Join函数可以将任意数量的路径元素放入一个单一路径里，会根据需要添加斜杠。结果是经过简化的，所有的空字符串元素会被忽略。"}]},{"ID":"20230724231637-0mytgxv","Type":"NodeParagraph","Properties":{"id":"20230724231637-0mytgxv","updated":"20230724231637"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231638-golb6wf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231638-golb6wf","updated":"20230724231638"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/path.go?name=release#207","TextMarkTextContent":"Dir"}]},{"ID":"20230724231639-vjdvghm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231639-vjdvghm","updated":"20230724231639"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Dir(path string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231640-o21p9jl","Type":"NodeParagraph","Properties":{"id":"20230724231640-o21p9jl","updated":"20230724231640"},"Children":[{"Type":"NodeText","Data":"Dir返回路径除去最后一个路径元素的部分，即该路径最后一个元素所在的目录。在使用Split去掉最后一个元素后，会简化路径并去掉末尾的斜杠。如果路径是空字符串，会返回\".\"；如果路径由1到多个斜杠后跟0到多个非斜杠字符组成，会返回\"/\"；其他任何情况下都不会返回以斜杠结尾的路径。"}]},{"ID":"20230724231641-uter1i1","Type":"NodeParagraph","Properties":{"id":"20230724231641-uter1i1","updated":"20230724231641"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231642-50482zr","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231642-50482zr","updated":"20230724231642"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/path.go?name=release#176","TextMarkTextContent":"Base"}]},{"ID":"20230724231643-iqvq5g0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231643-iqvq5g0","updated":"20230724231643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Base(path string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231644-0br75o1","Type":"NodeParagraph","Properties":{"id":"20230724231644-0br75o1","updated":"20230724231644"},"Children":[{"Type":"NodeText","Data":"Base函数返回路径的最后一个元素。在提取元素前会求掉末尾的斜杠。如果路径是\"\"，会返回\".\"；如果路径是只有一个斜杆构成，会返回\"/\"。"}]},{"ID":"20230724231645-pm9jfgi","Type":"NodeParagraph","Properties":{"id":"20230724231645-pm9jfgi","updated":"20230724231645"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231646-v9pfdrl","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231646-v9pfdrl","updated":"20230724231646"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/path.go?name=release#163","TextMarkTextContent":"Ext"}]},{"ID":"20230724231647-7zku0c2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231647-7zku0c2","updated":"20230724231647"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Ext(path string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231648-jr3zkxh","Type":"NodeParagraph","Properties":{"id":"20230724231648-jr3zkxh","updated":"20230724231648"},"Children":[{"Type":"NodeText","Data":"Ext函数返回path文件扩展名。返回值是路径最后一个斜杠分隔出的路径元素的最后一个'.'起始的后缀（包括'.'）。如果该元素没有'.'会返回空字符串。"}]},{"ID":"20230724231649-muptou4","Type":"NodeParagraph","Properties":{"id":"20230724231649-muptou4","updated":"20230724231649"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231650-9xaehdy","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231650-9xaehdy","updated":"20230724231650"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/path.go?name=release#69","TextMarkTextContent":"Clean"}]},{"ID":"20230724231651-dngylth","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231651-dngylth","updated":"20230724231651"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Clean(path string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231652-ufl7g8m","Type":"NodeParagraph","Properties":{"id":"20230724231652-ufl7g8m","updated":"20230724231652"},"Children":[{"Type":"NodeText","Data":"Clean函数通过单纯的词法操作返回和path代表同一地址的最短路径。"}]},{"ID":"20230724231653-l1xeorc","Type":"NodeParagraph","Properties":{"id":"20230724231653-l1xeorc","updated":"20230724231653"},"Children":[{"Type":"NodeText","Data":"它会不断的依次应用如下的规则，直到不能再进行任何处理："}]},{"ID":"20230724231654-jpgaym2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231654-jpgaym2","updated":"20230724231654"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"1. 将连续的多个斜杠替换为单个斜杠\n2. 剔除每一个.路径名元素（代表当前目录）\n3. 剔除每一个路径内的..路径名元素（代表父目录）和它前面的非..路径名元素\n4. 剔除开始一个根路径的..路径名元素，即将路径开始处的\"/..\"替换为\"/\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231655-pfrb0hc","Type":"NodeParagraph","Properties":{"id":"20230724231655-pfrb0hc","updated":"20230724231655"},"Children":[{"Type":"NodeText","Data":"只有路径代表根地址\"/\"时才会以斜杠结尾。如果处理的结果是空字符串，Clean会返回\".\"。"}]},{"ID":"20230724231656-p7m1pxf","Type":"NodeParagraph","Properties":{"id":"20230724231656-p7m1pxf","updated":"20230724231656"},"Children":[{"Type":"NodeText","Data":"参见http://plan9.bell-labs.com/sys/doc/lexnames.html"}]},{"ID":"20230724231657-5mdnkqz","Type":"NodeParagraph","Properties":{"id":"20230724231657-5mdnkqz","updated":"20230724231657"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231658-fhixk50","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231658-fhixk50","updated":"20230724231658"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/match.go?name=release#38","TextMarkTextContent":"Match"}]},{"ID":"20230724231659-yikelz1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231659-yikelz1","updated":"20230724231659"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Match(pattern, name string) (matched bool, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231660-k10ba6e","Type":"NodeParagraph","Properties":{"id":"20230724231660-k10ba6e","updated":"20230724231660"},"Children":[{"Type":"NodeText","Data":"如果name匹配shell文件名模式匹配字符串，Match函数返回真。该模式匹配字符串语法为："}]},{"ID":"20230724231661-ywa7bxz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231661-ywa7bxz","updated":"20230724231661"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"pattern:\n\t{ term }\nterm:\n\t'*'                                  匹配0或多个非/的字符\n\t'?'                                  匹配1个非/的字符\n\t'[' [ '^' ] { character-range } ']'  字符组（必须非空）\n\tc                                    匹配字符c（c != '*', '?', '\\\\', '['）\n\t'\\\\' c                               匹配字符c\ncharacter-range:\n\tc           匹配字符c（c != '\\\\', '-', ']'）\n\t'\\\\' c      匹配字符c\n\tlo '-' hi   匹配区间[lo, hi]内的字符\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231662-73nk0ux","Type":"NodeParagraph","Properties":{"id":"20230724231662-73nk0ux","updated":"20230724231662"},"Children":[{"Type":"NodeText","Data":"Match要求匹配整个name字符串，而不是它的一部分。只有pattern语法错误时，会返回ErrBadPattern。"}]}]}