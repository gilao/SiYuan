{"ID":"20230724231545-d21wt7i","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230724231545-d21wt7i","title":"path-filepath","updated":"20230724231545"},"Children":[{"ID":"20230724231546-mjyqgl1","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230724231546-mjyqgl1","updated":"20230724231546"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"path-filepath"}]},{"ID":"20230724231547-hrq1rea","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231547-hrq1rea","updated":"20230724231547"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import \"path/filepath\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231548-6c0x8v4","Type":"NodeParagraph","Properties":{"id":"20230724231548-6c0x8v4","updated":"20230724231548"},"Children":[{"Type":"NodeText","Data":"filepath包实现了兼容各操作系统的文件路径的实用操作函数。"}]},{"ID":"20230724231549-hsqvomy","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231549-hsqvomy","updated":"20230724231549"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Constants"}]},{"ID":"20230724231550-8aqk4cs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231550-8aqk4cs","updated":"20230724231550"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"const (\n    Separator     = os.PathSeparator\n    ListSeparator = os.PathListSeparator\n)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231551-2679z76","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231551-2679z76","updated":"20230724231551"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Variables"}]},{"ID":"20230724231552-xv40uy0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231552-xv40uy0","updated":"20230724231552"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var ErrBadPattern = errors.New(\"syntax error in pattern\")\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231553-kfjl5xh","Type":"NodeParagraph","Properties":{"id":"20230724231553-kfjl5xh","updated":"20230724231553"},"Children":[{"Type":"NodeText","Data":"ErrBadPattern表示一个glob模式匹配字符串的格式错误。"}]},{"ID":"20230724231554-vn7b7sz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231554-vn7b7sz","updated":"20230724231554"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"var SkipDir = errors.New(\"skip this directory\")\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231555-66dfhjh","Type":"NodeParagraph","Properties":{"id":"20230724231555-66dfhjh","updated":"20230724231555"},"Children":[{"Type":"NodeText","Data":"用作WalkFunc类型的返回值，表示该次调用的path参数指定的目录应被跳过。本错误不应被任何其他函数返回。"}]},{"ID":"20230724231556-ukjp3u6","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231556-ukjp3u6","updated":"20230724231556"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path_unix.go?name=release#12","TextMarkTextContent":"IsAbs"}]},{"ID":"20230724231557-k2lvvvd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231557-k2lvvvd","updated":"20230724231557"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func IsAbs(path string) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231558-zjlru8u","Type":"NodeParagraph","Properties":{"id":"20230724231558-zjlru8u","updated":"20230724231558"},"Children":[{"Type":"NodeText","Data":"IsAbs返回路径是否是一个绝对路径。"}]},{"ID":"20230724231559-i9f694q","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231559-i9f694q","updated":"20230724231559"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#233","TextMarkTextContent":"Abs"}]},{"ID":"20230724231560-pqxkbu9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231560-pqxkbu9","updated":"20230724231560"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Abs(path string) (string, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231561-bmhdbsf","Type":"NodeParagraph","Properties":{"id":"20230724231561-bmhdbsf","updated":"20230724231561"},"Children":[{"Type":"NodeText","Data":"Abs函数返回path代表的绝对路径，如果path不是绝对路径，会加入当前工作目录以使之成为绝对路径。因为硬链接的存在，不能保证返回的绝对路径是唯一指向该地址的绝对路径。"}]},{"ID":"20230724231562-lkz69f2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231562-lkz69f2","updated":"20230724231562"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#251","TextMarkTextContent":"Rel"}]},{"ID":"20230724231563-jcfclmz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231563-jcfclmz","updated":"20230724231563"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Rel(basepath, targpath string) (string, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231564-ff9nv4v","Type":"NodeParagraph","Properties":{"id":"20230724231564-ff9nv4v","updated":"20230724231564"},"Children":[{"Type":"NodeText","Data":"Rel函数返回一个相对路径，将basepath和该路径用路径分隔符连起来的新路径在词法上等价于targpath。也就是说，Join(basepath, Rel(basepath, targpath))等价于targpath本身。如果成功执行，返回值总是相对于basepath的，即使basepath和targpath没有共享的路径元素。如果两个参数一个是相对路径而另一个是绝对路径，或者targpath无法表示为相对于basepath的路径，将返回错误。"}]},{"ID":"20230724231565-nys1277","Type":"NodeParagraph","Properties":{"id":"20230724231565-nys1277","updated":"20230724231565"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231566-bwukd46","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231566-bwukd46","updated":"20230724231566"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#178","TextMarkTextContent":"SplitList"}]},{"ID":"20230724231567-pp177x9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231567-pp177x9","updated":"20230724231567"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func SplitList(path string) []string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231568-r9wry94","Type":"NodeParagraph","Properties":{"id":"20230724231568-r9wry94","updated":"20230724231568"},"Children":[{"Type":"NodeText","Data":"将PATH或GOPATH等环境变量里的多个路径分割开（这些路径被OS特定的表分隔符连接起来）。与strings.Split函数的不同之处是：对\"\"，SplitList返回[]string{}，而strings.Split返回[]string{\"\"}。"}]},{"ID":"20230724231569-lt9ad46","Type":"NodeParagraph","Properties":{"id":"20230724231569-lt9ad46","updated":"20230724231569"},"Children":[{"Type":"NodeText","Data":"Example"}]},{"ID":"20230724231570-iga7di8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231570-iga7di8","updated":"20230724231570"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#187","TextMarkTextContent":"Split"}]},{"ID":"20230724231571-th5hg3e","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231571-th5hg3e","updated":"20230724231571"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Split(path string) (dir, file string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231572-47n35pi","Type":"NodeParagraph","Properties":{"id":"20230724231572-47n35pi","updated":"20230724231572"},"Children":[{"Type":"NodeText","Data":"Split函数将路径从最后一个路径分隔符后面位置分隔为两个部分（dir和file）并返回。如果路径中没有路径分隔符，函数返回值dir会设为空字符串，file会设为path。两个返回值满足path == dir+file。"}]},{"ID":"20230724231573-z0x497n","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231573-z0x497n","updated":"20230724231573"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#199","TextMarkTextContent":"Join"}]},{"ID":"20230724231574-zggx7ez","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231574-zggx7ez","updated":"20230724231574"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Join(elem ...string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231575-5a850nl","Type":"NodeParagraph","Properties":{"id":"20230724231575-5a850nl","updated":"20230724231575"},"Children":[{"Type":"NodeText","Data":"Join函数可以将任意数量的路径元素放入一个单一路径里，会根据需要添加路径分隔符。结果是经过简化的，所有的空字符串元素会被忽略。"}]},{"ID":"20230724231576-0kd0iix","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231576-0kd0iix","updated":"20230724231576"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#168","TextMarkTextContent":"FromSlash"}]},{"ID":"20230724231577-uct70tw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231577-uct70tw","updated":"20230724231577"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func FromSlash(path string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231578-lna4vqm","Type":"NodeParagraph","Properties":{"id":"20230724231578-lna4vqm","updated":"20230724231578"},"Children":[{"Type":"NodeText","Data":"FromSlash函数将path中的斜杠（'/'）替换为路径分隔符并返回替换结果，多个斜杠会替换为多个路径分隔符。"}]},{"ID":"20230724231579-spcredp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231579-spcredp","updated":"20230724231579"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#158","TextMarkTextContent":"ToSlash"}]},{"ID":"20230724231580-iszuz3m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231580-iszuz3m","updated":"20230724231580"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func ToSlash(path string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231581-3gqb94k","Type":"NodeParagraph","Properties":{"id":"20230724231581-3gqb94k","updated":"20230724231581"},"Children":[{"Type":"NodeText","Data":"ToSlash函数将path中的路径分隔符替换为斜杠（'/'）并返回替换结果，多个路径分隔符会替换为多个斜杠。"}]},{"ID":"20230724231582-puv3091","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231582-puv3091","updated":"20230724231582"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#465","TextMarkTextContent":"VolumeName"}]},{"ID":"20230724231583-60r7k9m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231583-60r7k9m","updated":"20230724231583"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func VolumeName(path string) (v string)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231584-uoqoiwg","Type":"NodeParagraph","Properties":{"id":"20230724231584-uoqoiwg","updated":"20230724231584"},"Children":[{"Type":"NodeText","Data":"VolumeName函数返回最前面的卷名。如Windows系统里提供参数\"C:\\foo\\bar\"会返回\"C:\"；Unix/linux系统的\""},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"\\","Properties":{"id":""}}]},{"Type":"NodeText","Data":"host\\share\\foo\"会返回\""},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"\\","Properties":{"id":""}}]},{"Type":"NodeText","Data":"host\\share\"；其他平台会返回\"\"。"}]},{"ID":"20230724231585-oadzmm8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231585-oadzmm8","updated":"20230724231585"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#444","TextMarkTextContent":"Dir"}]},{"ID":"20230724231586-gkercu4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231586-gkercu4","updated":"20230724231586"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Dir(path string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231587-6m79ldl","Type":"NodeParagraph","Properties":{"id":"20230724231587-6m79ldl","updated":"20230724231587"},"Children":[{"Type":"NodeText","Data":"Dir返回路径除去最后一个路径元素的部分，即该路径最后一个元素所在的目录。在使用Split去掉最后一个元素后，会简化路径并去掉末尾的斜杠。如果路径是空字符串，会返回\".\"；如果路径由1到多个路径分隔符后跟0到多个非路径分隔符字符组成，会返回单个路径分隔符；其他任何情况下都不会返回以路径分隔符结尾的路径。"}]},{"ID":"20230724231588-c9n4aqs","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231588-c9n4aqs","updated":"20230724231588"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#413","TextMarkTextContent":"Base"}]},{"ID":"20230724231589-6p7awln","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231589-6p7awln","updated":"20230724231589"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Base(path string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231590-t8ayi8q","Type":"NodeParagraph","Properties":{"id":"20230724231590-t8ayi8q","updated":"20230724231590"},"Children":[{"Type":"NodeText","Data":"Base函数返回路径的最后一个元素。在提取元素前会求掉末尾的路径分隔符。如果路径是\"\"，会返回\".\"；如果路径是只有一个斜杆构成，会返回单个路径分隔符。"}]},{"ID":"20230724231591-p6add5p","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231591-p6add5p","updated":"20230724231591"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#212","TextMarkTextContent":"Ext"}]},{"ID":"20230724231592-gcb8j8v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231592-gcb8j8v","updated":"20230724231592"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Ext(path string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231593-ejffjz8","Type":"NodeParagraph","Properties":{"id":"20230724231593-ejffjz8","updated":"20230724231593"},"Children":[{"Type":"NodeText","Data":"Ext函数返回path文件扩展名。返回值是路径最后一个路径元素的最后一个'.'起始的后缀（包括'.'）。如果该元素没有'.'会返回空字符串。"}]},{"ID":"20230724231594-r0pwh8t","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231594-r0pwh8t","updated":"20230724231594"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#81","TextMarkTextContent":"Clean"}]},{"ID":"20230724231595-0mtvbuk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231595-0mtvbuk","updated":"20230724231595"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Clean(path string) string\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231596-z2lpkvk","Type":"NodeParagraph","Properties":{"id":"20230724231596-z2lpkvk","updated":"20230724231596"},"Children":[{"Type":"NodeText","Data":"Clean函数通过单纯的词法操作返回和path代表同一地址的最短路径。"}]},{"ID":"20230724231597-jcsxl51","Type":"NodeParagraph","Properties":{"id":"20230724231597-jcsxl51","updated":"20230724231597"},"Children":[{"Type":"NodeText","Data":"它会不断的依次应用如下的规则，直到不能再进行任何处理："}]},{"ID":"20230724231598-vs43cry","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231598-vs43cry","updated":"20230724231598"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"1. 将连续的多个路径分隔符替换为单个路径分隔符\n2. 剔除每一个.路径名元素（代表当前目录）\n3. 剔除每一个路径内的..路径名元素（代表父目录）和它前面的非..路径名元素\n4. 剔除开始一个根路径的..路径名元素，即将路径开始处的\"/..\"替换为\"/\"（假设路径分隔符是'/'）\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231599-17jtqbc","Type":"NodeParagraph","Properties":{"id":"20230724231599-17jtqbc","updated":"20230724231599"},"Children":[{"Type":"NodeText","Data":"返回的路径只有其代表一个根地址时才以路径分隔符结尾，如Unix的\"/\"或Windows的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"C:\\"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230724231600-yuuelub","Type":"NodeParagraph","Properties":{"id":"20230724231600-yuuelub","updated":"20230724231600"},"Children":[{"Type":"NodeText","Data":"如果处理的结果是空字符串，Clean会返回\".\"。参见http://plan9.bell-labs.com/sys/doc/lexnames.html"}]},{"ID":"20230724231601-up1euq3","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231601-up1euq3","updated":"20230724231601"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#225","TextMarkTextContent":"EvalSymlinks"}]},{"ID":"20230724231602-jk76qp8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231602-jk76qp8","updated":"20230724231602"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func EvalSymlinks(path string) (string, error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231603-2sa9qwn","Type":"NodeParagraph","Properties":{"id":"20230724231603-2sa9qwn","updated":"20230724231603"},"Children":[{"Type":"NodeText","Data":"EvalSymlinks函数返回path指向的符号链接（软链接）所包含的路径。如果path和返回值都是相对路径，会相对于当前目录；除非两个路径其中一个是绝对路径。"}]},{"ID":"20230724231604-ynkfqek","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231604-ynkfqek","updated":"20230724231604"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/match.go?name=release#44","TextMarkTextContent":"Match"}]},{"ID":"20230724231605-4nb1ix0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231605-4nb1ix0","updated":"20230724231605"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Match(pattern, name string) (matched bool, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231606-22wyapa","Type":"NodeParagraph","Properties":{"id":"20230724231606-22wyapa","updated":"20230724231606"},"Children":[{"Type":"NodeText","Data":"Match returns true if name matches the shell file name pattern. The pattern syntax is:"}]},{"ID":"20230724231607-jg0lval","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231607-jg0lval","updated":"20230724231607"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"pattern:\n\t{ term }\nterm:\n\t'*'                                  匹配0或多个非路径分隔符的字符\n\t'?'                                  匹配1个非路径分隔符的字符\n\t'[' [ '^' ] { character-range } ']'  字符组（必须非空）\n\tc                                    匹配字符c（c != '*', '?', '\\\\', '['）\n\t'\\\\' c                               匹配字符c\ncharacter-range:\n\tc           匹配字符c（c != '\\\\', '-', ']'）\n\t'\\\\' c      匹配字符c\n\tlo '-' hi   匹配区间[lo, hi]内的字符\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231608-2y38oa2","Type":"NodeParagraph","Properties":{"id":"20230724231608-2y38oa2","updated":"20230724231608"},"Children":[{"Type":"NodeText","Data":"Match要求匹配整个name字符串，而不是它的一部分。只有pattern语法错误时，会返回ErrBadPattern。"}]},{"ID":"20230724231609-nwjct5w","Type":"NodeParagraph","Properties":{"id":"20230724231609-nwjct5w","updated":"20230724231609"},"Children":[{"Type":"NodeText","Data":"Windows系统中，不能进行转义：'"},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"\\","Properties":{"id":""}}]},{"Type":"NodeText","Data":"'被视为路径分隔符。"}]},{"ID":"20230724231610-r117nzs","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231610-r117nzs","updated":"20230724231610"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/match.go?name=release#231","TextMarkTextContent":"Glob"}]},{"ID":"20230724231611-bdpjx4h","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231611-bdpjx4h","updated":"20230724231611"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Glob(pattern string) (matches []string, err error)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231612-a8mwnxp","Type":"NodeParagraph","Properties":{"id":"20230724231612-a8mwnxp","updated":"20230724231612"},"Children":[{"Type":"NodeText","Data":"Glob函数返回所有匹配模式匹配字符串pattern的文件或者nil（如果没有匹配的文件）。pattern的语法和Match函数相同。pattern可以描述多层的名字，如/usr/*/bin/ed（假设路径分隔符是'/'）。"}]},{"ID":"20230724231613-9d6tg4k","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231613-9d6tg4k","updated":"20230724231613"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"type "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#337","TextMarkTextContent":"WalkFunc"}]},{"ID":"20230724231614-xcz9mhd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231614-xcz9mhd","updated":"20230724231614"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type WalkFunc func(path string, info os.FileInfo, err error) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231615-wkcki9g","Type":"NodeParagraph","Properties":{"id":"20230724231615-wkcki9g","updated":"20230724231615"},"Children":[{"Type":"NodeText","Data":"Walk函数对每一个文件/目录都会调用WalkFunc函数类型值。调用时path参数会包含Walk的root参数作为前缀；就是说，如果Walk函数的root为\"dir\"，该目录下有文件\"a\"，将会使用\"dir/a\"调用walkFn参数。walkFn参数被调用时的info参数是path指定的地址（文件/目录）的文件信息，类型为os.FileInfo。"}]},{"ID":"20230724231616-20jzr8w","Type":"NodeParagraph","Properties":{"id":"20230724231616-20jzr8w","updated":"20230724231616"},"Children":[{"Type":"NodeText","Data":"如果遍历path指定的文件或目录时出现了问题，传入的参数err会描述该问题，WalkFunc类型函数可以决定如何去处理该错误（Walk函数将不会深入该目录）；如果该函数返回一个错误，Walk函数的执行会中止；只有一个例外，如果Walk的walkFn返回值是SkipDir，将会跳过该目录的内容而Walk函数照常执行处理下一个文件。"}]},{"ID":"20230724231617-zk5jfat","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231617-zk5jfat","updated":"20230724231617"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path.go?name=release#385","TextMarkTextContent":"Walk"}]},{"ID":"20230724231618-tbhej12","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231618-tbhej12","updated":"20230724231618"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func Walk(root string, walkFn WalkFunc) error\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231619-j8qu532","Type":"NodeParagraph","Properties":{"id":"20230724231619-j8qu532","updated":"20230724231619"},"Children":[{"Type":"NodeText","Data":"Walk函数会遍历root指定的目录下的文件树，对每一个该文件树中的目录和文件都会调用walkFn，包括root自身。所有访问文件/目录时遇到的错误都会传递给walkFn过滤。文件是按词法顺序遍历的，这让输出更漂亮，但也导致处理非常大的目录时效率会降低。Walk函数不会遍历文件树中的符号链接（快捷方式）文件包含的路径。"}]},{"ID":"20230724231620-0ebo5r8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230724231620-0ebo5r8","updated":"20230724231620"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"func "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/golang/go/blob/master/src/path/filepath/path_unix.go?name=release#23","TextMarkTextContent":"HasPrefix"}]},{"ID":"20230724231621-xq7ecnr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230724231621-xq7ecnr","updated":"20230724231621"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func HasPrefix(p, prefix string) bool\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230724231622-bs0708j","Type":"NodeParagraph","Properties":{"id":"20230724231622-bs0708j","updated":"20230724231622"},"Children":[{"Type":"NodeText","Data":"HasPrefix函数出于历史兼容问题保留，不应被使用。"}]}]}