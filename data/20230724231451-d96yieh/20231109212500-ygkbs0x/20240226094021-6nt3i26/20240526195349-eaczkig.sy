{"ID":"20240526195349-eaczkig","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f9a2","id":"20240526195349-eaczkig","title":"内存缓存","type":"doc","updated":"20240526195551"},"Children":[{"ID":"20240526195349-2aaj45z","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240526195349-2aaj45z","updated":"20240526195431"},"Children":[{"Type":"NodeText","Data":"创建"}]},{"ID":"20240526195431-5v3xe3c","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240526195431-5v3xe3c","updated":"20240526195442"},"Children":[{"ID":"20240526195432-wx1fzyz","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240526195432-wx1fzyz","updated":"20240526195442"},"Children":[{"ID":"20240526195432-7hd963w","Type":"NodeParagraph","Properties":{"id":"20240526195432-7hd963w","updated":"20240526195435"},"Children":[{"Type":"NodeText","Data":"NewCache"}]},{"ID":"20240526195435-o0fc5qv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526195435-o0fc5qv","updated":"20240526195442"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"函数签名: \n    NewCache func(expire time.Duration, opts ...CacheOption) (*Cache, error) \n说明: \n    创建 cache 对象。\n入参:\n    1. expire: 过期时间\n    2. opts: 操作选项\n    2.1 WithLimit: 设置 cache 存储数据数量上限\n    2.2 WithName: 设置 cache 名称，输出日志时会打印\n返回值:\n    1. *Cache: cache对象\n    2. error: 创建结果\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240526195449-plsuhtw","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240526195449-plsuhtw","updated":"20240526195449"},"Children":[{"Type":"NodeText","Data":"方法说明"}]},{"ID":"20240526195449-ibbmfrm","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240526195449-ibbmfrm","updated":"20240526195459"},"Children":[{"ID":"20240526195451-u49nehz","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240526195451-u49nehz","updated":"20240526195459"},"Children":[{"ID":"20240526195451-77wxrs4","Type":"NodeParagraph","Properties":{"id":"20240526195451-77wxrs4","updated":"20240526195454"},"Children":[{"Type":"NodeText","Data":"Set"}]},{"ID":"20240526195454-lfqprmh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526195454-lfqprmh","updated":"20240526195459"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"函数签名: \n    Set func(key string, value interface{}) \n说明: \n    添加值到缓存。\n入参:\n    1. key: key\n    2. value: 值\n\n示例:\n    cache, err := NewCache(time.Second*2, WithName(\"any\"))\n    if err != nil {\n        log.Fatal(err)\n    }\n    cache.Set(\"first\", \"first element\")\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240526195502-wsbfzg9","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240526195502-wsbfzg9","updated":"20240526195516"},"Children":[{"ID":"20240526195504-1efp1rs","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240526195504-1efp1rs","updated":"20240526195516"},"Children":[{"ID":"20240526195504-uq3ooh0","Type":"NodeParagraph","Properties":{"id":"20240526195504-uq3ooh0","updated":"20240526195511"},"Children":[{"Type":"NodeText","Data":"SetWithExpire"}]},{"ID":"20240526195511-k55ra8r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526195511-k55ra8r","updated":"20240526195516"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"函数签名: \n    SetWithExpire func(key string, value interface{}, expire time.Duration)\n说明: \n    添加值到缓存, 同时指定过期时间\n入参:\n    1. key: key\n    2. value: 值\n    3. expire: 过期时间\n\n示例:\n    cache, err := NewCache(time.Second*2, WithName(\"any\"))\n    if err != nil {\n        log.Fatal(err)\n    }\n    cache.SetWithExpire(\"first\", \"first element\", time.Second)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240526195518-ry5bso7","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240526195518-ry5bso7","updated":"20240526195529"},"Children":[{"ID":"20240526195520-ta7q070","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240526195520-ta7q070","updated":"20240526195529"},"Children":[{"ID":"20240526195520-50uct5v","Type":"NodeParagraph","Properties":{"id":"20240526195520-50uct5v","updated":"20240526195522"},"Children":[{"Type":"NodeText","Data":"Get"}]},{"ID":"20240526195522-iiklwui","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526195522-iiklwui","updated":"20240526195529"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"函数签名: \n    Get func(key string) (interface{}, bool)\n说明: \n    查询缓存\n入参:\n    1. key: key\n\n返回值:\n    1. interface{}: value\n    2. bool: 是否存在\n\n示例:\n    cache, err := NewCache(time.Second*2, WithName(\"any\"))\n    if err != nil {\n        log.Fatal(err)\n    }\n    cache.Set(\"first\", \"first element\")\n\n    v, exist := cache.Get(\"first\")\n    if !exist {\n        // deal with not exist\n    }\n    value, ok := v.(string)\n    if !ok {\n        // deal with type error\n    }\n    // use value\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240526195530-5s0nfk3","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240526195530-5s0nfk3","updated":"20240526195538"},"Children":[{"ID":"20240526195532-ugayysa","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20240526195532-ugayysa","updated":"20240526195538"},"Children":[{"ID":"20240526195532-0bqgf6o","Type":"NodeParagraph","Properties":{"id":"20240526195532-0bqgf6o","updated":"20240526195534"},"Children":[{"Type":"NodeText","Data":"Del"}]},{"ID":"20240526195534-egpvo8i","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526195534-egpvo8i","updated":"20240526195538"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"函数签名: \n    Del func(key string)\n说明: \n    删除缓存。\n入参:\n    1. key: key\n\n示例:\n    cache, err := NewCache(time.Second*2, WithName(\"any\"))\n    if err != nil {\n        log.Fatal(err)\n    }\n    cache.Del(\"first\")\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240526195540-szg21ku","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240526195540-szg21ku","updated":"20240526195551"},"Children":[{"ID":"20240526195542-4kgdy16","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20240526195542-4kgdy16","updated":"20240526195551"},"Children":[{"ID":"20240526195542-r041un3","Type":"NodeParagraph","Properties":{"id":"20240526195542-r041un3","updated":"20240526195544"},"Children":[{"Type":"NodeText","Data":"Take"}]},{"ID":"20240526195544-nld24t6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526195544-nld24t6","updated":"20240526195551"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"函数签名: \n    Take funcTake(key string, fetch func() (interface{}, error)) (interface{}, error)\n说明: \n    获取缓存，如果缓存中存在，则返回缓存中的值，如果缓存不存在，则执行 fetch 函数的返回结果。\n入参:\n    1. key: key\n    2. fetch: 自定义返回结果\n\n示例:\n    cache, err := NewCache(time.Second*2, WithName(\"any\"))\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    v, err := cache.Take(\"first\", func() (interface{}, error) {\n        return \"first element\", nil\n    })\n    println(v) // output: first element\n  \n    cache.Set(\"first\", \"first element 2\")\n\n    v, err = cache.Take(\"first\", func() (interface{}, error) {\n        return \"first element\", nil\n    })\n    println(v) // // output: first element 2\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]}]}