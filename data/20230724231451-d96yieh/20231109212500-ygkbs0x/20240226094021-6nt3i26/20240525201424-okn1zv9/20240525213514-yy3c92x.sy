{"ID":"20240525213514-yy3c92x","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f359","id":"20240525213514-yy3c92x","title":"API定义完整示例","type":"doc","updated":"20240525213553"},"Children":[{"ID":"20240525213539-406sawj","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240525213539-406sawj","updated":"20240525213539"},"Children":[{"Type":"NodeText","Data":"api 示例"}]},{"ID":"20240525213540-xf1dpov","Type":"NodeParagraph","Properties":{"id":"20240525213540-xf1dpov","updated":"20240525213545"},"Children":[{"Type":"NodeText","Data":"下文仅展示 api 文件的完整写法和对应语法块的功能说明，如需查看 api 规范定义，可参考 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://go-zero.dev/docs/tutorials","TextMarkTextContent":"《API 规范》"}]},{"ID":"20240525213546-1oeo6l7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240525213546-1oeo6l7","updated":"20240525213553"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"syntax = \"v1\"\n\ninfo (\n    title:   \"api 文件完整示例写法\"\n    desc:    \"演示如何编写 api 文件\"\n    author:  \"keson.an\"\n    date:    \"2022 年 12 月 26 日\"\n    version: \"v1\"\n)\n\ntype UpdateReq {\n    Arg1 string `json:\"arg1\"`\n}\n\ntype ListItem {\n    Value1 string `json:\"value1\"`\n}\n\ntype LoginReq {\n    Username string `json:\"username\"`\n    Password string `json:\"password\"`\n}\n\ntype LoginResp {\n    Name string `json:\"name\"`\n}\n\ntype FormExampleReq {\n    Name string `form:\"name\"`\n}\n\ntype PathExampleReq {\n    // path 标签修饰的 id 必须与请求路由中的片段对应，如\n    // id 在 service 语法块的请求路径上一定会有 :id 对应，见下文。\n    ID string `path:\"id\"`\n}\n\ntype PathExampleResp {\n    Name string `json:\"name\"`\n}\n\n@server (\n    jwt:        Auth // 对当前 Foo 语法块下的所有路由，开启 jwt 认证，不需要则请删除此行\n    prefix:     /v1 // 对当前 Foo 语法块下的所有路由，新增 /v1 路由前缀，不需要则请删除此行\n    group:      g1 // 对当前 Foo 语法块下的所有路由，路由归并到 g1 目录下，不需要则请删除此行\n    timeout:    3s // 对当前 Foo 语法块下的所有路由进行超时配置，不需要则请删除此行\n    middleware: AuthInterceptor // 对当前 Foo 语法块下的所有路由添加中间件，不需要则请删除此行\n    maxBytes:   1048576 // 对当前 Foo 语法块下的所有路由添加请求体大小控制，单位为 byte,goctl 版本 \u003e= 1.5.0 才支持\n)\nservice Foo {\n    // 定义没有请求体和响应体的接口，如 ping\n    @handler ping\n    get /ping\n\n    // 定义只有请求体的接口，如更新信息\n    @handler update\n    post /update (UpdateReq)\n\n    // 定义只有响应体的结构，如获取全部信息列表\n    @handler list\n    get /list returns ([]ListItem)\n\n    // 定义有结构体和响应体的接口，如登录\n    @handler login\n    post /login (LoginReq) returns (LoginResp)\n\n    // 定义表单请求\n    @handler formExample\n    post /form/example (FormExampleReq)\n\n    // 定义 path 参数\n    @handler pathExample\n    get /path/example/:id (PathExampleReq) returns (PathExampleResp)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}