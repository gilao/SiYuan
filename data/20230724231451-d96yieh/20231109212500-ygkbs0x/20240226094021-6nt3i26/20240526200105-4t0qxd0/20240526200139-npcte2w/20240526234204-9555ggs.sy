{"ID":"20240526234204-9555ggs","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f431","id":"20240526234204-9555ggs","title":"JWT","type":"doc","updated":"20240526234521"},"Children":[{"ID":"20240526234241-ijqfuzp","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240526234241-ijqfuzp","updated":"20240526234241"},"Children":[{"Type":"NodeText","Data":"JWT"}]},{"ID":"20240526234241-c64vseu","Type":"NodeParagraph","Properties":{"id":"20240526234241-c64vseu","updated":"20240526234241"},"Children":[{"Type":"NodeText","Data":"JWT（JSON Web Token）是一种开放标准（RFC 7519），用于在网络应用间传递声明式信息。它是一种基于JSON的轻量级的身份验证和授权机制，用于在客户端和服务器之间安全地传输信息。"}]},{"ID":"20240526234241-20r7zol","Type":"NodeParagraph","Properties":{"id":"20240526234241-20r7zol","updated":"20240526234241"},"Children":[{"Type":"NodeText","Data":"更多关于 jwt 的文档请参考"}]},{"ID":"20240526234241-uxyrawb","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240526234241-uxyrawb","updated":"20240526234241"},"Children":[{"ID":"20240526234241-ntl0ps7","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240526234241-ntl0ps7","updated":"20240526234241"},"Children":[{"ID":"20240526234241-ya5ybo8","Type":"NodeParagraph","Properties":{"id":"20240526234241-ya5ybo8","updated":"20240526234241"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://jwt.io/","TextMarkTextContent":"《JSON Web Tokens》"}]}]},{"ID":"20240526234241-90bk1rj","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240526234241-90bk1rj","updated":"20240526234241"},"Children":[{"ID":"20240526234241-zw9qj5p","Type":"NodeParagraph","Properties":{"id":"20240526234241-zw9qj5p","updated":"20240526234241"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://go-zero.dev/docs/tutorials/http/server/jwt","TextMarkTextContent":"《JWT 认证》"}]}]}]},{"ID":"20240526234241-yjjs5z0","Type":"NodeParagraph","Properties":{"id":"20240526234241-yjjs5z0","updated":"20240526234241"},"Children":[{"Type":"NodeText","Data":"我们来看一下在 api 文件中如何声明开启 jwt 认证"}]},{"ID":"20240526234241-g60w1wy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526234241-g60w1wy","updated":"20240526234241"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"syntax = \"v1\"\n\ntype LoginReq {\n    Username string `json:\"username\"`\n    Password string `json:\"password\"`\n}\n\ntype LoginResp {\n    ID string `json:\"id\"`\n    Name string `json:\"name\"`\n}\n\ntype UserInfoReq {\n    ID string `json:\"id\"`\n}\n\ntype UserInfoResp {\n    Name string `json:\"name\"`\n}\n\nservice user-api {\n    @handler login\n    post /user/login (LoginReq) returns (LoginResp)\n}\n\n@server (\n    jwt: Auth // 开启 jwt 认证\n)\nservice user-api {\n    @handler userInfo\n    post /user/info (UserInfoReq) returns (UserInfoResp)\n}\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240526234241-9ul8h21","Type":"NodeParagraph","Properties":{"id":"20240526234241-9ul8h21","updated":"20240526234241"},"Children":[{"Type":"NodeText","Data":"在上文中，我们通过在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"@server"},{"Type":"NodeText","Data":"​ 中来通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"jwt"},{"Type":"NodeText","Data":"​ 关键字声明了开启 jwt 认证，且该 jwt 认证仅对其对应的路由有用，如上文中 jwt 仅对 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/user/info"},{"Type":"NodeText","Data":"​ 生效，对 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/user/login"},{"Type":"NodeText","Data":"​ 是不生效的，我们使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Auth"},{"Type":"NodeText","Data":"​ 来作为 jwt 的值，其在经过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"goctl"},{"Type":"NodeText","Data":"​ 进行代码生成后会转成 对应 jwt 配置。"}]},{"ID":"20240526234241-v6wj5vf","Type":"NodeParagraph","Properties":{"id":"20240526234241-v6wj5vf","updated":"20240526234241"},"Children":[{"Type":"NodeText","Data":"下面简单看一下生成的 jwt 代码："}]},{"ID":"20240526234420-z3w1cvx","Type":"NodeList","ListData":{},"Properties":{"id":"20240526234420-z3w1cvx","updated":"20240526234438"},"Children":[{"ID":"20240526234428-dkrfp41","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240526234428-dkrfp41","updated":"20240526234438"},"Children":[{"ID":"20240526234428-fa8azck","Type":"NodeParagraph","Properties":{"id":"20240526234428-fa8azck","updated":"20240526234432"},"Children":[{"Type":"NodeText","Data":"config.go"}]},{"ID":"20240526234432-nom0b9m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526234432-nom0b9m","updated":"20240526234438"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"package config\n\nimport \"github.com/zeromicro/go-zero/rest\"\n\ntype Config struct {\n    rest.RestConf\n    Auth struct {// JWT 认证需要的密钥和过期时间配置\n        AccessSecret string\n        AccessExpire int64\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240526234439-v0sz65b","Type":"NodeList","ListData":{},"Properties":{"id":"20240526234439-v0sz65b","updated":"20240526234453"},"Children":[{"ID":"20240526234440-w9j9w7z","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240526234440-w9j9w7z","updated":"20240526234453"},"Children":[{"ID":"20240526234440-nv6mpn4","Type":"NodeParagraph","Properties":{"id":"20240526234440-nv6mpn4","updated":"20240526234447"},"Children":[{"Type":"NodeText","Data":"routes.go"}]},{"ID":"20240526234447-g9qlus0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526234447-g9qlus0","updated":"20240526234453"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// Code generated by goctl. DO NOT EDIT.\npackage handler\n\nimport (\n    \"net/http\"\n\n    \"go-zero-demo/user/internal/svc\"\n\n    \"github.com/zeromicro/go-zero/rest\"\n)\n\nfunc RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {\n    server.AddRoutes(\n        []rest.Route{\n            {\n                Method:  http.MethodPost,\n                Path:    \"/user/login\",\n                Handler: loginHandler(serverCtx),\n            },\n        },\n    )\n\n    server.AddRoutes(\n        []rest.Route{\n            {\n                Method:  http.MethodPost,\n                Path:    \"/user/info\",\n                Handler: userInfoHandler(serverCtx),\n            },\n        },\n        rest.WithJwt(serverCtx.Config.Auth.AccessSecret),\n    )\n}"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240526234508-m15t50b","Type":"NodeParagraph","Properties":{"id":"20240526234508-m15t50b","updated":"20240526234508"},"Children":[{"Type":"NodeText","Data":"在上文中，我们可以看到，我们声明的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"jwt"},{"Type":"NodeText","Data":"​ 其实在生成代码后通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"rest.WithJwt"},{"Type":"NodeText","Data":"​ 来声明进行 jwt 认证了。"}]},{"ID":"20240526234513-dzx1h3e","Type":"NodeBlockquote","Properties":{"id":"20240526234513-dzx1h3e","updated":"20240526234514"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240526234514-xt3p45z","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20240526234514-xt3p45z","updated":"20240526234514"},"Children":[{"Type":"NodeText","Data":"注意"}]},{"ID":"20240526234514-e240kgq","Type":"NodeParagraph","Properties":{"id":"20240526234514-e240kgq","updated":"20240526234514"},"Children":[{"Type":"NodeText","Data":"代码生成后的 jwt 认证，框架只做了服务端逻辑，对于 jwt token 的生成及 refresh token 仍需要开发者自行实现。"}]}]},{"ID":"20240526234521-is43pde","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240526234521-is43pde","updated":"20240526234521"},"Children":[{"Type":"NodeText","Data":"载体信息获取"}]},{"ID":"20240526234521-iem3p0p","Type":"NodeParagraph","Properties":{"id":"20240526234521-iem3p0p","updated":"20240526234521"},"Children":[{"Type":"NodeText","Data":"jwt 通常可以携带一些自定义信息，比如 server 端生成 jwt key 时添加了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"custom-key"},{"Type":"NodeText","Data":"​ 值，go-zero 在解析后会将所有载体放到 context 中，开发者可以 通过如下示例获取载体信息。"}]},{"ID":"20240526234521-wz8wwa6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526234521-wz8wwa6","updated":"20240526234521"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func (l *UserInfoLogic) UserInfo(req *types.UserInfoReq) (resp *types.UserInfoResp, err error) {\n    // 获取 jwt 载体信息\n    value:=l.ctx.Value(\"custom-key\")\n    return\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}