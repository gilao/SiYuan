{"ID":"20240526234536-8rdrsta","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f9ec","id":"20240526234536-8rdrsta","title":"路由规则","type":"doc","updated":"20240526234554"},"Children":[{"ID":"20240526234554-v14wlo2","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240526234554-v14wlo2","updated":"20240526234554"},"Children":[{"Type":"NodeText","Data":"路由规则"}]},{"ID":"20240526234554-kb620sl","Type":"NodeParagraph","Properties":{"id":"20240526234554-kb620sl","updated":"20240526234555"},"Children":[{"Type":"NodeText","Data":"在 api 描述语言中，路由需要满足如下规则"}]},{"ID":"20240526234554-n8k6pwa","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240526234554-n8k6pwa","updated":"20240526234555"},"Children":[{"ID":"20240526234554-zbkatdn","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240526234554-zbkatdn","updated":"20240526234554"},"Children":[{"ID":"20240526234554-ktt9r2b","Type":"NodeParagraph","Properties":{"id":"20240526234554-ktt9r2b","updated":"20240526234554"},"Children":[{"Type":"NodeText","Data":"路由必须以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/"},{"Type":"NodeText","Data":"​ 开头"}]}]},{"ID":"20240526234554-prxi9dn","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240526234554-prxi9dn","updated":"20240526234554"},"Children":[{"ID":"20240526234554-bginv6r","Type":"NodeParagraph","Properties":{"id":"20240526234554-bginv6r","updated":"20240526234554"},"Children":[{"Type":"NodeText","Data":"路由节点必须以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/"},{"Type":"NodeText","Data":"​ 分隔"}]}]},{"ID":"20240526234554-dx9frco","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240526234554-dx9frco","updated":"20240526234554"},"Children":[{"ID":"20240526234554-7ykm6yx","Type":"NodeParagraph","Properties":{"id":"20240526234554-7ykm6yx","updated":"20240526234554"},"Children":[{"Type":"NodeText","Data":"路由节点中可以包含 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":":"},{"Type":"NodeText","Data":"​，但是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":":"},{"Type":"NodeText","Data":"​ 必须是路由节点的第一个字符，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":":"},{"Type":"NodeText","Data":"​ 后面的节点值必须要在结请求体中有 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"path"},{"Type":"NodeText","Data":"​ tag 声明，用于接收路由参数，详细规则可参考 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://go-zero.dev/docs/tutorials/api/parameter","TextMarkTextContent":"路由参数"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20240526234554-plqwzj7","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20240526234554-plqwzj7","updated":"20240526234554"},"Children":[{"ID":"20240526234554-jrjqh1w","Type":"NodeParagraph","Properties":{"id":"20240526234554-jrjqh1w","updated":"20240526234554"},"Children":[{"Type":"NodeText","Data":"路由节点可以包含字母、数字("},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"goctl 1.5.1"},{"Type":"NodeText","Data":"​ 支持，可参考"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://go-zero.dev/docs/tutorials/api/faq#1-%E6%80%8E%E4%B9%88%E4%BD%93%E9%AA%8C%E6%96%B0%E7%9A%84-api-%E7%89%B9%E6%80%A7","TextMarkTextContent":" 新版 API 解析器使用"},{"Type":"NodeText","Data":")、下划线、中划线"}]}]}]},{"ID":"20240526234554-spx0mze","Type":"NodeParagraph","Properties":{"id":"20240526234554-spx0mze","updated":"20240526234555"},"Children":[{"Type":"NodeText","Data":"路由示例："}]},{"ID":"20240526234554-zvmlpu8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240526234554-zvmlpu8","updated":"20240526234555"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"syntax = \"v1\"\n\ntype DemoPath3Req {\n    Id int64 `path:\"id\"`\n}\n\ntype DemoPath4Req {\n    Id   int64  `path:\"id\"`\n    Name string `path:\"name\"`\n}\n\ntype DemoPath5Req {\n    Id   int64  `path:\"id\"`\n    Name string `path:\"name\"`\n    Age  int    `path:\"age\"`\n}\n\ntype DemoReq {}\n\ntype DemoResp {}\n\nservice Demo {\n    // 示例路由 /foo\n    @handler demoPath1\n    get /foo (DemoReq) returns (DemoResp)\n\n    // 示例路由 /foo/bar\n    @handler demoPath2\n    get /foo/bar (DemoReq) returns (DemoResp)\n\n    // 示例路由 /foo/bar/:id，其中 id 为请求体中的字段\n    @handler demoPath3\n    get /foo/bar/:id (DemoPath3Req) returns (DemoResp)\n\n    // 示例路由 /foo/bar/:id/:name，其中 id，name 为请求体中的字段\n    @handler demoPath4\n    get /foo/bar/:id/:name (DemoPath4Req) returns (DemoResp)\n\n    // 示例路由 /foo/bar/:id/:name/:age，其中 id，name，age 为请求体中的字段\n    @handler demoPath5\n    get /foo/bar/:id/:name/:age (DemoPath5Req) returns (DemoResp)\n\n    // 示例路由 /foo/bar/baz-qux\n    @handler demoPath6\n    get /foo/bar/baz-qux (DemoReq) returns (DemoResp)\n\n    // 示例路由 /foo/bar_baz/123(goctl 1.5.1 支持)\n    @handler demoPath7\n    get /foo/bar_baz/123 (DemoReq) returns (DemoResp)\n}\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}