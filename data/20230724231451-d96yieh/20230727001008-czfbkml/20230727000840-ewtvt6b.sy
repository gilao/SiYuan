{"ID":"20230727000840-ewtvt6b","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1fad4","id":"20230727000840-ewtvt6b","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230727000840-ewtvt6b\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230727000841-3jjseze\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230727000915-xi4o3c9\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230727000841-3jjseze\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;","tags":"数据类型,值类型,引用类型,new\u0026amp;make","title":"07. new 和 make","updated":"20230727002316"},"Children":[{"ID":"20230727000841-3jjseze","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230727000841-3jjseze","updated":"20230727000841"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"7. new 和 make"}]},{"ID":"20230727000842-k3zs64x","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000842-k3zs64x","updated":"20230727000842"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"指针地址和指针类型"}]},{"ID":"20230727000843-4wewthd","Type":"NodeParagraph","Properties":{"id":"20230727000843-4wewthd","updated":"20230727000843"},"Children":[{"Type":"NodeText","Data":"每个变量在运行时都拥有一个地址，这个地址代表变量在内存中的位置。Go语言中使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026amp;"},{"Type":"NodeText","Data":"字符放在变量前面对变量进行“取地址”操作。 Go语言中的"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"值类型（int、float、bool、string、array、struct）都有对应的指针类型"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，如："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"*int"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"*int64"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"*string"},{"Type":"NodeText","Data":"等。"}]},{"ID":"20230727000844-rqd8rdf","Type":"NodeParagraph","Properties":{"id":"20230727000844-rqd8rdf","updated":"20230727000844"},"Children":[{"Type":"NodeText","Data":"取变量指针的语法如下："}]},{"ID":"20230727000845-pg5n4c3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000845-pg5n4c3","updated":"20230727000845"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"ptr := \u0026v // v 的类型为T\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000846-didtdqn","Type":"NodeParagraph","Properties":{"id":"20230727000846-didtdqn","updated":"20230727000846"},"Children":[{"Type":"NodeText","Data":"其中："}]},{"ID":"20230727000847-2bk1249","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000847-2bk1249","updated":"20230727000847"},"Children":[{"ID":"20230727000848-4hzz2b4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000848-4hzz2b4","updated":"20230727000848"},"Children":[{"ID":"20230727000849-8kvey1x","Type":"NodeParagraph","Properties":{"id":"20230727000849-8kvey1x","updated":"20230727000849"},"Children":[{"Type":"NodeText","Data":"v:代表被取地址的变量，类型为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"T"}]}]},{"ID":"20230727000850-xqa6nn8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000850-xqa6nn8","updated":"20230727000850"},"Children":[{"ID":"20230727000851-mlyk1a6","Type":"NodeParagraph","Properties":{"id":"20230727000851-mlyk1a6","updated":"20230727000851"},"Children":[{"Type":"NodeText","Data":"ptr:用于接收地址的变量，ptr的类型就为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"*T"},{"Type":"NodeText","Data":"，称做T的指针类型。*代表指针。"}]}]}]},{"ID":"20230727000852-tk8ouh8","Type":"NodeParagraph","Properties":{"id":"20230727000852-tk8ouh8","updated":"20230727000852"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"b := \u0026amp;a"},{"Type":"NodeText","Data":"的图示："}]},{"ID":"20230727000853-bn1fxva","Type":"NodeParagraph","Properties":{"id":"20230727000853-bn1fxva","updated":"20230727000853"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"取变量地址图示","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"E:\\Typora picture\\ptr.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230727000854-mvzlw6c","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000854-mvzlw6c","updated":"20230727000854"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"指针取值"}]},{"ID":"20230727000855-wcpd9pm","Type":"NodeParagraph","Properties":{"id":"20230727000855-wcpd9pm","updated":"20230727000855"},"Children":[{"Type":"NodeText","Data":"在对普通变量使用\u0026操作符取地址后会获得这个变量的指针，然后"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"可以对指针使用*操作，也就是指针取值"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，代码如下。"}]},{"ID":"20230727000856-tneqr8h","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000856-tneqr8h","updated":"20230727000856"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func main() {\n\t//指针取值\n\ta := 10\n\tb := \u0026a // 取变量a的地址，将指针保存到b中\n\tfmt.Printf(\"type of b:%T\\n\", b)\n\tc := *b // 指针取值（根据指针去内存取值）\n\tfmt.Printf(\"type of c:%T\\n\", c)\n\tfmt.Printf(\"value of c:%v\\n\", c)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000857-0rcpq00","Type":"NodeParagraph","Properties":{"id":"20230727000857-0rcpq00","updated":"20230727000857"},"Children":[{"Type":"NodeText","Data":"输出如下："}]},{"ID":"20230727000858-mpz2mk9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000858-mpz2mk9","updated":"20230727000858"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"type of b:*int\ntype of c:int\nvalue of c:10\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000859-osl9xh4","Type":"NodeParagraph","Properties":{"id":"20230727000859-osl9xh4","updated":"20230727000859"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"总结："},{"Type":"NodeText","Data":" ==取地址操作符"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026amp;"},{"Type":"NodeText","Data":"和取值操作符"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"*"},{"Type":"NodeText","Data":"是一对互补操作符，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026amp;"},{"Type":"NodeText","Data":"取出地址，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"*"},{"Type":"NodeText","Data":"根据地址取出地址指向的值。=="}]},{"ID":"20230727000860-zyccp4a","Type":"NodeParagraph","Properties":{"id":"20230727000860-zyccp4a","updated":"20230727000860"},"Children":[{"Type":"NodeText","Data":"变量、指针地址、指针变量、取地址、取值的相互关系和特性如下："}]},{"ID":"20230727000861-gp3ej97","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000861-gp3ej97","updated":"20230727000861"},"Children":[{"ID":"20230727000862-emxlffu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000862-emxlffu","updated":"20230727000862"},"Children":[{"ID":"20230727000863-abjiiuj","Type":"NodeParagraph","Properties":{"id":"20230727000863-abjiiuj","updated":"20230727000863"},"Children":[{"Type":"NodeText","Data":"对变量进行取地址（\u0026）操作，可以获得这个变量的指针变量。"}]}]},{"ID":"20230727000864-k4j7soj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000864-k4j7soj","updated":"20230727000864"},"Children":[{"ID":"20230727000865-7pp82fa","Type":"NodeParagraph","Properties":{"id":"20230727000865-7pp82fa","updated":"20230727000865"},"Children":[{"Type":"NodeText","Data":"指针变量的值是指针地址。"}]}]},{"ID":"20230727000866-7868wpl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000866-7868wpl","updated":"20230727000866"},"Children":[{"ID":"20230727000867-wifqkut","Type":"NodeParagraph","Properties":{"id":"20230727000867-wifqkut","updated":"20230727000867"},"Children":[{"Type":"NodeText","Data":"对指针变量进行取值（*）操作，可以获得指针变量指向的原变量的值。"}]}]}]},{"ID":"20230727000868-vm7jujb","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000868-vm7jujb","updated":"20230727000868"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"new 和 make"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000869-h232xmk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000869-h232xmk","updated":"20230727000869"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func main() {\n\tvar a *int\n\t*a = 100\n\tfmt.Println(*a)\n\n\tvar b map[string]int\n\tb[\"沙河娜扎\"] = 100\n\tfmt.Println(b)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000870-94ngq4s","Type":"NodeParagraph","Properties":{"id":"20230727000870-94ngq4s","updated":"20230727000870"},"Children":[{"Type":"NodeText","Data":"执行上面的代码会引发panic，为什么呢？"}]},{"ID":"20230727000871-2q3i5n9","Type":"NodeParagraph","Properties":{"id":"20230727000871-2q3i5n9","updated":"20230727000871"},"Children":[{"Type":"NodeText","Data":"在Go语言中"}]},{"ID":"20230727000872-599z44p","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000872-599z44p","updated":"20230727000872"},"Children":[{"ID":"20230727000873-uy9a6vd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000873-uy9a6vd","updated":"20230727000873"},"Children":[{"ID":"20230727000874-titigfj","Type":"NodeParagraph","Properties":{"id":"20230727000874-titigfj","updated":"20230727000874"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"对于引用类型的变量，我们在使用的时候不仅要声明它，还要为它分配内存空间，否则我们的值就没办法存储。"}]}]},{"ID":"20230727000875-8i28pqd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000875-8i28pqd","updated":"20230727000875"},"Children":[{"ID":"20230727000876-fq7mh56","Type":"NodeParagraph","Properties":{"id":"20230727000876-fq7mh56","updated":"20230727000876"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"对于值类型的声明不需要分配内存空间，是因为它们在声明的时候已经默认分配好了内存空间"},{"Type":"NodeText","Data":"。"}]}]}]},{"ID":"20230727000877-ngg545e","Type":"NodeParagraph","Properties":{"id":"20230727000877-ngg545e","updated":"20230727000877"},"Children":[{"Type":"NodeText","Data":"要分配内存，就引出来今天的new和make。 Go语言中new和make是内建的两个函数，主要用来分配内存。"}]},{"ID":"20230727000878-yl35pdg","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000878-yl35pdg","updated":"20230727000878"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"new"}]},{"ID":"20230727000879-m64zju1","Type":"NodeParagraph","Properties":{"id":"20230727000879-m64zju1","updated":"20230727000879"},"Children":[{"Type":"NodeText","Data":"new是一个内置的函数，"}]},{"ID":"20230727000880-hujw324","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000880-hujw324","updated":"20230727000880"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func new(Type) *Type\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000881-x0xll7d","Type":"NodeParagraph","Properties":{"id":"20230727000881-x0xll7d","updated":"20230727000881"},"Children":[{"Type":"NodeText","Data":"其中，"}]},{"ID":"20230727000882-vn1rogh","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000882-vn1rogh","updated":"20230727000882"},"Children":[{"ID":"20230727000883-wclhliu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000883-wclhliu","updated":"20230727000883"},"Children":[{"ID":"20230727000884-r1hce3s","Type":"NodeParagraph","Properties":{"id":"20230727000884-r1hce3s","updated":"20230727000884"},"Children":[{"Type":"NodeText","Data":"Type表示类型，new函数只接受一个参数，这个参数是一个类型"}]}]},{"ID":"20230727000885-co47lr7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000885-co47lr7","updated":"20230727000885"},"Children":[{"ID":"20230727000886-0u85wka","Type":"NodeParagraph","Properties":{"id":"20230727000886-0u85wka","updated":"20230727000886"},"Children":[{"Type":"NodeText","Data":"*Type表示类型指针，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"new函数返回一个指向该类型内存地址的指针。"}]}]}]},{"ID":"20230727000887-hegf4f8","Type":"NodeParagraph","Properties":{"id":"20230727000887-hegf4f8","updated":"20230727000887"},"Children":[{"Type":"NodeText","Data":"new函数不太常用，"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"使用new函数得到的是一个类型的指针，并且该指针对应的值为该类型的零值"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"。举个例子："}]},{"ID":"20230727000888-f2n73xt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000888-f2n73xt","updated":"20230727000888"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func main() {\n\ta := new(int)\n\tb := new(bool)\n\tfmt.Printf(\"%T\\n\", a) // *int\n\tfmt.Printf(\"%T\\n\", b) // *bool\n\tfmt.Println(*a)       // 0\n\tfmt.Println(*b)       // false\n}\t\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000889-ktyupgo","Type":"NodeParagraph","Properties":{"id":"20230727000889-ktyupgo","updated":"20230727000889"},"Children":[{"Type":"NodeText","Data":"本节开始的示例代码中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"var a *int"},{"Type":"NodeText","Data":"只是声明了一个指针变量a但是没有初始化，指针作为引用类型需要初始化后才会拥有内存空间，才可以给它赋值。应该按照如下方式使用内置的new函数对a进行初始化之后就可以正常对其赋值了："}]},{"ID":"20230727000890-opfo7f3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000890-opfo7f3","updated":"20230727000890"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func main() {\n\tvar a *int\n\ta = new(int)\n\t*a = 10\n\tfmt.Println(*a)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000891-fs263l3","Type":"NodeParagraph","Properties":{"id":"20230727000891-fs263l3","updated":"20230727000891"},"Children":[{"Type":"NodeText","Data":"我们通常会使用 var 来定义变量，而非使用 new。因为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"var 在定义变量时，会同时进行变量的声明和零值初始化"},{"Type":"NodeText","Data":"。而 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"new 只是进行了零值初始化，并没有进行变量的声明"},{"Type":"NodeText","Data":"，因此"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"需要使用赋值语句将其赋给一个变量"},{"Type":"NodeText","Data":"。同时，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"使用 new 分配的内存空间是默认零值的，而使用 make 分配的内存空间是经过初始化的。"}]},{"ID":"20230727000892-edew12s","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000892-edew12s","updated":"20230727000892"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"make"}]},{"ID":"20230727000893-xlz55bl","Type":"NodeParagraph","Properties":{"id":"20230727000893-xlz55bl","updated":"20230727000893"},"Children":[{"Type":"NodeText","Data":"make也是用于内存分配的，区别于new，它"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"只用于slice、map以及channel的内存创建，而且它返回的类型就是这三个类型本身，而不是他们的指针类型，因为这三种类型就是引用类型，所以就没有必要返回他们的指针了"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"。make函数的函数签名如下："}]},{"ID":"20230727000894-ylhyooa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000894-ylhyooa","updated":"20230727000894"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func make(t Type, size ...IntegerType) Type\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000895-h2ab8lc","Type":"NodeParagraph","Properties":{"id":"20230727000895-h2ab8lc","updated":"20230727000895"},"Children":[{"Type":"NodeText","Data":"make函数是无可替代的，我们在使用slice、map以及channel的时候，都需要使用make进行初始化，然后才可以对它们进行操作。这个我们在上一章中都有说明，关于channel我们会在后续的章节详细说明。"}]},{"ID":"20230727000896-2r3d37s","Type":"NodeParagraph","Properties":{"id":"20230727000896-2r3d37s","updated":"20230727000896"},"Children":[{"Type":"NodeText","Data":"本节开始的示例中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"var b map[string]int"},{"Type":"NodeText","Data":"只是声明变量b是一个map类型的变量，需要像下面的示例代码一样使用make函数进行初始化操作之后，才能对其进行键值对赋值："}]},{"ID":"20230727000897-gqttdh4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000897-gqttdh4","updated":"20230727000897"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func main() {\n\tvar b map[string]int\n\tb = make(map[string]int, 10)\n\tb[\"沙河娜扎\"] = 100\n\tfmt.Println(b)\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000898-ejlk076","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230727000898-ejlk076","updated":"20230727000898"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"new与make的区别"}]},{"ID":"20230727000899-lseb3ur","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000899-lseb3ur","updated":"20230727000899"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"共同点"}]},{"ID":"20230727000900-lhpsz4k","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000900-lhpsz4k","updated":"20230727000900"},"Children":[{"ID":"20230727000901-y9k0anx","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000901-y9k0anx","updated":"20230727000901"},"Children":[{"ID":"20230727000902-j70qymq","Type":"NodeParagraph","Properties":{"id":"20230727000902-j70qymq","updated":"20230727000902"},"Children":[{"Type":"NodeText","Data":"二者都是用来做内存分配的，都将内存分配到堆(heap)上；"}]}]}]},{"ID":"20230727000903-szlklpi","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230727000903-szlklpi","updated":"20230727000903"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"不同点"}]},{"ID":"20230727000904-xcajz0h","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000904-xcajz0h","updated":"20230727000904"},"Children":[{"ID":"20230727000905-urucg01","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230727000905-urucg01","updated":"20230727000905"},"Children":[{"ID":"20230727000906-v9zcjuz","Type":"NodeParagraph","Properties":{"id":"20230727000906-v9zcjuz","updated":"20230727000906"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"make只用于slice、map以及channel的初始化"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"；"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"new用于类型的内存分配，并且内存对应的值为类型零值"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20230727000907-zkjj823","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20230727000907-zkjj823","updated":"20230727000907"},"Children":[{"ID":"20230727000908-swo4k9z","Type":"NodeParagraph","Properties":{"id":"20230727000908-swo4k9z","updated":"20230727000908"},"Children":[{"Type":"NodeText","Data":"make返回的还是这三个引用类型本身，new返回的是指向类型的指针。"}]}]},{"ID":"20230727000909-883go86","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20230727000909-883go86","updated":"20230727000909"},"Children":[{"ID":"20230727000910-j9w6lez","Type":"NodeParagraph","Properties":{"id":"20230727000910-j9w6lez","updated":"20230727000910"},"Children":[{"Type":"NodeText","Data":"make分配空间后会进行初始化，new分配的空间被清零，并没有初始化内存。"}]}]}]},{"ID":"20230727000911-21xf3j0","Type":"NodeBlockquote","Properties":{"id":"20230727000911-21xf3j0","updated":"20230727000911"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20230727000912-qrc7ns8","Type":"NodeParagraph","Properties":{"id":"20230727000912-qrc7ns8","updated":"20230727000912"},"Children":[{"Type":"NodeText","Data":"这是因为在 Golang 中，除了一些基本类型之外，大部分的变量都是引用类型，即变量存储的是一个指向实际数据的地址。而在栈上分配变量时，会随着函数的执行完毕而自动回收，但在堆上分配变量时，需要手动进行垃圾回收。"}]},{"ID":"20230727000913-beuatzh","Type":"NodeParagraph","Properties":{"id":"20230727000913-beuatzh","updated":"20230727000913"},"Children":[{"Type":"NodeText","Data":"因此，在 Golang 中，新的变量通常都会在堆上被分配，并且等待垃圾回收器进行回收。同时，对于小对象或临时对象，也可能会被分配到栈上。"}]},{"ID":"20230727000914-ntet9l8","Type":"NodeParagraph","Properties":{"id":"20230727000914-ntet9l8","updated":"20230727000914"},"Children":[{"Type":"NodeText","Data":"需要注意的是，在 Golang 中，无论是栈还是堆，都是由运行时(runtime)负责分配和管理的，并不需要程序员自己管理内存。这也是 Golang 作为一门高级语言的一个特点。"}]}]},{"ID":"20230727000915-xi4o3c9","Type":"NodeBlockquote","Properties":{"id":"20230727000915-xi4o3c9","updated":"20230727000915"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20230727000916-b623hwk","Type":"NodeParagraph","Properties":{"id":"20230727000916-b623hwk","updated":"20230727000916"},"Children":[{"Type":"NodeText","Data":"零值是指变量在未进行显式初始化时自动获得的值。在 Golang 中，所有变量都有默认的零值，它们如下："}]},{"ID":"20230727000917-snn49lt","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000917-snn49lt","updated":"20230727000917"},"Children":[{"ID":"20230727000918-14hlayr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000918-14hlayr","updated":"20230727000918"},"Children":[{"ID":"20230727000919-jcrenro","Type":"NodeParagraph","Properties":{"id":"20230727000919-jcrenro","updated":"20230727000919"},"Children":[{"Type":"NodeText","Data":"数值类型（int、float、complex 等）：0"}]}]},{"ID":"20230727000920-8tliwvu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000920-8tliwvu","updated":"20230727000920"},"Children":[{"ID":"20230727000921-o7pb1q2","Type":"NodeParagraph","Properties":{"id":"20230727000921-o7pb1q2","updated":"20230727000921"},"Children":[{"Type":"NodeText","Data":"bool 类型：false"}]}]},{"ID":"20230727000922-ehpsshb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000922-ehpsshb","updated":"20230727000922"},"Children":[{"ID":"20230727000923-31ifbvl","Type":"NodeParagraph","Properties":{"id":"20230727000923-31ifbvl","updated":"20230727000923"},"Children":[{"Type":"NodeText","Data":"string 类型：\"\""}]}]},{"ID":"20230727000924-5yi521o","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230727000924-5yi521o","updated":"20230727000924"},"Children":[{"ID":"20230727000925-w4vl8eq","Type":"NodeParagraph","Properties":{"id":"20230727000925-w4vl8eq","updated":"20230727000925"},"Children":[{"Type":"NodeText","Data":"指针类型：nil"}]}]}]},{"ID":"20230727000926-p5qo9jb","Type":"NodeParagraph","Properties":{"id":"20230727000926-p5qo9jb","updated":"20230727000926"},"Children":[{"Type":"NodeText","Data":"对于结构体和数组等复合类型，它们的零值则是所有成员或元素的零值。"}]},{"ID":"20230727000927-f36357i","Type":"NodeParagraph","Properties":{"id":"20230727000927-f36357i","updated":"20230727000927"},"Children":[{"Type":"NodeText","Data":"与零值不同，初始化是指给变量赋予一个明确的初始值。在 Golang 中，make 用于初始化切片、映射和通道等引用类型，而 new 则只是分配了一块内存，并没有进行初始化操作。在 Golang 中，切片、映射和通道等引用类型在创建时必须先进行初始化操作，否则会出现 panic 异常。因此，使用 make 进行初始化是常见的做法，而使用 new 分配内存空间后，需要手动进行初始化操作。"}]}]}]}