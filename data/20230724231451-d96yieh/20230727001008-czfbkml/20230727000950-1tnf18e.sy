{"ID":"20230727000950-1tnf18e","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f987","id":"20230727000950-1tnf18e","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230727000950-1tnf18e\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230727000951-k7c3ewd\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230727000967-j5m1zr0\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230727000951-k7c3ewd\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;","tags":"数据类型,值类型,引用类型","title":"05. 值类型与引用类型","updated":"20230727002310"},"Children":[{"ID":"20230727000951-k7c3ewd","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230727000951-k7c3ewd","updated":"20230727000951"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"5. 值类型与引用类型"}]},{"ID":"20230727000952-ttu73lq","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000952-ttu73lq","updated":"20230727000952"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"值传递"}]},{"ID":"20230727000953-17ao5wx","Type":"NodeParagraph","Properties":{"id":"20230727000953-17ao5wx","updated":"20230727000953"},"Children":[{"Type":"NodeText","Data":"值传递是指传递参数时，实参的值会被复制到形参中，"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"形参的修改不会影响到实参。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000954-eens90q","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000954-eens90q","updated":"20230727000954"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"引用传递"}]},{"ID":"20230727000955-b26498i","Type":"NodeParagraph","Properties":{"id":"20230727000955-b26498i","updated":"20230727000955"},"Children":[{"Type":"NodeText","Data":"引用传递是将实参的地址传递给形参，"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"形参可以通过这个地址来修改实参。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000956-8u846ko","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000956-8u846ko","updated":"20230727000956"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"值类型"}]},{"ID":"20230727000957-qfzxg09","Type":"NodeParagraph","Properties":{"id":"20230727000957-qfzxg09","updated":"20230727000957"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"int、float、bool、string、数组、struct"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"都是值类型，在函数调用的时候是值传递。"}]},{"ID":"20230727000958-od5jz37","Type":"NodeParagraph","Properties":{"id":"20230727000958-od5jz37","updated":"20230727000958"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"变量直接存储值"},{"Type":"NodeText","Data":"，内存通常在栈中分配。"}]},{"ID":"20230727000959-xyqyz9j","Type":"NodeParagraph","Properties":{"id":"20230727000959-xyqyz9j","updated":"20230727000959"},"Children":[{"Type":"NodeText","Data":"给新的变量赋值时(拷贝时)，为"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"深拷贝"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"直接开辟新的内存地址存储值。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000960-m2u1h9j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000960-m2u1h9j","updated":"20230727000960"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func swap(x, y int) {\n    x, y = y, x\n}\n\nfunc main() {\n    a, b := 1, 2\n    swap(a, b)\n    fmt.Println(a, b) // 输出 1 2\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000961-ww2pp8z","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230727000961-ww2pp8z","updated":"20230727000961"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"引用类型"}]},{"ID":"20230727000962-ugw1ma7","Type":"NodeParagraph","Properties":{"id":"20230727000962-ugw1ma7","updated":"20230727000962"},"Children":[{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"指针、slice、map、chan、interface(接口)、func、映射(reflect)"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":" 都是引用类型，在函数调用的时候进行的是引用传递。"}]},{"ID":"20230727000963-8u5oqiv","Type":"NodeParagraph","Properties":{"id":"20230727000963-8u5oqiv","updated":"20230727000963"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"变量直接存储内存地址，这个地址存储值"},{"Type":"NodeText","Data":"。内存通常再堆上分配。"}]},{"ID":"20230727000964-cy6wtsq","Type":"NodeParagraph","Properties":{"id":"20230727000964-cy6wtsq","updated":"20230727000964"},"Children":[{"Type":"NodeText","Data":"给新的变量赋值时(拷贝时)，为"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"浅拷贝"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"，"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"新的变量通过指针指向原来的内存地址。可以使用copy关键字实现引用类型的深拷贝。"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeMark2CloseMarker","Data":"=="}]}]},{"ID":"20230727000965-tuxw7a1","Type":"NodeParagraph","Properties":{"id":"20230727000965-tuxw7a1","updated":"20230727000965"},"Children":[{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"当如果没有任何一个变量引用这个地址时，这个地址就会被GC垃圾回收。"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]}]},{"ID":"20230727000966-sy3kyh4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Z28=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230727000966-sy3kyh4","updated":"20230727000966"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"func modifySlice(s []int) {\n    s[0] = 100\n}\n\nfunc main() {\n    s := []int{1, 2, 3}\n    modifySlice(s)\n    fmt.Println(s) // 输出 [100 2 3]\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230727000967-j5m1zr0","Type":"NodeParagraph","Properties":{"id":"20230727000967-j5m1zr0","updated":"20230727000967"},"Children":[{"Type":"NodeText","Data":"在实际开发中，"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"我们通常会将函数的形参声明为指针类型或切片等引用类型，这样可以避免复制大量的数据，在一定程度上提高程序的效率"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"。同时，在使用引用类型时需要注意，由于"},{"Type":"NodeMark","Children":[{"Type":"NodeMark2OpenMarker","Data":"=="},{"Type":"NodeText","Data":"多个变量共享同一个底层数据结构，可能会导致并发访问时的竞态条件问题，因此需要进行相应的锁定操作"},{"Type":"NodeMark2CloseMarker","Data":"=="}]},{"Type":"NodeText","Data":"。"}]}]}