{"ID":"20230918103728-03p4dqy","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f9ca","id":"20230918103728-03p4dqy","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230918103728-03p4dqy\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230918103729-v7xn2d3\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230918103788-stzlhoa\u0026quot;,\u0026quot;scrollTop\u0026quot;:4918,\u0026quot;focusId\u0026quot;:\u0026quot;20230918103759-bwmh4mm\u0026quot;,\u0026quot;focusStart\u0026quot;:1068,\u0026quot;focusEnd\u0026quot;:1068\u0026#125;","title":"服务框架用户手册(Beta版本)","updated":"20231023161032"},"Children":[{"ID":"20230918103729-v7xn2d3","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230918103729-v7xn2d3","updated":"20230918103729"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"一 服务框架简介"}]},{"ID":"20230918103730-h14nn8e","Type":"NodeParagraph","Properties":{"id":"20230918103730-h14nn8e","updated":"20231012144532"},"Children":[{"Type":"NodeText","Data":"​​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20231012144532-niqxlly.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​​​"}]},{"ID":"20230918103731-xxviiyh","Type":"NodeParagraph","Properties":{"id":"20230918103731-xxviiyh","updated":"20230918103731"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"@晓波（简要补充流程图的说明介绍，包括：框架的总体目标和实现功能，有哪些核心模块，其中的功能是什么，代码层面的实现思路，框架运行流程介绍）"}]},{"ID":"20231012145233-jwwgoj2","Type":"NodeParagraph","Properties":{"id":"20231012145233-jwwgoj2","updated":"20231023161032"},"Children":[{"Type":"NodeText","Data":"该框架主要实现了对大模型的封装，保证大模型的合理并发，并对外提供Post接口"}]},{"ID":"20230918103732-1r854lw","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230918103732-1r854lw","updated":"20230918103732"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"二 模型改造"}]},{"ID":"20230918103733-penjm9g","Type":"NodeParagraph","Properties":{"id":"20230918103733-penjm9g","updated":"20230918103733"},"Children":[{"Type":"NodeText","Data":"模型服务改造共分为两步："}]},{"ID":"20230918103734-qn45jsl","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230918103734-qn45jsl","updated":"20230918103734"},"Children":[{"ID":"20230918103735-fnvdnwz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230918103735-fnvdnwz","updated":"20230918103735"},"Children":[{"ID":"20230918103736-xg6cln7","Type":"NodeParagraph","Properties":{"id":"20230918103736-xg6cln7","updated":"20230918103736"},"Children":[{"Type":"NodeText","Data":"1 每个模型按照最小执行单元封装成 Model 类"}]}]},{"ID":"20230918103737-5hs872u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230918103737-5hs872u","updated":"20230918103737"},"Children":[{"ID":"20230918103738-nuaarso","Type":"NodeParagraph","Properties":{"id":"20230918103738-nuaarso","updated":"20230918103738"},"Children":[{"Type":"NodeText","Data":"2 在 Pipe 类中执行并拼接所有 Model 的预测函数，返回模型结果。"}]}]}]},{"ID":"20230918103739-eu8cmxf","Type":"NodeParagraph","Properties":{"id":"20230918103739-eu8cmxf","updated":"20231023152100"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"用户需要基于下面的Model类和Pipe类提供"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Model.py"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Pipe.py"},{"Type":"NodeText","Data":"​ 文件，每个文件都要加入main函数，对Model类和Pipe类进行测试，测试成功后交付文件。与后端工程师对接 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"data"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"和"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"result"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"的结构。"}]},{"ID":"20230918103740-2djqzhp","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230918103740-2djqzhp","updated":"20230918103740"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"1 Model 类"}]},{"ID":"20230918103741-62qw4kn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230918103741-62qw4kn","updated":"20230918103741"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Model 类示例"}]},{"ID":"20230918103742-al0vn5k","Type":"NodeParagraph","Properties":{"id":"20230918103742-al0vn5k","updated":"20230918103742"},"Children":[{"Type":"NodeText","Data":"将模型做算子类封装，参照下述 python 类进行："}]},{"ID":"20230918103743-1xnw9wz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHl0aG9u","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230918103743-1xnw9wz","updated":"20230918103743"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"'''\nAuthor: Name\nDate: 2023-08-29 17:37:07\nLastEditors: Name\nLastEditTime: 2023-08-29 17:37:12\nFilePath: /Desktop/class Model.py\nDescription: \n\nCopyright (c) 2023 by sgcc, All Rights Reserved. \n'''\n\nimport numpy as np\nfrom transformers import AutoModel\nfrom transformers import AutoTokenizer\n\nclass Model(object):\n    \"\"\"\n    深度学习模型封装类\n    \"\"\"\n\tdef __init__(self, yaml_path):\n\t\t\"\"\"初始化函数，初始化模型的所有私有变量，如：tokenizer, model 等\n\n\t\tArgs:\n\t\t\tyaml_path (str): yaml 配置文件的地址\n\t\t\"\"\"\n        # 一个简单示例：\n        self.config = yaml.load(open(yaml_path, 'r'), Loader=yaml.Loader)\n  \t\tself.tokenizer = AutoTokenizer.from_pretrained(self.config['tokenizer_path'])\n    \tself.model = AutoModel.from_pretrained(self.config['model_path'])\n    \tself.model.eval()\n\t\n\tdef predict(self, data):\n        \"\"\"模型预测函数，输入 data，输出结果\n\n\t\tArgs:\n\t\t\tdata (string): 将模型推理所需的参数以 string 形式传入\n   \n        Returns:\n            json: 将模型所有的推理结果以 json 形式返回\n\t\t\"\"\"\n\n        # 一个简单示例：\n\t\tinput_data = self.get_input(data)\n\t\tpredict_data = self.model.predict(tokenizer = self.toeknizer, input_data)\n\t\tresult = self.get_output(predict_data)\n\t\treturn result\n\t\n\tdef get_input(self, data):\n\t\t\"\"\"请求解析函数，将传入 data 转化为模型的输入格式\n           解析data，确认传入data的格式是否符合要求；\n           做一些tokenizer 操作等\n\n\t\tArgs:\n\t\t\tdata (string): 服务输入\n\n        Returns:\n        \t自定义 type: 返回 model.predict() 所需变量即可，对于返回变量数量，数据格式不做限制\n\t\t\"\"\"\n        \n        # 一个简单示例：\n        if isinstance(data, str):\n            return data\n        else:\n            return \"\"\n\t\t\n\tdef get_output(self, result):\n\t\t\"\"\"响应拼接函数，将模型预测的结果解码，转化为输出格式\n\n\t\tArgs:\n\t\t\t自定义 type: 模型预测结果\n\n        Returns:\n            json: 返回 model.predict() 所需变量即可，对于返回变量数量，数据格式不做限制\n\t\t\"\"\"\n\n        # 一个简单示例：\n        subject_preds[:, [0, -1]] *= 0\n        start = np.where(subject_preds[0, :, 0] \u003e 0.6)[0]\n        result = self.extract_subject(start)\n\t\treturn result\n\n    def extract_subject(self, inputs):\n        \"\"\"一个用于配合框架说明的示例函数（非必要）\n           该函数的实际意义是根据subject_ids从output中取出subject的向量表征\n\n\t\tArgs:\n\t\t\tinputs: 模型预测结果\n\n        Returns:\n            tensor：向量\n\t\t\"\"\"\n        output, subject_ids = inputs\n        start = batch_gather(output, subject_ids[:, :1])\n        end = batch_gather(output, subject_ids[:, 1:])\n        subject = K.concatenate([start, end], 2)\n        return subject[:, 0]\n\n\n# 主函数 对封装的类进行测试\n# 简单示例\nif __name__ == '__main':\n    yp = './conf/config.yaml'\n\tchinese_model = Model(yp)\n\tprint(\"初始化模型完成\")\n\tfor line in sys.stdin:\n        result = chinese_model.predict(line.strip())\n    \tprint(result)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230918103744-osf6emg","Type":"NodeParagraph","Properties":{"id":"20230918103744-osf6emg","updated":"20230918103744"},"Children":[{"Type":"NodeText","Data":"模型类共有四个核心函数，分别是："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"__init__"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"predict"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"get_input"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"get_output"},{"Type":"NodeText","Data":"。以下是每个类内方法的使用介绍："}]},{"ID":"20230918103745-iv2kirq","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230918103745-iv2kirq","updated":"20230918103745"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"init 方法"}]},{"ID":"20230918103746-kgv8dlr","Type":"NodeParagraph","Properties":{"id":"20230918103746-kgv8dlr","updated":"20230918103746"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"__init__"},{"Type":"NodeText","Data":"方法中，定义的参数 config 为 json 类型，config 字典中包含在进行类初始化时需要的参数，具体的参数数量和参数类型根据实际情况进行设定，封装后与 go 开发工程师"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"/jiali-xymr9","TextMarkTextContent":"@郝晓波(jiali-xymr9)"},{"Type":"NodeText","Data":"进行沟通，保证可以正常实例化该模型。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"__init__"},{"Type":"NodeText","Data":"方法的具体实现由算法工程师设计实现。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"yaml 文件示例："}]},{"ID":"20230918103747-0f0ez4d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHl0aG9u","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230918103747-0f0ez4d","updated":"20230918103747"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"config_path: '/root/kg/bert/gpt2_ml/config.json'\ncheckpoint_path: '/root/kg/bert/gpt2_ml/model.ckpt-100000'\ndict_path: '/root/kg/bert/gpt2_ml/vocab.txt'\nmodel: \"gpt2_ml\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230918103748-h3j7h4q","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230918103748-h3j7h4q","updated":"20230918103748"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"predict 方法"}]},{"ID":"20230918103749-xqhodbu","Type":"NodeParagraph","Properties":{"id":"20230918103749-xqhodbu","updated":"20230918104132"},"Children":[{"Type":"NodeText","Data":"在"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"predict"},{"Type":"NodeText","Data":"​方法中，用于获取模型最终输出。\n传入的参数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"data"},{"Type":"NodeText","Data":"​为字符串类型（可以由字典类型转化为字符串类型），"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"data"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"中包含获取模型输入的必要参数，具体的参数基于模型自主设计，将设计好的参数数量和参数类型与 go 开发工程师"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"/jiali-xymr9","TextMarkTextContent":"@郝晓波(jiali-xymr9)"},{"Type":"NodeText","Data":"进行沟通，保证该该方法可以正常的使用。\n传出的参数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"result"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"为字典类型，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"result"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"中包含模型的输出结果，将设计好的"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"result"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"与 go 开发工程师"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"/jiali-xymr9","TextMarkTextContent":"@郝晓波(jiali-xymr9)"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"进行确认，保证输出结果可以返回和正确的使用。"},{"Type":"NodeText","Data":"\n​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"predict"},{"Type":"NodeText","Data":"​方法的具体实现由算法工程师设计实现。\n传入 data 示例："}]},{"ID":"20230918103750-mj7yjsa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHl0aG9u","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230918103750-mj7yjsa","updated":"20230918103750"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"data = {\n\t'query': '今天天气不错',\n    'history': ['你好','你好，请问有什么可以帮您的吗'] ,\n    'n': 1,\n    'topp': 0.95,\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230918103751-y8eq6d6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHl0aG9u","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230918103751-y8eq6d6","updated":"20230918103751"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\"query\": \"今天天气不错\", \"history\": [\"你好\", \"你好，请问有什么可以帮您的吗\"], \"n\": 1, \"topp\": 0.95}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230918103752-02kdpzj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230918103752-02kdpzj","updated":"20230918103752"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"get_input 方法"}]},{"ID":"20230918103753-6j8ohx0","Type":"NodeParagraph","Properties":{"id":"20230918103753-6j8ohx0","updated":"20230918104126"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"get_input"},{"Type":"NodeText","Data":"​方法用来初始化和检查模型传入的参数；该方法为选择性使用，可以选择使用该方法进行传入参数的检查和初始化，也可以直接在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"predict"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"方法中直接设计初始化和检查传入参数。"}]},{"ID":"20230918103754-rpykztr","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230918103754-rpykztr","updated":"20230918103754"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"get_output 方法"}]},{"ID":"20230918103755-3ggqn90","Type":"NodeParagraph","Properties":{"id":"20230918103755-3ggqn90","updated":"20230918104119"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"get_output"},{"Type":"NodeText","Data":"​方法用来检查和规范输出参数；该方法同样为选择性使用，可以使用该方法进行输出参数的检查，也可以直接在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"predict"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"方法中直接检查和规范输出参数。"}]},{"ID":"20230918103756-0011q66","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230918103756-0011q66","updated":"20230918103756"},"Children":[{"Type":"NodeText","Data":"2 Pipe 类"}]},{"ID":"20230918103757-xvqall2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230918103757-xvqall2","updated":"20230918103757"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Pipe 类示例"}]},{"ID":"20230918103758-6vl7tte","Type":"NodeParagraph","Properties":{"id":"20230918103758-6vl7tte","updated":"20230918103758"},"Children":[{"Type":"NodeText","Data":"将策略的推理流程参照下述 python 类进行封装："}]},{"ID":"20230918103759-bwmh4mm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHl0aG9u","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230918103759-bwmh4mm","updated":"20230918103759"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"'''\nAuthor: Name\nDate: 2023-08-29 17:37:07\nLastEditors: Name\nLastEditTime: 2023-08-29 17:37:12\nFilePath: /Desktop/class Model.py\nDescription: \n\nCopyright (c) 2023 by sgcc, All Rights Reserved. \n'''\n\nfrom Model import Model_1, Model_2\n\nclass Pipe(object):\n    \"\"\"\n    模型流封装类\n    \"\"\"\n\tdef __init__(self, yaml_path):\n\t\t\"\"\"初始化函数，初始化策略中所有使用到的模型算子，如：model_1, model_2 等\n\n\t\tArgs:\n\t\t\tyaml_path (str): yaml 配置文件的地址\n\t\t\"\"\"\n        # 一个简单示例：\n        self.model_1 = Model_1('./config_1.yaml')\n    \tself.model_2 = Model_2('./config_2.yaml')\n\n\tdef predict(self, data):\n        \"\"\"模型预测函数，输入 data，输出结果\n\n\t\tArgs:\n\t\t\tdata (string): 将模型推理所需的参数以 string 形式传入\n   \n        Returns:\n            json: 将模型所有的推理结果以 json 形式返回\n\t\t\"\"\"\n\n        # 一个简单示例：\n        model_1_output = self.model_1.predict(data.get('text', \"\"))\n\t\tmodel_2_output = self.model_2.predict(data.get('text', \"\"))\n        result = {\n            \"result_1\": model_1_output,\n            \"result_2\": model_2_output\n        }\n        return json.dumps(result, ensure_ascii=False)\n\n\n# 主函数 对封装的类进行测试\n# 简单示例\nif __name__ == '__main':\n    yp = './conf/config.yaml'\n\tchinese_pipe = Pipe(yp)\n\tprint(\"初始化模型完成\")\n\tfor line in sys.stdin:\n        result = chinese_pipe.predict(line.strip())\n    \tprint(result)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230918103760-rm0dzhc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230918103760-rm0dzhc","updated":"20230918103760"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"init 方法"}]},{"ID":"20230918103761-t3j3mx0","Type":"NodeParagraph","Properties":{"id":"20230918103761-t3j3mx0","updated":"20230918103761"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"__init__"},{"Type":"NodeText","Data":"方法中，初始化策略推理流程所需要的变量，具体的参数数量和参数类型根据实际情况进行设计，封装后与 go 开发工程师"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"/jiali-xymr9","TextMarkTextContent":"@郝晓波(jiali-xymr9)"},{"Type":"NodeText","Data":"进行沟通，保证可以正常实例化该模型。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"__init__"},{"Type":"NodeText","Data":"方法的具体实现由算法工程师设计实现。"}]},{"ID":"20230918103762-rs8syw0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230918103762-rs8syw0","updated":"20230918103762"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"predict 方法"}]},{"ID":"20230918103763-r09l66f","Type":"NodeParagraph","Properties":{"id":"20230918103763-r09l66f","updated":"20230918104109"},"Children":[{"Type":"NodeText","Data":"在"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"predict"},{"Type":"NodeText","Data":"​方法中，用于获取策略流最终输出。\n传入的参数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"data"},{"Type":"NodeText","Data":"​为为字符串类型（可以由字典类型转化为字符串类型），"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"data"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"中包含获取模型输入的必要参数，具体的参数基于模型自主设计，将设计好的参数数量和参数类型与 go 开发工程师"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"/jiali-xymr9","TextMarkTextContent":"@郝晓波(jiali-xymr9)"},{"Type":"NodeText","Data":"进行沟通，保证该该方法可以正常的使用。\n传出的参数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"result"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"为字典类型，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"result"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"中包含模型的输出结果，将设计好的"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"result"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"与 go 开发工程师"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"/jiali-xymr9","TextMarkTextContent":"@郝晓波(jiali-xymr9)"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"进行确认，保证输出结果可以返回和正确的使用。"},{"Type":"NodeText","Data":"\n​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"predict"},{"Type":"NodeText","Data":"​方法的具体实现由算法工程师设计实现。"}]},{"ID":"20230918103764-e0pkjza","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230918103764-e0pkjza","updated":"20230918103764"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"三 接口设计"}]},{"ID":"20230918103765-rkv4qs4","Type":"NodeParagraph","Properties":{"id":"20230918103765-rkv4qs4","updated":"20230918103765"},"Children":[{"Type":"NodeText","Data":"封装完毕后，算法工程师需要给到如下的输入示例和输出示例,包括字段的类型和说明"}]},{"ID":"20230918103766-9e2kswn","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230918103766-9e2kswn","updated":"20230918103766"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"输入"}]},{"ID":"20230918103767-1ikiq44","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"anNvbg==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230918103767-1ikiq44","updated":"20230918103767"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\n  \"input\": \"当前城南变重过载主变有多少？\",\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230918103768-sfklph3","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230918103768-sfklph3","updated":"20230918103768"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"输出"}]},{"ID":"20230918103769-fdkig99","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"anNvbg==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230918103769-fdkig99","updated":"20230918103769"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\n  \"result\": {\n    \"location\": \"全省\",\n    \"device\": [\n      {\n        \"name\": \"110kV城南变电站\",\n        \"id\": \"1234567890\"，\n        \"level\": \"省调\"\n      }\n    ],\n    \"device_short\": \"城南变\",\n    \"time\": [\n      \"2023-9-12 00:00:00\",\n      \"2023-9-12 19:48:56\"\n    ],\n    \"equipment\": \"主变\",\n    \"state\": \"重过载\",\n    \"comparison\": \"超过\",\n    \"number\": \"90%\",\n    \"type\": \"统计类\"\n  }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230918103770-up6myzg","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230918103770-up6myzg","updated":"20230918103770"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"输入字段说明"}]},{"ID":"20230918103771-susg7li","Type":"NodeTable","Data":"| **字段** | **类型** | **含义** | **说明** |\n| --- | --- | --- | --- |\n| **input** | **string** | **请求的问题** | **问题文本** |","TableAligns":[0,0,0,0],"Properties":{"id":"20230918103771-susg7li","updated":"20230918103771"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"字段"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"含义"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"说明"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"input"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"请求的问题"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"问题文本"}]}]}]},{"ID":"20230918103772-0cclbnk","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230918103772-0cclbnk","updated":"20230918103772"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"输出字段说明"}]},{"ID":"20230918103773-pl4ebf0","Type":"NodeTable","Data":"| **字段** | **类型** | **含义** | **说明** | **示例** |\n| --- | --- | --- | --- | --- |\n| **location** | **string** | **地理位置** | **地理位置** | **\"全省\"** |\n| **device** | **数组** | **变电站名/线路名 + 设备编码** | **用于唯一确定变电站/线路的表示符** |  |\n| **device[...].name** | **string** | **变电站名/线路名** | **变电站名/线路名的全称** | **\"110kV城南变电站\"** |\n| **device[...].id** | **string** | **设备编码** | **设备编码** | **\"1234567890\"** |\n| **device[...].level** | **string** | **所属调度** | **候选集：（省调，市调，县调等）** | **\"省调\"** |\n| **deviceshort** | **string** | **简称** | **问题中的变电站/线路的简称** | **\"城南变\"** |\n| **time** | **string数组** | **具体时间** | **包含起始时间，结束时间的数组；时间格式为YY-MM-DD hh:mm:ss** | **[2023-9-12 00:00:00,2023-9-12 19:48:56]** |\n| **equipment** | **string** | **主变/线路** | **选择查询主变或线路** | **\"主变\"** |\n| **state** | **string** | **重过载状态** | **候选集：（重载、过载、重过载、负载、负荷）** | **\"重过载\"** |\n| **comparison** | **string** | **逻辑关系** | **比较词** | **\"超过\"** |\n| **number** | **string** | **查询数字** | **非时间词的限定词** | **\"90%\"** |\n| **type** | **string** | **问题类型** | **候选集：（统计类、查询类、计算类）** | **\"统计类\"** |","TableAligns":[0,0,0,0,0],"Properties":{"id":"20230918103773-pl4ebf0","updated":"20230918103773"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"字段"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"含义"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"说明"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"示例"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"location"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"地理位置"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"地理位置"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;全省\u0026quot;"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"device"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数组"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"变电站名/线路名 + 设备编码"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"用于唯一确定变电站/线路的表示符"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"device[...].name"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"变电站名/线路名"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"变电站名/线路名的全称"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;110kV城南变电站\u0026quot;"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"device[...].id"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"设备编码"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"设备编码"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;1234567890\u0026quot;"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"device[...].level"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"所属调度"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"候选集：（省调，市调，县调等）"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;省调\u0026quot;"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"deviceshort"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"简称"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"问题中的变电站/线路的简称"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;城南变\u0026quot;"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"time"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string数组"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"具体时间"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"包含起始时间，结束时间的数组；时间格式为YY-MM-DD hh:mm:ss"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"[2023-9-12 00:00:00,2023-9-12 19:48:56]"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"equipment"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"主变/线路"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"选择查询主变或线路"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;主变\u0026quot;"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"state"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"重过载状态"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"候选集：（重载、过载、重过载、负载、负荷）"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;重过载\u0026quot;"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"comparison"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"逻辑关系"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"比较词"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;超过\u0026quot;"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"number"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"查询数字"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"非时间词的限定词"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;90%\u0026quot;"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"type"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"问题类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"候选集：（统计类、查询类、计算类）"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;统计类\u0026quot;"}]}]}]},{"ID":"20230918103774-52h1ioh","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230918103774-52h1ioh","updated":"20230918103774"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"四 性能测试"}]},{"ID":"20230918103775-igs1f8a","Type":"NodeParagraph","Properties":{"id":"20230918103775-igs1f8a","updated":"20230918103775"},"Children":[{"Type":"NodeText","Data":"算法工程师在成功封装和测试模型之后，"},{"Type":"NodeStrong","Children":[{"Type":"NodeStrongA6kOpenMarker","Data":"**"},{"Type":"NodeText","Data":"需要对单机模型进行QPS测试，即每秒的并发请求数量。"},{"Type":"NodeStrongA6kCloseMarker","Data":"**"}]},{"Type":"NodeText","Data":"建议进行多次测试，并将测试结果进行统计和取平均，以确保测试数据的可靠性。"}]},{"ID":"20230918103776-q19bpbg","Type":"NodeParagraph","Properties":{"id":"20230918103776-q19bpbg","updated":"20230918103776"},"Children":[{"Type":"NodeText","Data":"| "}]},{"ID":"20230918103777-noepxjt","Type":"NodeTable","TableAligns":[0,0],"Properties":{"colgroup":"|width: 115px;","id":"20230918103777-noepxjt","updated":"20230918103777"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"每秒的并发量"}]},{"Type":"NodeTableCell","Data":"th"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"单机模型"}]},{"Type":"NodeTableCell","Data":"td"}]}]},{"ID":"20230918103778-75v4dau","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230918103778-75v4dau","updated":"20230918103778"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"五 环境要求"}]},{"ID":"20230918103779-gzmgdwu","Type":"NodeParagraph","Properties":{"id":"20230918103779-gzmgdwu","updated":"20230918135517"},"Children":[{"Type":"NodeText","Data":"为了方便对模型进行封装，算法工程师需要在python环境中加入 grpcio和grpcio-tools;\ngrpcio版本：1.57.0 (最新版本)\ngrpcio-tools版本: 1.57.0 (最新版本)"}]},{"ID":"20230918103780-1oi1u7b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230918103780-1oi1u7b","updated":"20230918103780"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"pip install grpcio\npip install grpcio-tools\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230918103781-g6dsiyr","Type":"NodeParagraph","Properties":{"id":"20230918103781-g6dsiyr","updated":"20230918103781"},"Children":[{"Type":"NodeText","Data":"加入上述库后运行如下命令，不报错证明安装成功；"}]},{"ID":"20230918103782-rb4zov3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230918103782-rb4zov3","updated":"20230918103782"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"python\n\u003e\u003e\u003e import grpc\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230918103783-0gbtr6u","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230918103783-0gbtr6u","updated":"20230918103783"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"六 模型启动脚本命令"}]},{"ID":"20230918103784-0x1133d","Type":"NodeParagraph","Properties":{"id":"20230918103784-0x1133d","updated":"20230918103784"},"Children":[{"Type":"NodeText","Data":"算法工程师封装好模型并测试成功后，需要将启动python环境的脚本命令交接给go开发工程师"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"/jiali-xymr9","TextMarkTextContent":"@郝晓波(jiali-xymr9)"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230918103785-rlc8kiv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230918103785-rlc8kiv","updated":"20230918111305"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA=="},{"Type":"NodeCodeBlockCode","Data":"conda activate ener\npython pipe.py\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231023155250-mnnqoc0","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231023155250-mnnqoc0","updated":"20231023155311"},"Children":[{"Type":"NodeText","Data":"七 模型运行所需的资源"}]},{"ID":"20231023155316-3qtnmcz","Type":"NodeParagraph","Properties":{"id":"20231023155316-3qtnmcz","updated":"20231023160340"},"Children":[{"Type":"NodeText","Data":"算法工程师在测试模型时需要记录模型在启动和进行推理时消耗的服务器的GPU、CPU、内存资源是多少，便于后续部署确定使用的最大资源。"}]},{"ID":"20231023160323-wcdk5jb","Type":"NodeTable","TableAligns":[0,0,0,0],"Properties":{"colgroup":"min-width: 60px;|min-width: 60px;|min-width: 60px;|","id":"20231023160323-wcdk5jb","updated":"20231023160525"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"模型/所需最大资源"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"GPU"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"CPU"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"内存"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"模型"}]},{"Type":"NodeTableCell","Data":"td"},{"Type":"NodeTableCell","Data":"td"},{"Type":"NodeTableCell","Data":"td"}]}]},{"ID":"20230918103786-qongwvx","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230918103786-qongwvx","updated":"20230918103786"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"总结"}]},{"ID":"20230918103787-vxeeiji","Type":"NodeParagraph","Properties":{"id":"20230918103787-vxeeiji","updated":"20230918103787"},"Children":[{"Type":"NodeText","Data":"基于上述的示例和方法的具体介绍，算法工程师基于实际的模型进行具体的设计，将设计好的封装给到后端开发人员，后端开发人员将基于 Pipe 类实例化任务模型，调用模型的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"predict"},{"Type":"NodeText","Data":"方法来传入模型需要的参数，接收输出的结果，将输出的结果进行封装，提供接口，让其他开发人员进行调用。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"以下为算法工程师需要与go开发工程师"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"/jiali-xymr9","TextMarkTextContent":"@郝晓波(jiali-xymr9)"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"交接的内容："}]},{"ID":"20230918103788-stzlhoa","Type":"NodeList","ListData":{},"Properties":{"id":"20230918103788-stzlhoa","updated":"20231023155052"},"Children":[{"ID":"20230918103789-fw3bx52","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230918103789-fw3bx52","updated":"20230918103789"},"Children":[{"ID":"20230918103790-8aeqm1e","Type":"NodeParagraph","Properties":{"id":"20230918103790-8aeqm1e","updated":"20230918103790"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"可以运行的模型的python环境，包括 grpcio和grpcio-tools的库"}]}]},{"ID":"20230918103791-su08drt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230918103791-su08drt","updated":"20230918103791"},"Children":[{"ID":"20230918103792-c05pt7w","Type":"NodeParagraph","Properties":{"id":"20230918103792-c05pt7w","updated":"20230918103792"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Model.py，包括可以进行测试main函数"}]}]},{"ID":"20230918103793-9hbewb9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230918103793-9hbewb9","updated":"20230918111308"},"Children":[{"ID":"20230918103794-qx89eu3","Type":"NodeParagraph","Properties":{"id":"20230918103794-qx89eu3","updated":"20230918111308"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Pipe.py，包括可以进行测试main函数"}]}]},{"ID":"20230918103795-dnbyehy","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230918103795-dnbyehy","updated":"20230918103795"},"Children":[{"ID":"20230918103796-mmdro63","Type":"NodeParagraph","Properties":{"id":"20230918103796-mmdro63","updated":"20230918103796"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"模型需要的接口字段"}]}]},{"ID":"20230918103797-cg6wxch","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230918103797-cg6wxch","updated":"20230918103797"},"Children":[{"ID":"20230918103798-3t81b96","Type":"NodeParagraph","Properties":{"id":"20230918103798-3t81b96","updated":"20230918103798"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"单机模型的qps"}]}]},{"ID":"20230918103799-gkp1tzw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20230918103799-gkp1tzw","updated":"20230918103799"},"Children":[{"ID":"20230918103800-sndzqej","Type":"NodeParagraph","Properties":{"id":"20230918103800-sndzqej","updated":"20230918103800"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"启动python的环境脚本命令"}]}]},{"ID":"20231023152958-zyrkvsg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231023152958-zyrkvsg","updated":"20231023155052"},"Children":[{"ID":"20231023152958-0dsfvys","Type":"NodeParagraph","Properties":{"id":"20231023152958-0dsfvys","updated":"20231023155052"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"模型启动和运行需要的最大 GPU、CPU、内存资源"}]}]}]}]}