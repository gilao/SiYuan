{"ID":"20231228105135-xj8a98z","Spec":"1","Type":"NodeDocument","Properties":{"icon":"26c4","id":"20231228105135-xj8a98z","tags":"Go-zap 库","title":" Uber的Go日志库的zap使用详解","updated":"20231228170345"},"Children":[{"ID":"20231228105200-vblxnn4","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231228105200-vblxnn4","updated":"20231228105229"},"Children":[{"Type":"NodeText","Data":"一、简介"}]},{"ID":"20231228105244-698emzc","Type":"NodeParagraph","Properties":{"id":"20231228105244-698emzc","updated":"20231228105244"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/uber-go/zap","TextMarkTextContent":"zap"},{"Type":"NodeText","Data":" 是 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/uber-go","TextMarkTextContent":"uber"},{"Type":"NodeText","Data":" 开源的一个高性能，结构化，分级记录的日志记录包。"}]},{"ID":"20231228105244-78o5rxk","Type":"NodeBlockquote","Properties":{"id":"20231228105244-78o5rxk","updated":"20231228105244"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231228105244-2vlmi81","Type":"NodeParagraph","Properties":{"id":"20231228105244-2vlmi81","updated":"20231228105244"},"Children":[{"Type":"NodeText","Data":"go1.20.2"}]},{"ID":"20231228105244-xxwwpl2","Type":"NodeParagraph","Properties":{"id":"20231228105244-xxwwpl2","updated":"20231228105244"},"Children":[{"Type":"NodeText","Data":"zap v1.24.0"}]}]},{"ID":"20231228105135-dtcxgme","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228105135-dtcxgme","updated":"20231228105253"},"Children":[{"Type":"NodeText","Data":"zap的特性"}]},{"ID":"20231228105259-o992gpx","Type":"NodeList","ListData":{},"Properties":{"id":"20231228105259-o992gpx","updated":"20231228105259"},"Children":[{"ID":"20231228105259-01ybd42","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228105259-01ybd42","updated":"20231228105259"},"Children":[{"ID":"20231228105259-uxvy9fd","Type":"NodeParagraph","Properties":{"id":"20231228105259-uxvy9fd","updated":"20231228105259"},"Children":[{"Type":"NodeText","Data":"高性能：zap 对日志输出进行了多项优化以提高它的性能"}]}]},{"ID":"20231228105259-bgs4zy4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228105259-bgs4zy4","updated":"20231228105259"},"Children":[{"ID":"20231228105259-f57f10r","Type":"NodeParagraph","Properties":{"id":"20231228105259-f57f10r","updated":"20231228105259"},"Children":[{"Type":"NodeText","Data":"日志分级：有 Debug，Info，Warn，Error，DPanic，Panic，Fatal 等"}]}]},{"ID":"20231228105259-i2imlu9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228105259-i2imlu9","updated":"20231228105259"},"Children":[{"ID":"20231228105259-m0dzi4a","Type":"NodeParagraph","Properties":{"id":"20231228105259-m0dzi4a","updated":"20231228105259"},"Children":[{"Type":"NodeText","Data":"日志记录结构化：日志内容记录是结构化的，比如 json 格式输出"}]}]},{"ID":"20231228105259-34k753y","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228105259-34k753y","updated":"20231228105259"},"Children":[{"ID":"20231228105259-5679f08","Type":"NodeParagraph","Properties":{"id":"20231228105259-5679f08","updated":"20231228105259"},"Children":[{"Type":"NodeText","Data":"自定义格式：用户可以自定义输出的日志格式"}]}]},{"ID":"20231228105259-tl7o22z","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228105259-tl7o22z","updated":"20231228105259"},"Children":[{"ID":"20231228105259-lr9p0ok","Type":"NodeParagraph","Properties":{"id":"20231228105259-lr9p0ok","updated":"20231228105259"},"Children":[{"Type":"NodeText","Data":"自定义公共字段：用户可以自定义公共字段，大家输出的日志内容就共同拥有了这些字段"}]}]},{"ID":"20231228105259-23w1de6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228105259-23w1de6","updated":"20231228105259"},"Children":[{"ID":"20231228105259-yqm4396","Type":"NodeParagraph","Properties":{"id":"20231228105259-yqm4396","updated":"20231228105259"},"Children":[{"Type":"NodeText","Data":"调试：可以打印文件名、函数名、行号、日志时间等，便于调试程序"}]}]},{"ID":"20231228105259-i3pir7n","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228105259-i3pir7n","updated":"20231228105259"},"Children":[{"ID":"20231228105259-wkgrm4y","Type":"NodeParagraph","Properties":{"id":"20231228105259-wkgrm4y","updated":"20231228105259"},"Children":[{"Type":"NodeText","Data":"自定义调用栈级别：可以根据日志级别输出它的调用栈信息"}]}]},{"ID":"20231228105259-2dpptjm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228105259-2dpptjm","updated":"20231228105259"},"Children":[{"ID":"20231228105259-aykdtnq","Type":"NodeParagraph","Properties":{"id":"20231228105259-aykdtnq","updated":"20231228105259"},"Children":[{"Type":"NodeText","Data":"Namespace：日志命名空间。定义命名空间后，所有日志内容就在这个命名空间下。命名空间相当于一个文件夹"}]}]},{"ID":"20231228105259-lo150w8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228105259-lo150w8","updated":"20231228105259"},"Children":[{"ID":"20231228105259-r9cnw13","Type":"NodeParagraph","Properties":{"id":"20231228105259-r9cnw13","updated":"20231228105259"},"Children":[{"Type":"NodeText","Data":"支持 hook 操作"}]}]}]},{"ID":"20231228105716-qyq8dzc","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228105716-qyq8dzc","updated":"20231228105728"},"Children":[{"Type":"NodeText","Data":"高性能介绍"}]},{"ID":"20231228105729-vdtacrw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231228105729-vdtacrw","updated":"20231228105738"},"Children":[{"Type":"NodeText","Data":"与其他日志库对比"}]},{"ID":"20231228105757-mvsjd4c","Type":"NodeParagraph","Properties":{"id":"20231228105757-mvsjd4c","updated":"20231228105757"},"Children":[{"Type":"NodeText","Data":"看"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/uber-go/zap#performance","TextMarkTextContent":"github官网"},{"Type":"NodeText","Data":"的对比图，下面的对比图来自："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/uber-go/zap#performance","TextMarkTextContent":"https://github.com/uber-go/zap#performance"}]},{"ID":"20231228105757-8dcc1ue","Type":"NodeParagraph","Properties":{"id":"20231228105757-8dcc1ue","updated":"20231228105757"},"Children":[{"Type":"NodeText","Data":"Log a message and 10 fields:"}]},{"ID":"20231228105757-n76vbqv","Type":"NodeTable","TableAligns":[0,0,0,0],"Properties":{"colgroup":"|||","id":"20231228105757-n76vbqv","updated":"20231228105757"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Package"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Time"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Time % to zap"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Objects Allocated"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"⚡ zap"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"2900 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+0%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"5 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"⚡ zap (sugared)"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"3475 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+20%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"10 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"zerolog"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"10639 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+267%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"32 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"go-kit"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"14434 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+398%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"59 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"logrus"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"17104 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+490%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"81 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"apex/log"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"32424 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+1018%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"66 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"log15"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"33579 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+1058%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"76 allocs/op"}]}]}]},{"ID":"20231228105757-4g6y9o8","Type":"NodeParagraph","Properties":{"id":"20231228105757-4g6y9o8","updated":"20231228105757"},"Children":[{"Type":"NodeText","Data":"Log a message with a logger that already has 10 fields of context:"}]},{"ID":"20231228105757-ju7n7un","Type":"NodeTable","TableAligns":[0,0,0,0],"Properties":{"colgroup":"|||","id":"20231228105757-ju7n7un","updated":"20231228105757"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Package"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Time"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Time % to zap"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Objects Allocated"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"⚡ zap"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"373 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+0%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"⚡ zap (sugared)"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"452 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+21%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"1 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"zerolog"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"288 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"-23%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"go-kit"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"11785 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+3060%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"58 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"logrus"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"19629 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+5162%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"70 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"log15"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"21866 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+5762%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"72 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"apex/log"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"30890 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+8182%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"55 allocs/op"}]}]}]},{"ID":"20231228105757-4a1oirz","Type":"NodeParagraph","Properties":{"id":"20231228105757-4a1oirz","updated":"20231228105757"},"Children":[{"Type":"NodeText","Data":"Log a static string, without any context or "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"printf"},{"Type":"NodeText","Data":"​-style templating:"}]},{"ID":"20231228105757-czfo2f0","Type":"NodeTable","TableAligns":[0,0,0,0],"Properties":{"colgroup":"|||","id":"20231228105757-czfo2f0","updated":"20231228105757"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Package"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Time"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Time % to zap"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Objects Allocated"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"⚡ zap"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"381 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+0%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"⚡ zap (sugared)"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"410 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+8%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"1 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"zerolog"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"369 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"-3%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"standard library"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"385 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+1%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"2 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"go-kit"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"606 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+59%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"11 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"logrus"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"1730 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+354%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"25 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"apex/log"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"1998 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+424%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"7 allocs/op"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"log15"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"4546 ns/op"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"+1093%"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"22 allocs/op"}]}]}]},{"ID":"20231228105757-fzt6p5a","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231228105757-fzt6p5a","updated":"20231228105757"},"Children":[{"Type":"NodeText","Data":"做了哪些优化"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.cnblogs.com/jiujuan/p/17304844.html#1455202410","TextMarkTextContent":"#"}]},{"ID":"20231228105757-r1fypci","Type":"NodeParagraph","Properties":{"id":"20231228105757-r1fypci","updated":"20231228105757"},"Children":[{"Type":"NodeText","Data":"基于反射的序列化和字符串格式化，它们都是 CPU 密集型计算且分配很多小的内存。具体到 Go 语言中，使用 encoding/json 和 fmt.Fprintf 格式化 interface{} 会使程序性能降低。"}]},{"ID":"20231228105757-b2gc78d","Type":"NodeParagraph","Properties":{"id":"20231228105757-b2gc78d","updated":"20231228105832"},"Children":[{"Type":"NodeText","Data":"Zap 咋解决呢？"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"strong text","TextMarkTextContent":"Zap 使用一个无反射、零分配的 JOSN 编码器，基础 Logger 尽可能避免序列化开销和内存分配开销。在此基础上，zap 还构建了更高级的 SuggaredLogger。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"}]},{"ID":"20231228105834-2ptnp81","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231228105834-2ptnp81","updated":"20231228105903"},"Children":[{"Type":"NodeText","Data":"二、quickstart 快速开始"}]},{"ID":"20231228105903-27u3kw5","Type":"NodeParagraph","Properties":{"id":"20231228105903-27u3kw5","updated":"20231228105907"},"Children":[{"Type":"NodeText","Data":"zap 安装"}]},{"ID":"20231228105910-xaep1nd","Type":"NodeBlockquote","Properties":{"id":"20231228105910-xaep1nd","updated":"20231228105927"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231228105910-gnl9dgo","Type":"NodeParagraph","Properties":{"id":"20231228105910-gnl9dgo","updated":"20231228105927"},"Children":[{"Type":"NodeText","Data":"go get -u go.uber.org/zap"}]}]},{"ID":"20231228105943-n4we206","Type":"NodeParagraph","Properties":{"id":"20231228105943-n4we206","updated":"20231228105943"},"Children":[{"Type":"NodeText","Data":"zap 提供了 2 种日志记录器："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SugaredLogger"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Logger"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231228105943-lns6w6q","Type":"NodeParagraph","Properties":{"id":"20231228105943-lns6w6q","updated":"20231228105957"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"strong text","TextMarkTextContent":"在需要性能但不是很重要的情况下，使用 SugaredLogger 较合适。它比其它结构化日志包快 4-10 倍，包括 结构化日志和 printf 风格的 API。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"},{"Type":"NodeText","Data":"看下面使用 SugaredLogger 例子："}]},{"ID":"20231228105958-h2r0qty","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228105958-h2r0qty","updated":"20231228110022"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func log0() {\n\tlogger, _ := zap.NewProduction()\n\tdefer logger.Sync()\n\n\tsugar := logger.Sugar()\n\tsugar.Infow(\"failed to fetch URL\",\n\t\t\"Url\", Url,\n\t\t\"attempt\", 3,\n\t\t\"backoff\", zap.Duration(\"1\", time.Second*5),\n\t\t\"Test\", Test,\n\t)\n\tsugar.Info(\"failed to fetch URL\", Url)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228110023-th3tb8a","Type":"NodeParagraph","Properties":{"id":"20231228110023-th3tb8a","updated":"20231228110029"},"Children":[{"Type":"NodeText","Data":"当性能和类型安全很重要时，请使用 Logger。它比 SugaredLogger 更快，分配的资源更少，但它只支持结构化日志和强类型字段。"}]},{"ID":"20231228110031-a67inho","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228110031-a67inho","updated":"20231228110050"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func log1() {\n\tlogger, _ := zap.NewProduction()\n\tdefer logger.Sync()\n\tlogger.Info(\"Failed to fetch URL\",\n\t\t// 字段强类型\n\t\tzap.String(\"url\", Url),\n\t\tzap.Int(\"attempt\", 3),\n\t\tzap.Duration(\"backoff\", time.Second*5),\n\t)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228110052-tpbwa9w","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231228110052-tpbwa9w","updated":"20231228110227"},"Children":[{"Type":"NodeText","Data":"三、 NewExample/NewDevelopment/NewProduction 使用"}]},{"ID":"20231228110153-vt0wzdl","Type":"NodeParagraph","Properties":{"id":"20231228110153-vt0wzdl","updated":"20231228110241"},"Children":[{"Type":"NodeText","Data":"zap 为我们提供了三种快速创建 logger 的方法: "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"zap.NewProduction()"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"zap.NewDevelopment()"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"zap.NewExample()"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231228110242-dhwzjbz","Type":"NodeParagraph","Properties":{"id":"20231228110242-dhwzjbz","updated":"20231228110302"},"Children":[{"Type":"NodeText","Data":"见名思义，"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"strong text","TextMarkTextContent":"Example 一般用在测试代码中，Development 用在开发环境中，Production 用在生成环境中。这三种方法都预先设置好了配置信息。"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"}]},{"ID":"20231228110309-bwwi3zq","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228110309-bwwi3zq","updated":"20231228110319"},"Children":[{"Type":"NodeText","Data":"NewExample() 使用"}]},{"ID":"20231228110413-1cvqdzr","Type":"NodeParagraph","Properties":{"id":"20231228110413-1cvqdzr","updated":"20231228110413"},"Children":[{"Type":"NodeText","Data":"NewExample 构建一个 logger，专门为在 zap 的测试示例使用。它将 DebugLevel 及以上日志用 JSON 格式标准输出，但它省略了时间戳和调用函数，以保持示例输出的简短和确定性。"}]},{"ID":"20231228110413-hb9lse6","Type":"NodeParagraph","Properties":{"id":"20231228110413-hb9lse6","updated":"20231228110413"},"Children":[{"Type":"NodeText","Data":"为什么说 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"zap.NewExample()"},{"Type":"NodeText","Data":"​ 是 zap 为我们提供快速创建 logger 的方法呢？"}]},{"ID":"20231228110413-bwfanru","Type":"NodeParagraph","Properties":{"id":"20231228110413-bwfanru","updated":"20231228110413"},"Children":[{"Type":"NodeText","Data":"因为在这个方法里，zap 已经定义好了日志配置项部分默认值。来看它的代码："}]},{"ID":"20231228111115-y83nxor","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228111115-y83nxor","updated":"20231228111130"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// https://github.com/uber-go/zap/blob/v1.24.0/logger.go#L127\nfunc NewExample(options ...Option) *Logger {\n\tencoderCfg := zapcore.EncoderConfig{\n        MessageKey:     \"msg\",  // 日志内容key:val， 前面的key设为msg\n\t\tLevelKey:       \"level\", // 日志级别的key设为level\n\t\tNameKey:        \"logger\", // 日志名\n\t\tEncodeLevel:    zapcore.LowercaseLevelEncoder, //日志级别，默认小写\n\t\tEncodeTime:     zapcore.ISO8601TimeEncoder, // 日志时间\n\t\tEncodeDuration: zapcore.StringDurationEncoder,\n\t}\n\tcore := zapcore.NewCore(zapcore.NewJSONEncoder(encoderCfg), os.Stdout, DebugLevel)\n\treturn New(core).WithOptions(options...)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228111310-qaehmw5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231228111310-qaehmw5","updated":"20231228111450"},"Children":[{"Type":"NodeText","Data":"使用例子"}]},{"ID":"20231228111450-szi8r96","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228111450-szi8r96","updated":"20231228111457"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n\t\"go.uber.org/zap\"\n)\n\nfunc main() {\n\tlogger := zap.NewExample()\n\tlogger.Debug(\"this is debug message\")\n\tlogger.Info(\"this is info message\")\n\tlogger.Info(\"this is info message with fileds\",\n\t\tzap.Int(\"age\", 37), \n        zap.String(\"agender\", \"man\"),\n    )\n\tlogger.Warn(\"this is warn message\")\n\tlogger.Error(\"this is error message\")\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228111800-0ndfyen","Type":"NodeParagraph","Properties":{"id":"20231228111800-0ndfyen","updated":"20231228111801"},"Children":[{"Type":"NodeText","Data":"输出"}]},{"ID":"20231228111801-0k5k2lq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228111801-0k5k2lq","updated":"20231228111802"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"{\"level\":\"debug\",\"msg\":\"this is debug message\"}\n{\"level\":\"info\",\"msg\":\"this is info message\"}\n{\"level\":\"info\",\"msg\":\"this is info message with fileds\",\"age\":37,\"agender\":\"man\"}\n{\"level\":\"warn\",\"msg\":\"this is warn message\"}\n{\"level\":\"error\",\"msg\":\"this is error message\"}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228111804-mx103yk","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228111804-mx103yk","updated":"20231228111830"},"Children":[{"Type":"NodeText","Data":"NewDevelopment() 使用"}]},{"ID":"20231228111844-g65vqky","Type":"NodeParagraph","Properties":{"id":"20231228111844-g65vqky","updated":"20231228111844"},"Children":[{"Type":"NodeText","Data":"NewDevelopment() 构建一个开发使用的 Logger，它以人性化的格式将 DebugLevel 及以上日志信息输出。它的底层使用"}]},{"ID":"20231228111844-s20j2z7","Type":"NodeParagraph","Properties":{"id":"20231228111844-s20j2z7","updated":"20231228111844"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NewDevelopmentConfig().Build(...Option)"},{"Type":"NodeText","Data":"​ 构建。它的日志格式各种设置在函数 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/uber-go/zap/blob/v1.24.0/config.go#L137","TextMarkTextContent":"NewDevelopmentEncoderConfig()"},{"Type":"NodeText","Data":" 里，想查看详情设置，请点进去查看。"}]},{"ID":"20231228111913-lahdlag","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231228111913-lahdlag","updated":"20231228111917"},"Children":[{"Type":"NodeText","Data":"使用例子:"}]},{"ID":"20231228111846-3jbksox","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228111846-3jbksox","updated":"20231228113127"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func log3() {\n\tlogger, _ := zap.NewDevelopment()\n\tdefer logger.Sync()\n\n\tlogger.Info(\"failed to fetch url\",\n\t\t// 字段强类型\n\t\tzap.String(\"url\", Url),\n\t\tzap.Int(\"attempt\", 3),\n\t\tzap.Duration(\"backoff\", time.Second*5),\n\t)\n\tlogger.With(\n\t\t// 字段强类型\n\t\tzap.String(\"url\", Url),\n\t\tzap.Int(\"attempt\", 4),\n\t\tzap.Duration(\"backoff\", time.Second*6),\n\t).Info(\"[With] failed to fetch url\")\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228111928-f6pq1af","Type":"NodeParagraph","Properties":{"id":"20231228111928-f6pq1af","updated":"20231228113105"},"Children":[{"Type":"NodeText","Data":"输出"}]},{"ID":"20231228113105-crsf82y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228113105-crsf82y","updated":"20231228113132"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"2023-12-28T11:30:29.305+0800    INFO    zap-log/zap-log-1.go:56 failed to fetch url     {\"url\": \"127.0.0.1:8080\", \"attempt\": 3, \"backoff\": \"5s\"}\n2023-12-28T11:30:29.326+0800    INFO    zap-log/zap-log-1.go:67 [With] failed to fetch url      {\"url\": \"127.0.0.1:8080\", \"attempt\": 4, \"backoff\": \"6s\"}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228113133-ep8mkii","Type":"NodeBlockquote","Properties":{"id":"20231228113133-ep8mkii","updated":"20231228113204"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231228113143-b98fg70","Type":"NodeParagraph","Properties":{"id":"20231228113143-b98fg70","updated":"20231228113204"},"Children":[{"Type":"NodeText","Data":"上面日志输出了文件名和行号, NewExample() 没有"}]}]},{"ID":"20231228113338-xbi0c09","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228113338-xbi0c09","updated":"20231228113359"},"Children":[{"Type":"NodeText","Data":"NewProduction() 使用"}]},{"ID":"20231228113359-p8p5mo2","Type":"NodeParagraph","Properties":{"id":"20231228113359-p8p5mo2","updated":"20231228114148"},"Children":[{"Type":"NodeText","Data":"NewProduction() 构建了一个合理的 Production 日志记录器,它将 info 及以上的日志内容以Json 格式写入标准错误里。它的底层使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NewProductionConfig.Build(...Option)"},{"Type":"NodeText","Data":"​构建。 它的日志格式设置在函数"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/uber-go/zap/blob/v1.24.0/master/config.go#L124","TextMarkTextContent":"NewProductionEncoderConfig"},{"Type":"NodeText","Data":" 里。"}]},{"ID":"20231228114149-7o43pkf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231228114149-7o43pkf","updated":"20231228114153"},"Children":[{"Type":"NodeText","Data":"使用例子"}]},{"ID":"20231228114155-09awfom","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228114155-09awfom","updated":"20231228114200"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\nfunc main() {\n\tlogger, _ := zap.NewProduction()\n\tdefer logger.Sync()\n\n\turl := \"http://zap.uber.io\"\n\tsugar := logger.Sugar()\n\tsugar.Infow(\"failed to fetch URL\",\n\t\t\"url\", url,\n\t\t\"attempt\", 3,\n\t\t\"time\", time.Second,\n\t)\n\n\tsugar.Infof(\"Failed to fetch URL: %s\", url)\n\n\t// 或更简洁 Sugar() 使用\n\t// sugar := zap.NewProduction().Sugar()\n\t// defer sugar.Sync()\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228114132-ac46ecc","Type":"NodeParagraph","Properties":{"id":"20231228114132-ac46ecc","updated":"20231228140419"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20231228140419-du9j73a","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228140419-du9j73a","updated":"20231228140953"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"{\"level\":\"info\",\"ts\":1703743786.0000587,\"caller\":\"zap-log/zap-log-1.go:75\",\"msg\":\"failed to fetch URL\",\"url\":\"127.0.0.1:8080\",\"attempt\":5,\"time\":1}\n{\"level\":\"info\",\"ts\":1703743786.0000587,\"caller\":\"zap-log/zap-log-1.go:80\",\"msg\":\"Failed to fetch URL: 127.0.0.1:8080\"}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228141028-uhuf82o","Type":"NodeBlockquote","Properties":{"id":"20231228141028-uhuf82o","updated":"20231228141054"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231228141031-f14p8m2","Type":"NodeParagraph","Properties":{"id":"20231228141031-f14p8m2","updated":"20231228141054"},"Children":[{"Type":"NodeText","Data":"上面日志输出了文件名和行号，NewExample() 没有"}]}]},{"ID":"20231228141057-zgskb8c","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231228141057-zgskb8c","updated":"20231228141124"},"Children":[{"Type":"NodeText","Data":"四、使用配置"}]},{"ID":"20231228141124-yx4ke8d","Type":"NodeParagraph","Properties":{"id":"20231228141124-yx4ke8d","updated":"20231228141233"},"Children":[{"Type":"NodeText","Data":"在这 3 个函数中，可以传入一些配置项。为什么能传入配置项？我们来看看 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/uber-go/zap/blob/v1.24.0/logger.go#L127","TextMarkTextContent":"NewExample()"},{"Type":"NodeText","Data":" 函数定义："}]},{"ID":"20231228141234-gb261g3","Type":"NodeParagraph","Properties":{"id":"20231228141234-gb261g3","updated":"20231228141300"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"func NewExample(options ...Option) *Logger"},{"Type":"NodeText","Data":"​"}]},{"ID":"20231228141302-yupnxlj","Type":"NodeParagraph","Properties":{"id":"20231228141302-yupnxlj","updated":"20231228141639"},"Children":[{"Type":"NodeText","Data":"它的函数传参有一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"...Option"},{"Type":"NodeText","Data":"​ 选项，是一个 interface 类型，它关联的是 Logger struct。只要返回 Option 就可以传进 NewExample() 里。在 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/uber-go/zap/blob/v1.24.0/options.go","TextMarkTextContent":"zap/options.go"},{"Type":"NodeText","Data":" 文件中可以看到很多返回 Option 的函数，也就是说这些函数都可以传入 NewExample 函数里。这里用到了 Go 里面的一个编码技巧，函数选项模式。"}]},{"ID":"20231228144611-cbj9iru","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228144611-cbj9iru","updated":"20231228144620"},"Children":[{"Type":"NodeText","Data":"zap.Fields()"}]},{"ID":"20231228142327-dz5h95j","Type":"NodeParagraph","Properties":{"id":"20231228142327-dz5h95j","updated":"20231228142327"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/uber-go/zap/blob/v1.24.0/options.go#L62","TextMarkTextContent":"zap.Fields()"},{"Type":"NodeText","Data":" 添加字段到 Logger 中："}]},{"ID":"20231228142420-hpdpuew","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228142420-hpdpuew","updated":"20231228142430"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n\t\"go.uber.org/zap\"\n)\n\nfunc main() {\n\tlogger, _ := zap.NewProduction(zap.Fields(\n\t\tzap.String(\"log_name\", \"testlog\"),\n\t\tzap.String(\"log_author\", \"prometheus\"),\n\t))\n\tdefer logger.Sync()\n\n\tlogger.Info(\"test fields output\")\n\n\tlogger.Warn(\"warn info\")\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228144508-z10he0v","Type":"NodeParagraph","Properties":{"id":"20231228144508-z10he0v","updated":"20231228144511"},"Children":[{"Type":"NodeText","Data":"输出"}]},{"ID":"20231228144511-a74obqg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228144511-a74obqg","updated":"20231228144516"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"{\"level\":\"info\",\"ts\":1703745901.3317404,\"caller\":\"zap-log/zap-log-1.go:90\",\"msg\":\"test fields output\",\"log_name\":\"testlog\",\"log_author\":\"prometheus\"}\n{\"level\":\"warn\",\"ts\":1703745901.3317404,\"caller\":\"zap-log/zap-log-1.go:91\",\"msg\":\"warn info\",\"log_name\":\"testlog\",\"log_author\":\"prometheus\"}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228144536-mnzzyrx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228144536-mnzzyrx","updated":"20231228144538"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"{\n    \"level\": \"info\",\n    \"ts\": 1703745901.3317404,\n    \"caller\": \"zap-log/zap-log-1.go:90\",\n    \"msg\": \"test fields output\",\n    \"log_name\": \"testlog\",\n    \"log_author\": \"prometheus\"\n}\n{\n    \"level\": \"warn\",\n    \"ts\": 1703745901.3317404,\n    \"caller\": \"zap-log/zap-log-1.go:91\",\n    \"msg\": \"warn info\",\n    \"log_name\": \"testlog\",\n    \"log_author\": \"prometheus\"\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228144631-ypn0tz2","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228144631-ypn0tz2","updated":"20231228144641"},"Children":[{"Type":"NodeText","Data":"zap.Hook()"}]},{"ID":"20231228144559-9ie6k2z","Type":"NodeParagraph","Properties":{"id":"20231228144559-9ie6k2z","updated":"20231228144559"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/uber-go/zap/blob/v1.24.0/options.go#L55","TextMarkTextContent":"zap.Hook()"},{"Type":"NodeText","Data":" 添加回调函数："}]},{"ID":"20231228144559-k4ua3kt","Type":"NodeParagraph","Properties":{"id":"20231228144559-k4ua3kt","updated":"20231228144559"},"Children":[{"Type":"NodeText","Data":"Hook (钩子函数)回调函数为用户提供一种简单方法，在每次日志内容记录后运行这个回调函数，执行用户需要的操作。也就是说记录完日志后你还想做其它事情就可以调用这个函数。"}]},{"ID":"20231228144651-dnib2id","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228144651-dnib2id","updated":"20231228144702"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n\t\"fmt\"\n\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zapcore\"\n)\n\nfunc main() {\n\tlogger := zap.NewExample(zap.Hooks(func(entry zapcore.Entry) error {\n\t\tfmt.Println(\"[zap.Hooks]test Hooks\")\n\t\treturn nil\n\t}))\n\tdefer logger.Sync()\n\n\tlogger.Info(\"test output\")\n\n\tlogger.Warn(\"warn info\")\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228144704-ac8sytg","Type":"NodeParagraph","Properties":{"id":"20231228144704-ac8sytg","updated":"20231228144710"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20231228144710-yjh89yn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228144710-yjh89yn","updated":"20231228144718"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"{\"level\":\"info\",\"msg\":\"test output\"}\n[zap.Hooks]test Hooks\n{\"level\":\"warn\",\"msg\":\"warn info\"}\n[zap.Hooks]test Hooks\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228145726-23aoxym","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231228145726-23aoxym","updated":"20231228150946"},"Children":[{"Type":"NodeText","Data":"五、logger 和 sugaredlogger 区别"}]},{"ID":"20231228145743-asbjunh","Type":"NodeParagraph","Properties":{"id":"20231228145743-asbjunh","updated":"20231228145820"},"Children":[{"Type":"NodeText","Data":"从上面的例子中看出，zap 有 2中格式化日志方式：logger 和 sugared logger。"}]},{"ID":"20231228145820-9wlhhx6","Type":"NodeList","ListData":{},"Properties":{"id":"20231228145820-9wlhhx6","updated":"20231228145822"},"Children":[{"ID":"20231228145822-90sn5yx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228145822-90sn5yx","updated":"20231228145822"},"Children":[{"ID":"20231228145822-u65uv5k","Type":"NodeParagraph","Properties":{"id":"20231228145822-u65uv5k","updated":"20231228145826"},"Children":[{"Type":"NodeText","Data":"sugared logger："}]},{"ID":"20231228145836-hhw7n9e","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231228145836-hhw7n9e","updated":"20231228145843"},"Children":[{"ID":"20231228145843-mhcjxm8","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231228145843-mhcjxm8","updated":"20231228145843"},"Children":[{"ID":"20231228145843-0kvgqw4","Type":"NodeParagraph","Properties":{"id":"20231228145843-0kvgqw4","updated":"20231228145906"},"Children":[{"Type":"NodeText","Data":"它有很好的性能，比一般日志包快4-10倍。"}]}]},{"ID":"20231228145907-h1ew1l8","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231228145907-h1ew1l8"},"Children":[{"ID":"20231228145907-qma7mlz","Type":"NodeParagraph","Properties":{"id":"20231228145907-qma7mlz","updated":"20231228145922"},"Children":[{"Type":"NodeText","Data":"支持结构化的日志。"}]}]},{"ID":"20231228145922-220e1cw","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20231228145922-220e1cw"},"Children":[{"ID":"20231228145922-o5tkkqg","Type":"NodeParagraph","Properties":{"id":"20231228145922-o5tkkqg","updated":"20231228145934"},"Children":[{"Type":"NodeText","Data":"支持 printf 风格的日志"}]}]},{"ID":"20231228145935-bs6pnbl","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20231228145935-bs6pnbl"},"Children":[{"ID":"20231228145935-c58q3v3","Type":"NodeParagraph","Properties":{"id":"20231228145935-c58q3v3","updated":"20231228145948"},"Children":[{"Type":"NodeText","Data":"日志字段不需要定义类型"}]}]}]}]},{"ID":"20231228145950-b5mawgk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228145950-b5mawgk"},"Children":[{"ID":"20231228145950-mmogpr4","Type":"NodeParagraph","Properties":{"id":"20231228145950-mmogpr4","updated":"20231228145956"},"Children":[{"Type":"NodeText","Data":"logger 没有sugar"}]},{"ID":"20231228145957-3i564kt","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231228145957-3i564kt","updated":"20231228150000"},"Children":[{"ID":"20231228150000-16bb87m","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231228150000-16bb87m","updated":"20231228150000"},"Children":[{"ID":"20231228150000-n35yjnf","Type":"NodeParagraph","Properties":{"id":"20231228150000-n35yjnf","updated":"20231228150015"},"Children":[{"Type":"NodeText","Data":"它的性能比 sugared logger 还要快。"}]}]},{"ID":"20231228150016-qd1ma53","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231228150016-qd1ma53"},"Children":[{"ID":"20231228150016-kneo1vr","Type":"NodeParagraph","Properties":{"id":"20231228150016-kneo1vr","updated":"20231228150042"},"Children":[{"Type":"NodeText","Data":"它只支持强类型的结构化日志"}]}]}]},{"ID":"20231228150101-mtos20d","Type":"NodeParagraph","Properties":{"id":"20231228150101-mtos20d","updated":"20231228150721"},"Children":[{"Type":"NodeText","Data":"它应用在对性能更加敏感日志记录中，它的内存分配次数更少。"}]},{"ID":"20231228150721-v4n65pc","Type":"NodeParagraph","Properties":{"id":"20231228150721-v4n65pc","updated":"20231228150757"},"Children":[{"Type":"NodeText","Data":"比如如果每一次内存分配都很重要的话可以使用这个。对类型安全又严格要求也可以使用这个。"}]}]}]},{"ID":"20231228150757-btv6ynu","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228150757-btv6ynu","updated":"20231228150812"},"Children":[{"Type":"NodeText","Data":"logger 和 sugaredlogger 相互转化："}]},{"ID":"20231228150812-baif2p1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228150812-baif2p1","updated":"20231228150929"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// 创建 logger\nlogger := zap.NewExample()\ndefer logger.Sync()\n\n// 转化 SugaredLogger\nsugar := logger.Sugar()\n\n// 转换 logger\nplain := sugar.Desugar()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228151018-1kpbp4v","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228151018-1kpbp4v","updated":"20231228151028"},"Children":[{"Type":"NodeText","Data":"快速构建logger"}]},{"ID":"20231228151029-b1e1j86","Type":"NodeParagraph","Properties":{"id":"20231228151029-b1e1j86","updated":"20231228151050"},"Children":[{"Type":"NodeText","Data":"怎么快速构建一个logger呢？有下面几种方法："}]},{"ID":"20231228151050-shq6oz2","Type":"NodeList","ListData":{},"Properties":{"id":"20231228151050-shq6oz2","updated":"20231228151052"},"Children":[{"ID":"20231228151052-q9p7bu6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228151052-q9p7bu6","updated":"20231228151052"},"Children":[{"ID":"20231228151052-27t2qts","Type":"NodeParagraph","Properties":{"id":"20231228151052-27t2qts","updated":"20231228151100"},"Children":[{"Type":"NodeText","Data":"zap.NewProduction()"}]}]},{"ID":"20231228151101-j7cyq34","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228151101-j7cyq34"},"Children":[{"ID":"20231228151101-k5od1cl","Type":"NodeParagraph","Properties":{"id":"20231228151101-k5od1cl","updated":"20231228151108"},"Children":[{"Type":"NodeText","Data":"zap.NewDevelopment()"}]}]},{"ID":"20231228151108-h8dpvc9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228151108-h8dpvc9"},"Children":[{"ID":"20231228151108-u0dtk9v","Type":"NodeParagraph","Properties":{"id":"20231228151108-u0dtk9v","updated":"20231228151114"},"Children":[{"Type":"NodeText","Data":"zap.Example()"}]}]}]},{"ID":"20231228151114-nysu0cb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231228151114-nysu0cb","updated":"20231228151134"},"Children":[{"Type":"NodeText","Data":"主要区别"}]},{"ID":"20231228151134-6zmmkmx","Type":"NodeList","ListData":{},"Properties":{"id":"20231228151134-6zmmkmx","updated":"20231228151136"},"Children":[{"ID":"20231228151136-h369xx6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228151136-h369xx6","updated":"20231228151136"},"Children":[{"ID":"20231228151136-7bt7d33","Type":"NodeParagraph","Properties":{"id":"20231228151136-7bt7d33","updated":"20231228151146"},"Children":[{"Type":"NodeText","Data":"记录日志信息和结构不同。"}]}]}]},{"ID":"20231228151146-1k6rqln","Type":"NodeParagraph","Properties":{"id":"20231228151146-1k6rqln","updated":"20231228151252"},"Children":[{"Type":"NodeText","Data":"Example 和 Production 是 json 格式输出， Development 是普通一行格式输出，如果后面带有字段输出话用 json 格式。"}]},{"ID":"20231228151252-7btej5w","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231228151252-7btej5w","updated":"20231228151301"},"Children":[{"Type":"NodeText","Data":"相同点"}]},{"ID":"20231228151301-2y6fff7","Type":"NodeList","ListData":{},"Properties":{"id":"20231228151301-2y6fff7","updated":"20231228151302"},"Children":[{"ID":"20231228151302-g0vcnqn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228151302-g0vcnqn","updated":"20231228151302"},"Children":[{"ID":"20231228151302-bm7unwh","Type":"NodeParagraph","Properties":{"id":"20231228151302-bm7unwh","updated":"20231228151318"},"Children":[{"Type":"NodeText","Data":"默认情况下都会 打印信息到 console 界面"}]}]},{"ID":"20231228151318-jmf3jhg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228151318-jmf3jhg"},"Children":[{"ID":"20231228151318-l5f36bc","Type":"NodeParagraph","Properties":{"id":"20231228151318-l5f36bc","updated":"20231228151337"},"Children":[{"Type":"NodeText","Data":"都是通过 logger 调用 info、error 等方法"}]}]}]},{"ID":"20231228151338-g937r0z","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231228151338-g937r0z","updated":"20231228151344"},"Children":[{"Type":"NodeText","Data":"怎么选择"}]},{"ID":"20231228151426-c1lyiwd","Type":"NodeList","ListData":{},"Properties":{"id":"20231228151426-c1lyiwd","updated":"20231228151426"},"Children":[{"ID":"20231228151426-lo9dzem","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228151426-lo9dzem","updated":"20231228151426"},"Children":[{"ID":"20231228151426-t94dee7","Type":"NodeParagraph","Properties":{"id":"20231228151426-t94dee7","updated":"20231228151442"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"需要不错的性能但不是很重要的情况下，可以选择 sugaredlogger。它支持结构化日志和 printf 风格的日志记录。sugaredlogger 的日志记录是松散类型的，不是强类型，能接受可变数量的键值对。如果你要用强类型字段记录，可以使用 SugaredLogger.With 方法。"}]}]},{"ID":"20231228151426-2gr67na","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231228151426-2gr67na","updated":"20231228151426"},"Children":[{"ID":"20231228151426-c9tkz6j","Type":"NodeParagraph","Properties":{"id":"20231228151426-c9tkz6j","updated":"20231228151448"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如果是每次或每微秒记录日志都很重要情况下，可以使用 logger，它比 sugaredlogger 每次分配内存更少，性能更高。但它仅支持强类型的结构化日志记录。"}]}]}]},{"ID":"20231228151542-kwmh400","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231228151542-kwmh400","updated":"20231228151626"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color1);"},"TextMarkType":"text","TextMarkTextContent":"六、自定义配置"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color1);\"}"}]},{"ID":"20231228151557-uyrvivn","Type":"NodeParagraph","Properties":{"id":"20231228151557-uyrvivn","updated":"20231228151557"},"Children":[{"Type":"NodeText","Data":"快速构建 logger 日志记录器最简单的方法就是用 zap 预定义了配置的方法："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NewExample(), NewProduction()"},{"Type":"NodeText","Data":"​ 和"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NewDevelopment()"},{"Type":"NodeText","Data":"​，这 3 个方法通过单个函数调用就可以构建一个日志计记录器，也可以简单配置。"}]},{"ID":"20231228151557-5yxauso","Type":"NodeParagraph","Properties":{"id":"20231228151557-5yxauso","updated":"20231228151557"},"Children":[{"Type":"NodeText","Data":"但是有的项目需要更多的定制，怎么办？zap 的 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pkg.go.dev/go.uber.org/zap#Config","TextMarkTextContent":"Config"},{"Type":"NodeText","Data":" 结构和 zapcore 的 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pkg.go.dev/go.uber.org/zap/zapcore@v1.24.0#EncoderConfig","TextMarkTextContent":"EncoderConfig"},{"Type":"NodeText","Data":" 结构可以帮助你，让你能够进行自定义配置。"}]},{"ID":"20231228151128-ffswqai","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228151128-ffswqai","updated":"20231228151724"},"Children":[{"Type":"NodeText","Data":"配置结构说明"}]},{"ID":"20231228151724-0dxifhv","Type":"NodeParagraph","Properties":{"id":"20231228151724-0dxifhv","updated":"20231228151734"},"Children":[{"Type":"NodeText","Data":"Config 配置项源码："}]},{"ID":"20231228151735-xsgu04s","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228151735-xsgu04s","updated":"20231228151741"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// zap v1.24.0\ntype Config struct {\n    // 动态改变日志级别，在运行时你可以安全改变日志级别\n\tLevel AtomicLevel `json:\"level\" yaml:\"level\"`\n    // 将日志记录器设置为开发模式，在 WarnLevel 及以上级别日志会包含堆栈跟踪信息\n\tDevelopment bool `json:\"development\" yaml:\"development\"`\n    // 在日志中停止调用函数所在文件名、行数\n\tDisableCaller bool `json:\"disableCaller\" yaml:\"disableCaller\"`\n    // 完全禁止自动堆栈跟踪。默认情况下，在 development 中，warnlevel及以上日志级别会自动捕获堆栈跟踪信息\n    // 在 production 中，ErrorLevel 及以上也会自动捕获堆栈信息\n\tDisableStacktrace bool `json:\"disableStacktrace\" yaml:\"disableStacktrace\"`\n    // 设置采样策略。没有 SamplingConfing 将禁止采样\n\tSampling *SamplingConfig `json:\"sampling\" yaml:\"sampling\"`\n    // 设置日志编码。可以设置为 console 和 json。也可以通过 RegisterEncoder 设置第三方编码格式\n\tEncoding string `json:\"encoding\" yaml:\"encoding\"`\n    // 为encoder编码器设置选项。详细设置信息在 zapcore.zapcore.EncoderConfig\n\tEncoderConfig zapcore.EncoderConfig `json:\"encoderConfig\" yaml:\"encoderConfig\"`\n    // 日志输出地址可以是一个 URLs 地址或文件路径，可以设置多个\n\tOutputPaths []string `json:\"outputPaths\" yaml:\"outputPaths\"`\n    // 错误日志输出地址。默认输出标准错误信息\n\tErrorOutputPaths []string `json:\"errorOutputPaths\" yaml:\"errorOutputPaths\"`\n    // 可以添加自定义的字段信息到 root logger 中。也就是每条日志都会携带这些字段信息，公共字段\n\tInitialFields map[string]interface{} `json:\"initialFields\" yaml:\"initialFields\"`\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228163047-hskcy3g","Type":"NodeParagraph","Properties":{"id":"20231228163047-hskcy3g","updated":"20231228163129"},"Children":[{"Type":"NodeText","Data":"EncoderConfig 结果源码，它里面也有很多配置选项，具体请看 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pkg.go.dev/go.uber.org/zap/zapcore@v1.24.0#EncoderConfig","TextMarkTextContent":"这里"},{"Type":"NodeText","Data":":"}]},{"ID":"20231228163131-26ongub","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228163131-26ongub","updated":"20231228163135"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"// zapcore@v1.24.0\ntype EncoderConfig struct {\n    // 为log entry设置key。如果 key 为空，那么在日志中的这部分信息也会省略\n\tMessageKey     string `json:\"messageKey\" yaml:\"messageKey\"`//日志信息的健名，默认为msg\n\tLevelKey       string `json:\"levelKey\" yaml:\"levelKey\"`//日志级别的健名，默认为level\n\tTimeKey        string `json:\"timeKey\" yaml:\"timeKey\"`//记录日志时间的健名，默认为time\n\tNameKey        string `json:\"nameKey\" yaml:\"nameKey\"`\n\tCallerKey      string `json:\"callerKey\" yaml:\"callerKey\"`\n\tFunctionKey    string `json:\"functionKey\" yaml:\"functionKey\"`\n\tStacktraceKey  string `json:\"stacktraceKey\" yaml:\"stacktraceKey\"`\n\tSkipLineEnding bool   `json:\"skipLineEnding\" yaml:\"skipLineEnding\"`\n\tLineEnding     string `json:\"lineEnding\" yaml:\"lineEnding\"`\n    // 日志编码的一些设置项\n\tEncodeLevel    LevelEncoder    `json:\"levelEncoder\" yaml:\"levelEncoder\"`\n\tEncodeTime     TimeEncoder     `json:\"timeEncoder\" yaml:\"timeEncoder\"`\n\tEncodeDuration DurationEncoder `json:\"durationEncoder\" yaml:\"durationEncoder\"`\n\tEncodeCaller   CallerEncoder   `json:\"callerEncoder\" yaml:\"callerEncoder\"`\n    // 与其它编码器不同， 这个编码器可选\n\tEncodeName NameEncoder `json:\"nameEncoder\" yaml:\"nameEncoder\"`\n    // 配置 interface{} 类型编码器。如果没设置，将用 json.Encoder 进行编码\n\tNewReflectedEncoder func(io.Writer) ReflectedEncoder `json:\"-\" yaml:\"-\"`\n    // 配置 console 中字段分隔符。默认使用 tab \n\tConsoleSeparator string `json:\"consoleSeparator\" yaml:\"consoleSeparator\"`\n}\ntype Entry struct {\n\tLevel      Level\n\tTime       time.Time\n\tLoggerName string\n\tMessage    string\n\tCaller     EntryCaller\n\tStack      string\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228163728-nx69d7d","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231228163728-nx69d7d","updated":"20231228163734"},"Children":[{"Type":"NodeText","Data":"用例"}]},{"ID":"20231228163734-364o6ta","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228163734-364o6ta","updated":"20231228163745"},"Children":[{"Type":"NodeText","Data":"例子1：基本配置"}]},{"ID":"20231228163746-4wuczd3","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231228163746-4wuczd3","updated":"20231228163749"},"Children":[{"ID":"20231228163749-t2lcc0r","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231228163749-t2lcc0r","updated":"20231228163749"},"Children":[{"ID":"20231228163749-j32p08j","Type":"NodeParagraph","Properties":{"id":"20231228163749-j32p08j","updated":"20231228163804"},"Children":[{"Type":"NodeText","Data":"zap.Config 自定义配置，看官方的一个基本例子"}]}]}]},{"ID":"20231228163807-utemwf2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228163807-utemwf2","updated":"20231228165949"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n\t\"encoding/json\"\n\n\t\"go.uber.org/zap\"\n)\n\n// https://pkg.go.dev/go.uber.org/zap@v1.24.0#hdr-Configuring_Zap\nfunc main() {\n\t// 表示 zap.Config 的 json 原始编码\n\t// outputPath: 设置日志输出路径，日志内容输出到标准输出和文件 logs.log\n\t// errorOutputPaths：设置错误日志输出路径\n\trawJSON := []byte(`{\n      \"level\": \"debug\",\n      \"encoding\": \"json\",\n      \"outputPaths\": [\"stdout\", \"./logs.log\"],\n      \"errorOutputPaths\": [\"stderr\"],\n      \"initialFields\": {\"foo\": \"bar\"},\n      \"encoderConfig\": {\n        \"messageKey\": \"message-customer\",\n        \"levelKey\": \"level\",\n        \"levelEncoder\": \"lowercase\"\n      }\n    }`)\n\n\t// 把 json 格式数据解析到 zap.Config struct\n\tvar cfg zap.Config\n\tif err := json.Unmarshal(rawJSON, \u0026cfg); err != nil {\n\t\tpanic(err)\n\t}\n\t// cfg.Build() 为配置对象创建一个 Logger\n\t// zap.Must() 封装了 Logger，Must()函数如果返回值不是 nil，就会报 panic。也就是检查Build是否错误\n\tlogger := zap.Must(cfg.Build())\n\tdefer logger.Sync()\n\n\tlogger.Info(\"logger construction succeeded\")\n}\n\n/*\nMust() 函数\n//  var logger = zap.Must(zap.NewProduction())\nfunc Must(logger *Logger, err error) *Logger {\n    if err != nil {\n        panic(err)\n    }\n\n    return logger\n}\n*/\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228165955-n35jffp","Type":"NodeParagraph","Properties":{"id":"20231228165955-n35jffp","updated":"20231228170002"},"Children":[{"Type":"NodeText","Data":"consul 输出如下："}]},{"ID":"20231228170002-vlad5ok","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228170002-vlad5ok","updated":"20231228170008"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"{\"level\":\"info\",\"message-customer\":\"logger construction succeeded\",\"foo\":\"bar\"}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228170014-xzi5vhw","Type":"NodeParagraph","Properties":{"id":"20231228170014-xzi5vhw","updated":"20231228170014"},"Children":[{"Type":"NodeText","Data":"并且在程序目录下生成了一个文件 logs.log，里面记录的日志内容也是上面consol输出内容。每运行一次就在日志文件末尾append一次内容。"}]},{"ID":"20231228170225-otzyjms","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228170225-otzyjms","updated":"20231228170241"},"Children":[{"Type":"NodeText","Data":"例子2：高级配置"}]},{"ID":"20231228170241-dzun3m3","Type":"NodeParagraph","Properties":{"id":"20231228170241-dzun3m3","updated":"20231228170327"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"上面的配置只是基本的自定义配置，如果有一些复杂的需求，比如在多个文件之间分割日志。"}]},{"ID":"20231228170306-6ji8kxz","Type":"NodeParagraph","Properties":{"id":"20231228170306-6ji8kxz","updated":"20231228170329"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"或者输出到不是 file 的文件中，比如输出到 kafka 中，那么就需要使用 zapcore 包。"}]},{"ID":"20231228170306-bvqixm5","Type":"NodeParagraph","Properties":{"id":"20231228170306-bvqixm5","updated":"20231228170306"},"Children":[{"Type":"NodeText","Data":"在下面的例子中，我们将把日志输出到 kafka 中，并且也输出到 console 里。并且我们对 kafka 不同主题进行编码设置，对输出到 console 编码进行设置，也希望处理高优先级的日志。"}]},{"ID":"20231228170306-3msotcl","Type":"NodeParagraph","Properties":{"id":"20231228170306-3msotcl","updated":"20231228170306"},"Children":[{"Type":"NodeText","Data":"官方例子："}]},{"ID":"20231228170340-2hxwt3y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228170340-2hxwt3y","updated":"20231228170345"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"package main\n\nimport (\n\t\"io\"\n\t\"os\"\n\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zapcore\"\n)\n\nfunc main() {\n\t// 首先，定义不同级别日志处理逻辑\n\thighPriority := zap.LevelEnablerFunc(func(lvl zapcore.Level) bool {\n\t\treturn lvl \u003e= zapcore.ErrorLevel\n\t})\n\tlowPriority := zap.LevelEnablerFunc(func(lvl zapcore.Level) bool {\n\t\treturn lvl \u003c zapcore.ErrorLevel\n\t})\n\n\t// 假设有2个kafka 的 topic，一个 debugging，一个 errors\n\n\t// zapcore.AddSync 添加一个文件句柄。\n\ttopicDebugging := zapcore.AddSync(io.Discard)\n\ttopicErrors := zapcore.AddSync(io.Discard)\n\n\t// 如果他们对并发使用不安全，我们可以用 zapcore.Lock 添加一个 mutex 互斥锁。\n\tconsoleDebugging := zapcore.Lock(os.Stdout)\n\tconsoleErrors := zapcore.Lock(os.Stderr)\n\n\t// 设置 kafka 和 console 输出配置\n\tkafkaEncoder := zapcore.NewJSONEncoder(zap.NewProductionEncoderConfig())\n\tconsoleEncoder := zapcore.NewConsoleEncoder(zap.NewDevelopmentEncoderConfig())\n\n\t// 把上面的设置加入到 zapcore.NewCore() 函数里，然后再把他们加入到 zapcore.NewTee() 函数里\n\tcore := zapcore.NewTee(\n\t\tzapcore.NewCore(kafkaEncoder, topicErrors, highPriority),\n\t\tzapcore.NewCore(consoleEncoder, consoleErrors, highPriority),\n\t\tzapcore.NewCore(kafkaEncoder, topicDebugging, lowPriority),\n\t\tzapcore.NewCore(consoleEncoder, consoleDebugging, lowPriority),\n\t)\n\n\t// 最后调用 zap.New() 函数\n\tlogger := zap.New(core)\n\tdefer logger.Sync()\n\tlogger.Info(\"constructed a logger\")\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}