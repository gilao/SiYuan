{"ID":"20240102151254-g14nhv7","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f342","id":"20240102151254-g14nhv7","tags":"需要仔细看,Go-MapReduce","title":"使用golang实现一个MapReduce","updated":"20240103145722"},"Children":[{"ID":"20240102151254-tidgnvj","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240102151254-tidgnvj","updated":"20240103112414"},"Children":[{"Type":"NodeText","Data":"背景"}]},{"ID":"20240103112421-e5ngq1g","Type":"NodeParagraph","Properties":{"id":"20240103112421-e5ngq1g","updated":"20240103112421"},"Children":[{"Type":"NodeText","Data":"在日常业务开发中，我们经常遇到需要并发处理的场景。例如："}]},{"ID":"20240103112421-mge17y8","Type":"NodeList","ListData":{},"Properties":{"id":"20240103112421-mge17y8","updated":"20240103112421"},"Children":[{"ID":"20240103112421-1dstkku","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103112421-1dstkku","updated":"20240103112421"},"Children":[{"ID":"20240103112421-7ktf0iu","Type":"NodeParagraph","Properties":{"id":"20240103112421-7ktf0iu","updated":"20240103112421"},"Children":[{"Type":"NodeText","Data":"依据id列表查询db，获取数据。为了保证查询性能，单次查询的id列表长度最好不要超过50(依据业务来判断)，当id列表长度超过50时，拆分成并发请求，减少耗时和提高性能，返回聚合后的结果"}]}]},{"ID":"20240103112421-prw0eg7","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103112421-prw0eg7","updated":"20240103112421"},"Children":[{"ID":"20240103112421-g2ge2dv","Type":"NodeParagraph","Properties":{"id":"20240103112421-g2ge2dv","updated":"20240103112421"},"Children":[{"Type":"NodeText","Data":"外部提供的接口不支持批量写入/读取数据，当需要批量处理数据时，为了减少耗时和提高性能，并发请求外部接口"}]}]}]},{"ID":"20240103112421-zdbis5j","Type":"NodeParagraph","Properties":{"id":"20240103112421-zdbis5j","updated":"20240103112421"},"Children":[{"Type":"NodeText","Data":"以上处理数据的场景，都可以分成两个阶段："}]},{"ID":"20240103112421-xdbgfrw","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240103112421-xdbgfrw","updated":"20240103112421"},"Children":[{"ID":"20240103112421-b13r8uw","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240103112421-b13r8uw","updated":"20240103112421"},"Children":[{"ID":"20240103112421-wl9wzcs","Type":"NodeParagraph","Properties":{"id":"20240103112421-wl9wzcs","updated":"20240103112421"},"Children":[{"Type":"NodeText","Data":"请求阶段。基本都是IO操作，请求db，或者是调用外部接口"}]}]},{"ID":"20240103112421-jmimn0w","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240103112421-jmimn0w","updated":"20240103112421"},"Children":[{"ID":"20240103112421-obx4gx3","Type":"NodeParagraph","Properties":{"id":"20240103112421-obx4gx3","updated":"20240103112421"},"Children":[{"Type":"NodeText","Data":"处理阶段。对返回的数据进行转换，过滤，聚合等操作"}]}]}]},{"ID":"20240103112421-ftd0ndr","Type":"NodeParagraph","Properties":{"id":"20240103112421-ftd0ndr","updated":"20240103112421"},"Children":[{"Type":"NodeText","Data":"同步调用，调用耗时增长明显"}]},{"ID":"20240103113252-c6ei0zt","Type":"NodeParagraph","Properties":{"id":"20240103113252-c6ei0zt","updated":"20240103113252"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240103113252-h11hxs2.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240103113254-avbqa1v","Type":"NodeParagraph","Properties":{"id":"20240103113254-avbqa1v","updated":"20240103113312"},"Children":[{"Type":"NodeText","Data":"并发调用，可以减少调用耗时"}]},{"ID":"20240103113317-6eqdchx","Type":"NodeParagraph","Properties":{"id":"20240103113317-6eqdchx","updated":"20240103113317"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240103113317-4eaqzxh.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240103113330-3xx6kmr","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240103113330-3xx6kmr","updated":"20240103113333"},"Children":[{"Type":"NodeText","Data":"分析"}]},{"ID":"20240103113341-g5e7jai","Type":"NodeParagraph","Properties":{"id":"20240103113341-g5e7jai","updated":"20240103113341"},"Children":[{"Type":"NodeText","Data":"上面说的处理数据的场景，都可以分成两个阶段："}]},{"ID":"20240103113341-7xvu5bd","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240103113341-7xvu5bd","updated":"20240103113341"},"Children":[{"ID":"20240103113341-j87mspw","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240103113341-j87mspw","updated":"20240103113341"},"Children":[{"ID":"20240103113341-uw5p1ad","Type":"NodeParagraph","Properties":{"id":"20240103113341-uw5p1ad","updated":"20240103113341"},"Children":[{"Type":"NodeText","Data":"请求阶段。IO操作，可以并发的去进行，互不干扰"}]}]},{"ID":"20240103113341-tf9imwu","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240103113341-tf9imwu","updated":"20240103113341"},"Children":[{"ID":"20240103113341-ky601zm","Type":"NodeParagraph","Properties":{"id":"20240103113341-ky601zm","updated":"20240103113341"},"Children":[{"Type":"NodeText","Data":"处理阶段。同步进行，保证聚合结果的正确性"}]}]}]},{"ID":"20240103113341-ezwhlck","Type":"NodeParagraph","Properties":{"id":"20240103113341-ezwhlck","updated":"20240103113341"},"Children":[{"Type":"NodeText","Data":"这种是一种特殊的MapReduce"}]},{"ID":"20240103113347-osx928u","Type":"NodeParagraph","Properties":{"id":"20240103113347-osx928u","updated":"20240103113347"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240103113347-ns6b4t6.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240103113357-maz0tk5","Type":"NodeParagraph","Properties":{"id":"20240103113357-maz0tk5","updated":"20240103113425"},"Children":[{"Type":"NodeText","Data":" 为了处理这类场景，我们需要明确以下几个部分："}]},{"ID":"20240103113437-4sgqbxl","Type":"NodeList","ListData":{},"Properties":{"id":"20240103113437-4sgqbxl","updated":"20240103113437"},"Children":[{"ID":"20240103113437-qsjf06f","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103113437-qsjf06f","updated":"20240103113437"},"Children":[{"ID":"20240103113437-07347x3","Type":"NodeParagraph","Properties":{"id":"20240103113437-07347x3","updated":"20240103113437"},"Children":[{"Type":"NodeText","Data":"列表长度。代表有多少数据需要进行处理"}]}]},{"ID":"20240103113437-shx7cdh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103113437-shx7cdh","updated":"20240103113437"},"Children":[{"ID":"20240103113437-mbl0dqv","Type":"NodeParagraph","Properties":{"id":"20240103113437-mbl0dqv","updated":"20240103113437"},"Children":[{"Type":"NodeText","Data":"map函数。并发处理的函数，互不干扰"}]}]},{"ID":"20240103113437-l3r7ead","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103113437-l3r7ead","updated":"20240103113437"},"Children":[{"ID":"20240103113437-kez746p","Type":"NodeParagraph","Properties":{"id":"20240103113437-kez746p","updated":"20240103113437"},"Children":[{"Type":"NodeText","Data":"reduce函数。同步处理的函数"}]}]},{"ID":"20240103113437-x2gcm3f","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103113437-x2gcm3f","updated":"20240103113437"},"Children":[{"ID":"20240103113437-onlafqu","Type":"NodeParagraph","Properties":{"id":"20240103113437-onlafqu","updated":"20240103113437"},"Children":[{"Type":"NodeText","Data":"最大并发数。决定需要开多少线程/协程来处理"}]}]},{"ID":"20240103113437-ctuzp9c","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103113437-ctuzp9c","updated":"20240103113437"},"Children":[{"ID":"20240103113437-grdq8s8","Type":"NodeParagraph","Properties":{"id":"20240103113437-grdq8s8","updated":"20240103113437"},"Children":[{"Type":"NodeText","Data":"拆分长度。列表长度 / 拆分长度 = 子任务数"}]}]}]},{"ID":"20240103113437-ix5zqfh","Type":"NodeParagraph","Properties":{"id":"20240103113437-ix5zqfh","updated":"20240103113437"},"Children":[{"Type":"NodeText","Data":"由于我在日常开发中常使用golang语言，下面梳理下使用golang来解决这类问题的一个思路"}]},{"ID":"20240103113437-iqab0ng","Type":"NodeParagraph","Properties":{"id":"20240103113437-iqab0ng","updated":"20240103113437"},"Children":[{"Type":"NodeText","Data":"函数签名"}]},{"ID":"20240103113437-30ku583","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240103113437-30ku583","updated":"20240103113451"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func ChunkProcess(length int, procedure func(start, end int) (interface{}, error),\n   reduce func(partialResult interface{}, partialErr error, start, end int), maxConcurrent int, chunkSize int) \n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240103145632-ymrexsb","Type":"NodeParagraph","Properties":{"id":"20240103145632-ymrexsb","updated":"20240103145632"},"Children":[{"Type":"NodeText","Data":"核心逻辑："}]},{"ID":"20240103145632-atlv57j","Type":"NodeList","ListData":{},"Properties":{"id":"20240103145632-atlv57j","updated":"20240103145632"},"Children":[{"ID":"20240103145632-uqfz9mq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103145632-uqfz9mq","updated":"20240103145632"},"Children":[{"ID":"20240103145632-l1dthq3","Type":"NodeParagraph","Properties":{"id":"20240103145632-l1dthq3","updated":"20240103145632"},"Children":[{"Type":"NodeText","Data":"当最大并发数 \u003c= 1 或者子任务数(列表长度 / 拆分长度) \u003c= 1时，同步执行map函数和reduce函数即可"}]}]},{"ID":"20240103145632-h3af93p","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103145632-h3af93p","updated":"20240103145632"},"Children":[{"ID":"20240103145632-w5lvytd","Type":"NodeParagraph","Properties":{"id":"20240103145632-w5lvytd","updated":"20240103145632"},"Children":[{"Type":"NodeText","Data":"其余情况，并发处理map函数，同步执行reduce函数"}]},{"ID":"20240103145632-51o5i6j","Type":"NodeList","ListData":{},"Properties":{"id":"20240103145632-51o5i6j","updated":"20240103145632"},"Children":[{"ID":"20240103145632-42rkl9t","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103145632-42rkl9t","updated":"20240103145632"},"Children":[{"ID":"20240103145632-sm78hxk","Type":"NodeParagraph","Properties":{"id":"20240103145632-sm78hxk","updated":"20240103145632"},"Children":[{"Type":"NodeText","Data":"获取并发处理的子任务数量：lengthTask := int(math.Ceil(float64(length) / float64(chunkSize)))"}]}]},{"ID":"20240103145632-crkwzi8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103145632-crkwzi8","updated":"20240103145632"},"Children":[{"ID":"20240103145632-3zc5cg0","Type":"NodeParagraph","Properties":{"id":"20240103145632-3zc5cg0","updated":"20240103145632"},"Children":[{"Type":"NodeText","Data":"通过sync.Mutex保证reduce同步执行"}]}]},{"ID":"20240103145632-xnzrzdf","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103145632-xnzrzdf","updated":"20240103145632"},"Children":[{"ID":"20240103145632-egufyg4","Type":"NodeParagraph","Properties":{"id":"20240103145632-egufyg4","updated":"20240103145632"},"Children":[{"Type":"NodeText","Data":"通过sync.WaitGroup保证等待子任务全部执行完成"}]}]},{"ID":"20240103145632-9drkobk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240103145632-9drkobk","updated":"20240103145632"},"Children":[{"ID":"20240103145632-udkuylh","Type":"NodeParagraph","Properties":{"id":"20240103145632-udkuylh","updated":"20240103145632"},"Children":[{"Type":"NodeText","Data":"通过chan控制最大并发数"}]}]}]}]}]},{"ID":"20240103145632-lj93ob4","Type":"NodeParagraph","Properties":{"id":"20240103145632-lj93ob4","updated":"20240103145703"},"Children":[{"Type":"NodeText","Data":"代码实现："}]},{"ID":"20240103145703-isxoxtf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240103145703-isxoxtf","updated":"20240103145713"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"package test\n\nimport (\n   \"math\"\n   \"sync\"\n)\n\nfunc ChunkProcess(length int, procedure func(start, end int) (interface{}, error),\n   reduce func(partialResult interface{}, partialErr error, start, end int), maxConcurrent int, chunkSize int) {\n   if length \u003c 1 {\n      return\n   }\n   if maxConcurrent \u003c= 1 || length \u003c= chunkSize {\n      doChunkProcessSerially(length, procedure, reduce, chunkSize)\n   } else {\n      doChunkProcessConcurrently(length, procedure, reduce, maxConcurrent, chunkSize)\n   }\n}\n\n// 同步处理\nfunc doChunkProcessSerially(length int, procedure func(start, end int) (interface{}, error),\n   reduce func(partialResult interface{}, partialErr error, start, end int), chunkSize int) {\n   // 拆分的子任务数\n   chunkNums := int(math.Ceil(float64(length) / float64(chunkSize)))\n   for i := 0; i \u003c chunkNums; i++ {\n      func(chunkIndex int) {\n         defer func() {\n            if err := recover(); err != nil {\n               // 自定义错误处理\n            }\n         }()\n         start := chunkIndex * chunkSize\n         end := start + chunkSize\n         if end \u003e length {\n            end = length\n         }\n         // 执行map\n         response, err := procedure(start, end)\n         // 执行reduce\n         if reduce != nil {\n            reduce(response, err, start, end)\n         }\n      }(i)\n   }\n}\n\n// 并发处理\nfunc doChunkProcessConcurrently(length int, procedure func(start, end int) (interface{}, error),\n   reduce func(partialResult interface{}, partialErr error, start, end int), maxConcurrent int, chunkSize int) {\n   index := 0\n   chunkIndex := 0\n   // 拆分的子任务数\n   lengthTask := int(math.Ceil(float64(length) / float64(chunkSize)))\n   // 保证reduce同步执行\n   var lock sync.Mutex\n   // 保证子任务全部执行完成\n   var wg sync.WaitGroup\n   wg.Add(lengthTask)\n   // 控制并发数\n   throttleChan := make(chan struct{}, maxConcurrent)\n\n   for {\n      start := index\n      end := index + chunkSize\n      if end \u003e length {\n         end = length\n      }\n      throttleChan \u003c- struct{}{}\n      go func(chunkIndex int) {\n         defer func() {\n            \u003c-throttleChan\n            if err := recover(); err != nil {\n               // 自定义错误处理\n            }\n            wg.Done()\n         }()\n         // 执行map\n         response, err := procedure(start, end)\n         // 执行reduce\n         if reduce != nil {\n            lock.Lock()\n            defer lock.Unlock()\n            reduce(response, err, start, end)\n         }\n      }(chunkIndex)\n      chunkIndex++\n      index = index + chunkSize\n      if index \u003e= length {\n         break\n      }\n   }\n   wg.Wait()\n   close(throttleChan)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240103145714-fnqqsph","Type":"NodeParagraph","Properties":{"id":"20240103145714-fnqqsph","updated":"20240103145716"},"Children":[{"Type":"NodeText","Data":"测试："}]},{"ID":"20240103145716-u7x1grd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240103145716-u7x1grd","updated":"20240103145722"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z28="},{"Type":"NodeCodeBlockCode","Data":"func TestChunkProcess(t *testing.T) {\n   trackIDs := []int64{123, 456, 789}\n   results := make([]int64, 0)\n   ChunkProcess(len(trackIDs), func(start, end int) (interface{}, error) {\n      result := trackIDs[start] + 100\n      return result, nil\n   }, func(partialResult interface{}, partialErr error, start, end int) {\n      results = append(results, partialResult.(int64))\n   }, 2, 1)\n   fmt.Println(results)\n}\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}