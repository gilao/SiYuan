{"ID":"20230723214247-lmr9q9r","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f981","id":"20230723214247-lmr9q9r","scroll":"\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230723214247-lmr9q9r\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230723214424-m7gfl7c\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230723214434-g699ry4\u0026quot;,\u0026quot;scrollTop\u0026quot;:0\u0026#125;","tags":"C语言代码,TCP编程","title":"TCP 迭代回声","updated":"20230723214434"},"Children":[{"ID":"20230723214424-m7gfl7c","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230723214424-m7gfl7c","updated":"20230723214424"},"Children":[{"Type":"NodeText","Data":"echo_server.c"}]},{"ID":"20230723214424-37glkno","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230723214424-37glkno","updated":"20230723214424"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cunistd.h\u003e\n#include \u003carpa/inet.h\u003e\n#include \u003csys/socket.h\u003e\n\n#define BUF_SIZE 1024\nvoid error_handling(char *message);\n\nint main(int argc, char *argv[])\n{\n    int serv_sock, clnt_sock;\n    char message[BUF_SIZE];\n    int str_len, i;\n\n    struct sockaddr_in serv_adr, clnt_adr;\n    socklen_t clnt_adr_sz;\n\n    if (argc != 2)\n    {\n        printf(\"Usage : %s \u003cport\u003e\\n\", argv[0]);\n        exit(1);\n    }\n\n    serv_sock = socket(PF_INET, SOCK_STREAM, 0);\n    if (serv_sock == -1)\n        error_handling(\"socket() error\");\n\n    memset(\u0026serv_adr, 0, sizeof(serv_adr));\n    serv_adr.sin_family = AF_INET;\n    serv_adr.sin_addr.s_addr = htonl(INADDR_ANY);\n    serv_adr.sin_port = htons(atoi(argv[1]));\n\n    if (bind(serv_sock, (struct sockaddr *)\u0026serv_adr, sizeof(serv_adr)) == -1)\n        error_handling(\"bind() error\");\n\n    if (listen(serv_sock, 5) == -1)\n        error_handling(\"listen() error\");\n\n    clnt_adr_sz = sizeof(clnt_adr);\n    //调用 5 次 accept 函数，共为 5 个客户端提供服务\n    for (i = 0; i \u003c 5; i++)\n    {\n        clnt_sock = accept(serv_sock, (struct sockaddr *)\u0026clnt_adr, \u0026clnt_adr_sz);\n        if (clnt_sock == -1)\n            error_handling(\"accept() error\");\n        else\n            printf(\"Connect client %d \\n\", i + 1);\n\n        while ((str_len = read(clnt_sock, message, BUF_SIZE)) != 0)\n            write(clnt_sock, message, str_len);\n\n        close(clnt_sock);\n    }\n    close(serv_sock);\n    return 0;\n}\n\nvoid error_handling(char *message)\n{\n    fputs(message, stderr);\n    fputc('\\n', stderr);\n    exit(1);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230723214424-pjy16d6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230723214424-pjy16d6","updated":"20230723214424"},"Children":[{"Type":"NodeText","Data":"echo_client.c"}]},{"ID":"20230723214424-sazky00","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20230723214424-sazky00","updated":"20230723214424"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cunistd.h\u003e\n#include \u003carpa/inet.h\u003e\n#include \u003csys/socket.h\u003e\n\n#define BUF_SIZE 1024\nvoid error_handling(char *message);\n\nint main(int argc, char *argv[])\n{\n    int sock;\n    char message[BUF_SIZE];\n    int str_len;\n    struct sockaddr_in serv_adr;\n\n    if (argc != 3)\n    {\n        printf(\"Usage : %s \u003cIP\u003e \u003cport\u003e\\n\", argv[0]);\n        exit(1);\n    }\n\n    sock = socket(PF_INET, SOCK_STREAM, 0);\n    if (sock == -1)\n        error_handling(\"socket() error\");\n\n    memset(\u0026serv_adr, 0, sizeof(serv_adr));\n    serv_adr.sin_family = AF_INET;\n    serv_adr.sin_addr.s_addr = inet_addr(argv[1]);\n    serv_adr.sin_port = htons(atoi(argv[2]));\n\n    if (connect(sock, (struct sockaddr *)\u0026serv_adr, sizeof(serv_adr)) == -1)\n        error_handling(\"connect() error!\");\n    else\n        puts(\"Connected...........\");\n\n    while (1)\n    {\n        fputs(\"Input message(Q to quit): \", stdout);\n        fgets(message, BUF_SIZE, stdin);\n\n        if (!strcmp(message, \"q\\n\") || !strcmp(message, \"Q\\n\"))\n            break;\n\n        write(sock, message, strlen(message));\n        str_len = read(sock, message, BUF_SIZE - 1);\n        message[str_len] = 0;\n        printf(\"Message from server: %s\", message);\n    }\n    close(sock);\n    return 0;\n}\n\nvoid error_handling(char *message)\n{\n    fputs(message, stderr);\n    fputc('\\n', stderr);\n    exit(1);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20230723214424-9pwgq8y","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230723214424-9pwgq8y","updated":"20230723214424"},"Children":[{"Type":"NodeText","Data":"编译结果"}]},{"ID":"20230723214424-oe5wfgr","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230723214424-oe5wfgr","updated":"20230723214424"},"Children":[{"Type":"NodeText","Data":"echo_client端"}]},{"ID":"20230723214424-hu1g2q8","Type":"NodeParagraph","Properties":{"id":"20230723214424-hu1g2q8","updated":"20230723214424"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image-20230426181658130"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/image-20230426181658130.png?lastModify=1690119846"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230723214424-xs5s6l9","Type":"NodeParagraph","Properties":{"id":"20230723214424-xs5s6l9","updated":"20230723214424"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image-20230426181853352"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/image-20230426181853352.png?lastModify=1690119846"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230723214424-yo3paqp","Type":"NodeParagraph","Properties":{"id":"20230723214424-yo3paqp","updated":"20230723214424"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image-20230426182000212"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/image-20230426182000212.png?lastModify=1690119846"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230723214424-voyg33d","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230723214424-voyg33d","updated":"20230723214424"},"Children":[{"Type":"NodeText","Data":"echo_server端"}]},{"ID":"20230723214424-rj2p98b","Type":"NodeParagraph","Properties":{"id":"20230723214424-rj2p98b","updated":"20230723214424"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image-20230426182014092"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"file://E:/Typora%20picture/image-20230426182014092.png?lastModify=1690119846"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20230723214434-g699ry4","Type":"NodeParagraph","Properties":{"id":"20230723214434-g699ry4"}}]}