{"ID":"20240227110400-dmrugy8","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f43c","id":"20240227110400-dmrugy8","title":"3-13 其他数学函数","updated":"20240227142858"},"Children":[{"ID":"20240227110408-i0vtstm","Type":"NodeList","ListData":{},"Properties":{"id":"20240227110408-i0vtstm","updated":"20240227110751"},"Children":[{"ID":"20240227110411-d4gwtmm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110411-d4gwtmm","updated":"20240227110657"},"Children":[{"ID":"20240227110411-vc3k6mo","Type":"NodeParagraph","Properties":{"id":"20240227110411-vc3k6mo","updated":"20240227110657"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"torch.abs() # 绝对值函数"}]}]},{"ID":"20240227110416-g4a5g9z","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110416-g4a5g9z","updated":"20240227110604"},"Children":[{"ID":"20240227110416-nndz9uf","Type":"NodeParagraph","Properties":{"id":"20240227110416-nndz9uf","updated":"20240227110604"},"Children":[{"Type":"NodeText","Data":"torch.erf()"}]}]},{"ID":"20240227110417-3asb8bt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110417-3asb8bt","updated":"20240227110609"},"Children":[{"ID":"20240227110417-5ie1v45","Type":"NodeParagraph","Properties":{"id":"20240227110417-5ie1v45","updated":"20240227110609"},"Children":[{"Type":"NodeText","Data":"torch.erfinv()"}]}]},{"ID":"20240227110418-i58x10k","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110418-i58x10k","updated":"20240227110751"},"Children":[{"ID":"20240227110418-3vap7tj","Type":"NodeParagraph","Properties":{"id":"20240227110418-3vap7tj","updated":"20240227110751"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"torch.sigmoid() #"},{"Type":"NodeText","Data":" "}]}]},{"ID":"20240227110418-tula4vh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110418-tula4vh","updated":"20240227110610"},"Children":[{"ID":"20240227110418-j677te8","Type":"NodeParagraph","Properties":{"id":"20240227110418-j677te8","updated":"20240227110610"},"Children":[{"Type":"NodeText","Data":"torch.neg()"}]}]},{"ID":"20240227110419-ggftd5w","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110419-ggftd5w","updated":"20240227110611"},"Children":[{"ID":"20240227110419-h6v3pq4","Type":"NodeParagraph","Properties":{"id":"20240227110419-h6v3pq4","updated":"20240227110611"},"Children":[{"Type":"NodeText","Data":"torch.reciprocal()"}]}]},{"ID":"20240227110420-x47vfu3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110420-x47vfu3","updated":"20240227110611"},"Children":[{"ID":"20240227110420-73gsdos","Type":"NodeParagraph","Properties":{"id":"20240227110420-73gsdos","updated":"20240227110611"},"Children":[{"Type":"NodeText","Data":"torch.rsqrt()"}]}]},{"ID":"20240227110420-f2kob9g","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110420-f2kob9g","updated":"20240227110728"},"Children":[{"ID":"20240227110420-5yjqjvf","Type":"NodeParagraph","Properties":{"id":"20240227110420-5yjqjvf","updated":"20240227110728"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"torch.sign() # 分段（符号）函数"}]}]},{"ID":"20240227110421-b4mu02w","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110421-b4mu02w","updated":"20240227110613"},"Children":[{"ID":"20240227110421-911bjci","Type":"NodeParagraph","Properties":{"id":"20240227110421-911bjci","updated":"20240227110613"},"Children":[{"Type":"NodeText","Data":"torch.lerp()"}]}]},{"ID":"20240227110422-2r1susw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110422-2r1susw","updated":"20240227110613"},"Children":[{"ID":"20240227110422-z1ivcr2","Type":"NodeParagraph","Properties":{"id":"20240227110422-z1ivcr2","updated":"20240227110613"},"Children":[{"Type":"NodeText","Data":"torch.addcdiv()"}]}]},{"ID":"20240227110522-8s6s6fn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110522-8s6s6fn","updated":"20240227110614"},"Children":[{"ID":"20240227110522-a9366ct","Type":"NodeParagraph","Properties":{"id":"20240227110522-a9366ct","updated":"20240227110614"},"Children":[{"Type":"NodeText","Data":"torch.addcmul()"}]}]},{"ID":"20240227110527-fahka4q","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110527-fahka4q","updated":"20240227110615"},"Children":[{"ID":"20240227110527-md1whbq","Type":"NodeParagraph","Properties":{"id":"20240227110527-md1whbq","updated":"20240227110615"},"Children":[{"Type":"NodeText","Data":"torch.cumprod()"}]}]},{"ID":"20240227110533-kejf5hc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240227110533-kejf5hc","updated":"20240227110615"},"Children":[{"ID":"20240227110533-bvk7tf8","Type":"NodeParagraph","Properties":{"id":"20240227110533-bvk7tf8","updated":"20240227110615"},"Children":[{"Type":"NodeText","Data":"torch.cumsum()"}]}]}]},{"ID":"20240227110400-96j56yq","Type":"NodeParagraph","Properties":{"id":"20240227110400-96j56yq","updated":"20240227110834"}},{"ID":"20240227110803-0nkc3d9","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240227110803-0nkc3d9","updated":"20240227110949"},"Children":[{"ID":"20240227110803-fuqdazz","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240227110803-fuqdazz","updated":"20240227110949"},"Children":[{"ID":"20240227110803-ltb4bi3","Type":"NodeParagraph","Properties":{"id":"20240227110803-ltb4bi3","updated":"20240227110949"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"torch.abs()"},{"Type":"NodeText","Data":"​:"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"返回输入张量中每个元素的绝对值。"},{"Type":"NodeText","Data":"例如，如果输入是一个包含负数、正数或零的张量，该函数会返回相应位置的非负数值。"}]}]},{"ID":"20240227110803-ub1e9bl","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240227110803-ub1e9bl","updated":"20240227110803"},"Children":[{"ID":"20240227110803-ped7ir0","Type":"NodeParagraph","Properties":{"id":"20240227110803-ped7ir0","updated":"20240227110803"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"torch.erf()"},{"Type":"NodeText","Data":"​: 计算输入张量中每个元素的误差函数值（Error Function），误差函数是定义在实数域上的连续无界函数，它描述的是标准正态分布变量的概率密度累积到某个特定点的情况。"}]}]},{"ID":"20240227110803-137tg02","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240227110803-137tg02","updated":"20240227110803"},"Children":[{"ID":"20240227110803-vmnokuc","Type":"NodeParagraph","Properties":{"id":"20240227110803-vmnokuc","updated":"20240227110803"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"torch.erfinv()"},{"Type":"NodeText","Data":"​: 计算输入张量中每个元素的误差函数的反函数值（Inverse Error Function），也就是给定 erf(x) 的值时找到对应的 x 值。"}]}]},{"ID":"20240227110803-vj8iwwt","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20240227110803-vj8iwwt","updated":"20240227110924"},"Children":[{"ID":"20240227110803-dlo3uh6","Type":"NodeParagraph","Properties":{"id":"20240227110803-dlo3uh6","updated":"20240227110924"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"torch.sigmoid()"},{"Type":"NodeText","Data":"​: 对输入张量中的每个元素应用Sigmoid激活函数（也称为Logistic函数），输出范围在(0, 1)之间，常用于神经网络的激活层。 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"激活函数"}]}]},{"ID":"20240227110803-y5h0y5k","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20240227110803-y5h0y5k","updated":"20240227110803"},"Children":[{"ID":"20240227110803-m39zok2","Type":"NodeParagraph","Properties":{"id":"20240227110803-m39zok2","updated":"20240227110803"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"torch.neg()"},{"Type":"NodeText","Data":"​: 对输入张量中的每个元素进行求负运算，即将所有元素变为它们的相反数。"}]}]},{"ID":"20240227110803-fxl63uy","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ni4=","Num":6},"Properties":{"id":"20240227110803-fxl63uy","updated":"20240227110803"},"Children":[{"ID":"20240227110803-qkym4mf","Type":"NodeParagraph","Properties":{"id":"20240227110803-qkym4mf","updated":"20240227110803"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"torch.reciprocal()"},{"Type":"NodeText","Data":"​: 返回输入张量中每个元素的倒数，对于非零元素，输出为 1/element。"}]}]},{"ID":"20240227110803-qb5cvnx","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ny4=","Num":7},"Properties":{"id":"20240227110803-qb5cvnx","updated":"20240227110803"},"Children":[{"ID":"20240227110803-i1l1k0x","Type":"NodeParagraph","Properties":{"id":"20240227110803-i1l1k0x","updated":"20240227110803"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"torch.rsqrt()"},{"Type":"NodeText","Data":"​: 计算输入张量中每个元素的平方根倒数，即 1/sqrt(element)，对于非负元素计算有效倒数平方根。"}]}]},{"ID":"20240227110803-2mknmh6","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"OC4=","Num":8},"Properties":{"id":"20240227110803-2mknmh6","updated":"20240227110859"},"Children":[{"ID":"20240227110803-d0w045o","Type":"NodeParagraph","Properties":{"id":"20240227110803-d0w045o","updated":"20240227110859"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"torch.sign()"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":": 返回输入张量中每个元素的符号，输出结果为 -1（当输入为负数）、0（当输入为零）或 1（当输入为正数）。"},{"Type":"NodeText","Data":"​: 返回输入张量中每个元素的符号，输出结果为 -1（当输入为负数）、0（当输入为零）或 1（当输入为正数）。"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"分段函数 做分类问题"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"}]}]},{"ID":"20240227110803-17kgj6c","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"OS4=","Num":9},"Properties":{"id":"20240227110803-17kgj6c","updated":"20240227110803"},"Children":[{"ID":"20240227110803-ih1txi9","Type":"NodeParagraph","Properties":{"id":"20240227110803-ih1txi9","updated":"20240227110803"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"torch.lerp()"},{"Type":"NodeText","Data":"​: 线性插值（Linear Interpolation），根据两个张量（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"start"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"end"},{"Type":"NodeText","Data":"​）以及一个介于 0 和 1 之间的标量或张量 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"weight"},{"Type":"NodeText","Data":"​，计算线性插值的结果。"}]}]},{"ID":"20240227110803-iv5jw1l","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MTAu","Num":10},"Properties":{"id":"20240227110803-iv5jw1l","updated":"20240227110803"},"Children":[{"ID":"20240227110803-3hm3k7x","Type":"NodeParagraph","Properties":{"id":"20240227110803-3hm3k7x","updated":"20240227110803"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"torch.addcdiv()"},{"Type":"NodeText","Data":"​: 同时执行加法和除法操作，形式为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"(tensor1 + c * tensor2) / tensor3"},{"Type":"NodeText","Data":"​，其中 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tensor1"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tensor2"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tensor3"},{"Type":"NodeText","Data":"​ 都是张量，而 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"c"},{"Type":"NodeText","Data":"​ 是一个标量。"}]}]},{"ID":"20240227110803-a5jxnvf","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MTEu","Num":11},"Properties":{"id":"20240227110803-a5jxnvf","updated":"20240227110803"},"Children":[{"ID":"20240227110803-wuiuyqx","Type":"NodeParagraph","Properties":{"id":"20240227110803-wuiuyqx","updated":"20240227110803"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"torch.addcmul()"},{"Type":"NodeText","Data":"​: 执行加法和逐元素乘法操作，形式为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tensor1 + c * tensor2 * tensor3"},{"Type":"NodeText","Data":"​，其中 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tensor1"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tensor2"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tensor3"},{"Type":"NodeText","Data":"​ 都是张量，而 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"c"},{"Type":"NodeText","Data":"​ 是一个标量。"}]}]},{"ID":"20240227110803-lbp7zhz","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MTIu","Num":12},"Properties":{"id":"20240227110803-lbp7zhz","updated":"20240227110803"},"Children":[{"ID":"20240227110803-u56kpi0","Type":"NodeParagraph","Properties":{"id":"20240227110803-u56kpi0","updated":"20240227110803"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"torch.cumprod()"},{"Type":"NodeText","Data":"​: 计算输入张量沿指定维度的累计积，对于每一维，输出张量的每个元素是输入张量到该位置元素的所有元素的乘积。"}]}]},{"ID":"20240227110803-u11mekp","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MTMu","Num":13},"Properties":{"id":"20240227110803-u11mekp","updated":"20240227110803"},"Children":[{"ID":"20240227110803-dnf26kf","Type":"NodeParagraph","Properties":{"id":"20240227110803-dnf26kf","updated":"20240227110803"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"torch.cumsum()"},{"Type":"NodeText","Data":"​: 计算输入张量沿指定维度的累计和，对于每一维，输出张量的每个元素是输入张量从起始位置到该位置元素的所有元素的和。"}]}]}]}]}