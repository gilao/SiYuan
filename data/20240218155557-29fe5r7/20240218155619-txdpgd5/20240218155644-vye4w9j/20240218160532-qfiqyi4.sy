{"ID":"20240218160532-qfiqyi4","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f42b","id":"20240218160532-qfiqyi4","title":"1.1.1 服务器与客户端编程","updated":"20240218160602"},"Children":[{"ID":"20240218160602-lm0m0lt","Type":"NodeParagraph","Properties":{"id":"20240218160602-lm0m0lt","updated":"20240218160602"},"Children":[{"Type":"NodeText","Data":"给静态页面添加脚本有如下两种最基本的方式。"}]},{"ID":"20240218160602-dia4wu1","Type":"NodeParagraph","Properties":{"id":"20240218160602-dia4wu1","updated":"20240218160602"},"Children":[{"Type":"NodeText","Data":"让 Web 服务器在把页面发送给用户之前执行脚本。这样的脚本可以确定把哪些内容发送给浏览器以显示给用户，比如从在线商店的数据库获取产品价格，在用户登录到站点的私有区域之前核对用户身份，或是从邮箱获取邮件内容。这些脚本通常运行在 Web 服务器上，而且是在生成请求的页面并提供给用户之前运行的。因此，我们称之为服务器端脚本（server-side scripting）。"}]},{"ID":"20240218160602-jdbsv8o","Type":"NodeParagraph","Properties":{"id":"20240218160602-jdbsv8o","updated":"20240218160602"},"Children":[{"Type":"NodeText","Data":"另一种方式并不是在服务器运行脚本，而是把脚本与页面内容一起发送给用户的浏览器。然后浏览器运行这些脚本，操作已经发送给浏览器的页面内容。这些脚本的主要功能包括动画页面的部分内容，重新安排页面布局，允许用户在页面内拖放元素，验证用户在表单里输入的内容，把用户重定向到其他页面，等等。我们自然而然地将这些脚本称为客户端脚本（client-side scripting）。"}]},{"ID":"20240218160602-g34706a","Type":"NodeParagraph","Properties":{"id":"20240218160602-g34706a","updated":"20240218160602"},"Children":[{"Type":"NodeText","Data":"本书主要介绍 JavaScript，它是互联网上应用最广泛的客户端脚本语言。"}]}]}