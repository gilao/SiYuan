{"ID":"20240411162140-hy0u7bv","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f427","id":"20240411162140-hy0u7bv","title":"本地化部署大模型方案一：入门-本地化部署-接入大模型","updated":"20240411173046"},"Children":[{"ID":"20240411162218-p6s66vm","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240411162218-p6s66vm","updated":"20240411165036"},"Children":[{"Type":"NodeText","Data":"LangChain 之六大核心模块"}]},{"ID":"20240411165037-hvg7rbe","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240411165037-hvg7rbe","updated":"20240411165305"},"Children":[{"ID":"20240411165305-f22815p","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240411165305-f22815p","updated":"20240411165305"},"Children":[{"ID":"20240411165305-d9ilsev","Type":"NodeParagraph","Properties":{"id":"20240411165305-d9ilsev","updated":"20240411165414"},"Children":[{"Type":"NodeText","Data":"模型（model)：LangChain 支持的各种模型类型和模型集成。"}]}]},{"ID":"20240411165336-faa1d0x","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240411165336-faa1d0x"},"Children":[{"ID":"20240411165336-njghe3r","Type":"NodeParagraph","Properties":{"id":"20240411165336-njghe3r","updated":"20240411165413"},"Children":[{"Type":"NodeText","Data":"提示（prompts）：包括提示管理、提示优化和提示序列化。"}]}]},{"ID":"20240411165416-0u1eerz","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240411165416-0u1eerz"},"Children":[{"ID":"20240411165416-et8hem0","Type":"NodeParagraph","Properties":{"id":"20240411165416-et8hem0","updated":"20240411165604"},"Children":[{"Type":"NodeText","Data":"链（chains): 链不仅仅是单个LLM调用，还包括一系列调用（无论是调用LLM 还是不同的实用工具）。LangChain 提供了一种标准的链接口、许多与其他工具的集成。LangChain 提供了用于常见应用程序的端到端的链调用。"}]}]},{"ID":"20240411165927-hwtm9z3","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20240411165927-hwtm9z3"},"Children":[{"ID":"20240411165927-gjhhwfi","Type":"NodeParagraph","Properties":{"id":"20240411165927-gjhhwfi","updated":"20240411170019"},"Children":[{"Type":"NodeText","Data":"索引（indexes）：与您自己的文本数据结合使用时，语言模型往往更加强大——此模块涵盖了执行此操作的最佳实践。"}]}]},{"ID":"20240411170020-h01xsa1","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20240411170020-h01xsa1"},"Children":[{"ID":"20240411170020-kv5vdx5","Type":"NodeParagraph","Properties":{"id":"20240411170020-kv5vdx5","updated":"20240411170152"},"Children":[{"Type":"NodeText","Data":"代理（agents）：代理涉及 LLM 做出行动决策、执行该行动、查看一个观察结果，并重复该过程直到完成。LangChain 提供了一个标准的代理接口，一系列可供选择的代理，以及端到端代理的示例"}]}]},{"ID":"20240411170152-slwzh77","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ni4=","Num":6},"Properties":{"id":"20240411170152-slwzh77"},"Children":[{"ID":"20240411170152-5bloz5p","Type":"NodeParagraph","Properties":{"id":"20240411170152-5bloz5p","updated":"20240411170307"},"Children":[{"Type":"NodeText","Data":"内存（memory）也叫记忆存储：内存是在链/代理调用之间保持状态的概念。LangChain 提供了一个标准的内存接口、一组内存实现及使用内存的链/代理示例"}]}]}]},{"ID":"20240411170319-bjp8ztv","Type":"NodeParagraph","Properties":{"id":"20240411170319-bjp8ztv","updated":"20240411170329"},"Children":[{"Type":"NodeText","Data":"为了让大家记住这六个核心模块：举个例子-我们在使用使用大模型，首先就要使用模型对接。对接好了，我们怎么开始想怎么问大模型的问题（提示词），接着想好怎么问他，我们需要穿起来(链)。现在要强大我们的大模型，需要让他拥有额外知识(索引)和代替我们做一些工作(代理).再问问的时候我希望他拥有记忆(内存)"}]},{"ID":"20240411170330-2zbarcn","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240411170330-2zbarcn","updated":"20240411170340"},"Children":[{"Type":"NodeText","Data":"如何接入大模型-实战"}]},{"ID":"20240411170341-5betb44","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240411170341-5betb44","updated":"20240411170408"},"Children":[{"Type":"NodeText","Data":"2.1 前提-LangChain 如何对接ChatGPT 等开源模型"}]},{"ID":"20240411170408-af1ihk1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240411170408-af1ihk1","updated":"20240411170428"},"Children":[{"Type":"NodeText","Data":"2.1.1 原生openai 模块调用大模型"}]},{"ID":"20240411170438-1pj065m","Type":"NodeParagraph","Properties":{"id":"20240411170438-1pj065m","updated":"20240411170441"},"Children":[{"Type":"NodeText","Data":"如果你是在国外或者学会了科学上网，并且你在openai注册了key，你就可以使用opanai的模块进行调用"}]},{"ID":"20240411170446-x9ftylu","Type":"NodeParagraph","Properties":{"id":"20240411170446-x9ftylu","updated":"20240411170446"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240411170446-xhzv5zw.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240411170450-a7mviwe","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240411170450-a7mviwe","updated":"20240411170503"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"pip install openai==0.28\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240411170504-uug0nub","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240411170504-uug0nub","updated":"20240411171840"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"import os\nimport openai\n\ndef get_completion(prompt,model=\"gpt-3.5-turbo\"):\n    messages=[{\"role\":\"user\",\"content\":prompt}]\n\n    response=openai.ChatCompletion.create(\n        model=model,\n        messages=messages,\n        temperature=0,\n    )\n    return response.choices[0].message[\"content\"]\n\n\nif __name__ == \"__main__\":\n    # import your OpenAI key (put in your .env file)\n    # 从.env文件中导入OpenAI的API密钥\n\n    with open(\".env\", \"r\") as f:\n        env_file = f.readlines()\n    envs_dict = {\n        key.strip(\"'\"): value.strip(\"\\n\")\n        for key, value in [(i.split(\"=\")) for i in env_file]\n    }\n    os.environ[\"OPENAI_API_KEY\"] = envs_dict[\"OPENAI_API_KEY\"]\n\n    # 第一步这是openai的key\n    openai.api_key = os.environ[\"OPENAI_API_KEY\"]\n    print(get_completion(\"你是谁\"))\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240411171858-k0qkbfd","Type":"NodeParagraph","Properties":{"id":"20240411171858-k0qkbfd","updated":"20240411171858"},"Children":[{"Type":"NodeText","Data":"结果"}]},{"ID":"20240411171859-imfduv5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240411171859-imfduv5","updated":"20240411171904"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"您好！我是一个基于人工智能技术的虚拟助手，旨在回答各种问题并提供帮助。我的设计初衷是为了提供信息、解答疑问以及进行有益的交流。如果您有任何问题，无论是关于科学知识、技术信息还是日常生活中的小事，都可以向我提问，我将尽力为您提供帮助。请注意，我会遵守相关法律法规，确保交流内容的合规性。‍‍```\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240411171906-uqveuwp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240411171906-uqveuwp","updated":"20240411171930"},"Children":[{"Type":"NodeText","Data":"2.1.2 使用LangChain封装的OpenAI 模块"}]},{"ID":"20240411171930-jb4vjkb","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240411171930-jb4vjkb","updated":"20240411171940"},"Children":[{"Type":"NodeText","Data":"2.1.2.1 环境准备"}]},{"ID":"20240411171941-37n156r","Type":"NodeParagraph","Properties":{"id":"20240411171941-37n156r","updated":"20240411171952"},"Children":[{"Type":"NodeText","Data":"前提条件你是部署好了你的本地大模型，并且提供了API接口，如果你还不会搭建本地模型，你可以参考我的另一篇博客"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://blog.csdn.net/huiguo_/article/details/132584559","TextMarkTextContent":"通义千问部署"}]},{"ID":"20240411171953-qifjx91","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240411171953-qifjx91","updated":"20240411172027"},"Children":[{"Type":"NodeText","Data":"2.1.2.2 启动模型"}]},{"ID":"20240411172642-uu0lgdi","Type":"NodeParagraph","Properties":{"id":"20240411172642-uu0lgdi","updated":"20240411172644"},"Children":[{"Type":"NodeText","Data":"拉去官方的demo,一般模型都有自己的demo,大家可以去看看"}]},{"ID":"20240411172709-4syrmla","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240411172709-4syrmla","updated":"20240411172732"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"git clone https://github.com/QwenLM/Qwen.git\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240411172046-hses7mc","Type":"NodeParagraph","Properties":{"id":"20240411172046-hses7mc","updated":"20240411172800"},"Children":[{"Type":"NodeText","Data":"修改Qwen 里面的openai_api 地址为真实的地址"}]},{"ID":"20240411172808-4j3qtjk","Type":"NodeParagraph","Properties":{"id":"20240411172808-4j3qtjk","updated":"20240411172831"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240411172808-fhx7qn4.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"然后就可以正常的启动了"}]},{"ID":"20240411172833-upqyszu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240411172833-upqyszu","updated":"20240411172845"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"pip install openai==0.28\npip install -r requirements.txt\npip install fastapi uvicorn openai pydantic sse_starlette\npython openai_api.py\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240411172734-qsa0ovg","Type":"NodeParagraph","Properties":{"id":"20240411172734-qsa0ovg","updated":"20240411172734"}},{"ID":"20240411172846-0ue16ay","Type":"NodeParagraph","Properties":{"id":"20240411172846-0ue16ay","updated":"20240411172857"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240411172046-6fvuaap.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"可以携带你参数"}]},{"ID":"20240411172858-cau96pu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240411172858-cau96pu","updated":"20240411172903"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"--checkpoint-path 增量模型地址\n--cpu-only cpu启动\n--server-port 服务端口默认8000\n--server-name 服务ip默认127.0.0.1\n---disable-gc在生成每个响应后禁用GC。\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240411172947-852vxpi","Type":"NodeParagraph","Properties":{"id":"20240411172947-852vxpi","updated":"20240411172947"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240411172947-a84vg0j.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240411172949-ifsypdh","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240411172949-ifsypdh","updated":"20240411172959"},"Children":[{"Type":"NodeText","Data":"2.1.2.3 使用模型"}]},{"ID":"20240411173000-2m48k16","Type":"NodeParagraph","Properties":{"id":"20240411173000-2m48k16","updated":"20240411173006"},"Children":[{"Type":"NodeText","Data":"当然此时我们还是可以使用openai的模块进行调用"}]},{"ID":"20240411173008-mrwje00","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240411173008-mrwje00","updated":"20240411173013"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"import openai\nopenai.api_base = \"http://localhost:8000/v1\"\nopenai.api_key = \"none\"\n\n# 使用流式回复的请求\nfor chunk in openai.ChatCompletion.create(\n    model=\"Qwen\",\n    messages=[\n        {\"role\": \"user\", \"content\": \"你好\"}\n    ],\n    stream=True\n    # 流式输出的自定义stopwords功能尚未支持，正在开发中\n):\n    if hasattr(chunk.choices[0].delta, \"content\"):\n        print(chunk.choices[0].delta.content, end=\"\", flush=True)\n\n# 不使用流式回复的请求\nresponse = openai.ChatCompletion.create(\n    model=\"Qwen\",\n    messages=[\n        {\"role\": \"user\", \"content\": \"你好\"}\n    ],\n    stream=False,\n    stop=[] # 在此处添加自定义的stop words 例如ReAct prompting时需要增加： stop=[\"Observation:\"]。\n)\nprint(response.choices[0].message.content)\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240411173019-by59h7a","Type":"NodeParagraph","Properties":{"id":"20240411173019-by59h7a","updated":"20240411173024"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240411173019-tu4l42g.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​当然应为我们选择LangChain最为我们的中间件，我们也可以使用LangChain封装的模块使用"}]},{"ID":"20240411173025-el3fzz2","Type":"NodeParagraph","Properties":{"id":"20240411173025-el3fzz2"}},{"ID":"20240411173026-qshuuo5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240411173026-qshuuo5","updated":"20240411173034"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"pip install langchain\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240411173037-3qdhlls","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240411173037-3qdhlls","updated":"20240411173038"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"from langchain.chat_models import ChatOpenAI\n\nfrom langchain.schema import HumanMessage\n\nllm = ChatOpenAI(\n    streaming=True,\n    verbose=True,\n    # callbacks=[callback],\n    openai_api_key=\"none\",\n    openai_api_base=\"http://127.0.0.1:8000/v1\",\n    model_name=\"Qwen-7B-Chat\"\n)\ninstructions = \"\"\"\n你将得到一个带有水果名称的句子,提取这些水果名称并为其分配一个表情符号\n在 python 字典中返回水果名称和表情符号\n\"\"\"\n\nfruit_names = \"\"\"\n苹果,梨,这是奇异果\n\"\"\"\n\n# 制作结合说明和水果名称的提示\nprompt = (instructions + fruit_names)\n\n# Call the LLM\noutput = llm([HumanMessage(content=prompt)])\n\nprint (output.content)\nprint(\"========\")\nprint (type(output.content))\n# 苹果: 🍎梨: 🥐奇异果: 🍓\n# ========\n# \u003cclass 'str'\u003e\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240411173046-hh6s9do","Type":"NodeParagraph","Properties":{"id":"20240411173046-hh6s9do","updated":"20240411173046"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240411173046-u62uazc.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]}]}