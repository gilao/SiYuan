{"ID":"20240507103124-hhp9fii","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f4ac","id":"20240507103124-hhp9fii","title":"queue_length 的实现原理","type":"doc","updated":"20240508182459"},"Children":[{"ID":"20240508104931-wplknsa","Type":"NodeParagraph","Properties":{"id":"20240508104931-wplknsa"}},{"ID":"20240508100126-z2b4mo4","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240508100126-z2b4mo4","updated":"20240508100127"},"Children":[{"Type":"NodeText","Data":"queue_length 的实现原理"}]},{"ID":"20240507103406-0f2mz1j","Type":"NodeParagraph","Properties":{"id":"20240507103406-0f2mz1j","updated":"20240508100127"},"Children":[{"Type":"NodeText","Data":"queue_length指标有效反映了model_worker的即时负载状况，直观展示了当前工作者的任务队列饱和度及资源利用情况。该指标成为实现负载均衡策略的关键参考依据，特别是在采取最短队列长度调度算法时，能确保任务被智能分配至压力最小的工作节点，从而优化整体系统效率与响应速度。"}]},{"ID":"20240507103149-87ack6a","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240507103149-87ack6a","updated":"20240508100127"},"Children":[{"Type":"NodeText","Data":"queue_length 的获取"}]},{"ID":"20240508105359-0kogvx0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240508105359-0kogvx0","updated":"20240508105419"},"Children":[{"Type":"NodeText","Data":"base_model_worker:"}]},{"ID":"20240508105430-77czxye","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508105430-77czxye","updated":"20240508105430"},"Children":[{"Type":"NodeText","Data":"get_queue_length()"}]},{"ID":"20240507105222-5luxhex","Type":"NodeParagraph","Properties":{"id":"20240507105222-5luxhex","updated":"20240508105430"},"Children":[{"Type":"NodeText","Data":"在"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"base_model_worker.py"},{"Type":"NodeText","Data":"​ 中是基于"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"base_model_worker"},{"Type":"NodeText","Data":"​类中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"get_queue_length"},{"Type":"NodeText","Data":"​方法实现："}]},{"ID":"20240507154125-y2mtvhx","Type":"NodeParagraph","Properties":{"id":"20240507154125-y2mtvhx","updated":"20240508105430"},"Children":[{"Type":"NodeText","Data":"检查 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"self.semaphore"},{"Type":"NodeText","Data":"​ 是否为空，如果为空则设置 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"queue_length"},{"Type":"NodeText","Data":"​ 为 0，"}]},{"ID":"20240507154358-y2b2qns","Type":"NodeParagraph","Properties":{"id":"20240507154358-y2b2qns","updated":"20240508105430"},"Children":[{"Type":"NodeText","Data":"如果 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"self.semaphore"},{"Type":"NodeText","Data":"​ 不为空，在判断 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"self.semaphore._value"},{"Type":"NodeText","Data":"​ 是否为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"None"},{"Type":"NodeText","Data":"​，如果是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"None"},{"Type":"NodeText","Data":"​ 则 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"sempahore_value"},{"Type":"NodeText","Data":"​ 为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"self.limit_worker_concurrency"},{"Type":"NodeText","Data":"​，如果不为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"None"},{"Type":"NodeText","Data":"​则为"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"self.semaphore._value"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20240507103124-4mey1mc","Type":"NodeList","ListData":{},"Properties":{"id":"20240507103124-4mey1mc","updated":"20240508105430"},"Children":[{"ID":"20240507154006-1wrfa3c","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240507154006-1wrfa3c","updated":"20240507154006"},"Children":[{"ID":"20240507154006-tzhnaqj","Type":"NodeParagraph","Properties":{"id":"20240507154006-tzhnaqj","updated":"20240507154044"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"--limit-worker-concurrency"},{"Type":"NodeText","Data":"​在 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"vllm_worker"},{"Type":"NodeText","Data":" 中默认值为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"1024"},{"Type":"NodeText","Data":"​；"}]}]},{"ID":"20240507154010-9jaki89","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240507154010-9jaki89"},"Children":[{"ID":"20240507154010-9fd3z5y","Type":"NodeParagraph","Properties":{"id":"20240507154010-9fd3z5y","updated":"20240507154108"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"--limit-worker-concurrency"},{"Type":"NodeText","Data":"​在 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"model_worker"},{"Type":"NodeText","Data":" 中默认值为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"5"},{"Type":"NodeText","Data":"​。"}]}]}]},{"ID":"20240507154653-3ptsfyv","Type":"NodeParagraph","Properties":{"id":"20240507154653-3ptsfyv","updated":"20240508105430"},"Children":[{"Type":"NodeText","Data":"设置 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"waiter_count"},{"Type":"NodeText","Data":"​（等待的线程数量），判断信号量对象的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"self.semaphore._waiters"},{"Type":"NodeText","Data":"​属性是否为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"None"},{"Type":"NodeText","Data":"​，如果是，则返回 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":"​；否则返回 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"self.semaphore._waiters"},{"Type":"NodeText","Data":"​ 属性的长度。"}]},{"ID":"20240507154109-hyhvovn","Type":"NodeParagraph","Properties":{"id":"20240507154109-hyhvovn","updated":"20240508100127"},"Children":[{"Type":"NodeText","Data":"然后返回 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"queue_length"},{"Type":"NodeText","Data":"​长度为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"self.limit_worker_concurrency - sempahore_value + waiter_count"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240508105603-dd2ovug","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508105603-dd2ovug","updated":"20240508105620"},"Children":[{"Type":"NodeText","Data":"send_heart_beat()"}]},{"ID":"20240508105621-3p7dzu9","Type":"NodeParagraph","Properties":{"id":"20240508105621-3p7dzu9","updated":"20240508105703"},"Children":[{"Type":"NodeText","Data":"通过调用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"get_queue_length()"},{"Type":"NodeText","Data":"​获取"}]},{"ID":"20240508105423-zsqq7qc","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508105423-zsqq7qc","updated":"20240508105442"},"Children":[{"Type":"NodeText","Data":"get_status()"}]},{"ID":"20240508105442-0f8es4b","Type":"NodeParagraph","Properties":{"id":"20240508105442-0f8es4b","updated":"20240508105705"},"Children":[{"Type":"NodeText","Data":"通过调用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"get_queue_length()"},{"Type":"NodeText","Data":"​获取"}]},{"ID":"20240508105503-fopnlkt","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508105503-fopnlkt","updated":"20240508105535"},"Children":[{"Type":"NodeText","Data":"register_to_controller()"}]},{"ID":"20240508105535-ts7u1c6","Type":"NodeParagraph","Properties":{"id":"20240508105535-ts7u1c6","updated":"20240508105712"},"Children":[{"Type":"NodeText","Data":"通过调用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"get_status()"},{"Type":"NodeText","Data":"​获取"}]},{"ID":"20240508105557-ibk72ph","Type":"NodeParagraph","Properties":{"id":"20240508105557-ibk72ph","updated":"20240508105557"}},{"ID":"20240507155116-j9ywn5q","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240507155116-j9ywn5q","updated":"20240508100127"},"Children":[{"Type":"NodeText","Data":"semaphore"}]},{"ID":"20240507155553-ec7lxf5","Type":"NodeParagraph","Properties":{"id":"20240507155553-ec7lxf5","updated":"20240508100127"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"acquire_worker_semaphore"},{"Type":"NodeText","Data":"​ 的主要作用控制工作线程的并发执行数量，以防止超过预设的并发限制。"}]},{"ID":"20240507155820-l2aitw5","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240507155820-l2aitw5","updated":"20240508100127"},"Children":[{"ID":"20240507155822-4zcpmbf","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240507155822-4zcpmbf","updated":"20240507155822"},"Children":[{"ID":"20240507155822-08vc0vn","Type":"NodeParagraph","Properties":{"id":"20240507155822-08vc0vn","updated":"20240507155929"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"检查信号量是否已存在："},{"Type":"NodeText","Data":" 检查 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker.semaphore"},{"Type":"NodeText","Data":"​ 是否为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"None"},{"Type":"NodeText","Data":"​。如果第一次调用该函数，或者信号量已被释放（即所有线程已完成），那么worker.semaphore将是None。"}]}]},{"ID":"20240507155935-u6cpzvu","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240507155935-u6cpzvu"},"Children":[{"ID":"20240507155935-qvuk1cd","Type":"NodeParagraph","Properties":{"id":"20240507155935-qvuk1cd","updated":"20240507160027"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"创建或初始化信号量："},{"Type":"NodeText","Data":" 如果 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker_semaphore"},{"Type":"NodeText","Data":"​ 为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"none"},{"Type":"NodeText","Data":"​，，函数会创建一个新的asyncio.Semaphore实例。Semaphore是一个同步原语，用于限制同时访问资源的数量。在这里，它被初始化为worker.limit_worker_concurrency的值，这意味着最多可以有这个数量的工作线程并发执行。"}]}]},{"ID":"20240507160047-q444hro","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240507160047-q444hro","updated":"20240507160052"},"Children":[{"ID":"20240507160047-2uzwm2b","Type":"NodeParagraph","Properties":{"id":"20240507160047-2uzwm2b","updated":"20240507160052"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"获取信号量："},{"Type":"NodeText","Data":"最后，函数返回worker.semaphore.acquire()的结果。acquire()是一个异步方法，当调用时，它会阻塞当前任务，直到信号量可用。一旦获取到信号量，工作线程就可以开始执行，同时确保并发数量不会超过限制。"}]}]}]},{"ID":"20240507155931-1j74x2i","Type":"NodeBlockquote","Properties":{"id":"20240507155931-1j74x2i","updated":"20240508100127"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240507160229-p8ty69z","Type":"NodeParagraph","Properties":{"id":"20240507160229-p8ty69z","updated":"20240507160310"},"Children":[{"Type":"NodeText","Data":"Semaphore类是Python的并发控制工具，主要用于限制同时访问特定资源的线程或协程数量。它基于信号量的概念，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"维护了一个内部计数器_value，表示当前可用的资源数量。此外，它还有一个双端队列_waiters，用于存储因资源不足而等待的协程的Future对象。"}]},{"ID":"20240507160313-e7kh7dd","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240507160313-e7kh7dd","updated":"20240507160904"},"Children":[{"ID":"20240507160319-fkoxqpz","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240507160319-fkoxqpz","updated":"20240507160904"},"Children":[{"ID":"20240507160319-yo9x6rv","Type":"NodeParagraph","Properties":{"id":"20240507160319-yo9x6rv","updated":"20240507160904"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"构造方法："},{"Type":"NodeText","Data":"初始化Semaphore对象，value参数表示初始资源数量，默认为0。"}]}]},{"ID":"20240507160341-1f95f4r","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240507160341-1f95f4r","updated":"20240507160859"},"Children":[{"ID":"20240507160341-qs17mm8","Type":"NodeParagraph","Properties":{"id":"20240507160341-qs17mm8","updated":"20240507160859"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"状态检查：locked(self) -\u0026gt; bool:"},{"Type":"NodeText","Data":" 返回一个布尔值，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"表示Semaphore是否处于锁定状态。如果_value为0，表示所有资源都被占用，返回True；否则返回False。"}]}]},{"ID":"20240507160418-yzop91a","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240507160418-yzop91a","updated":"20240507160856"},"Children":[{"ID":"20240507160418-1l4s0ec","Type":"NodeParagraph","Properties":{"id":"20240507160418-1l4s0ec","updated":"20240507160856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"资源获取：acquire(self) -\u0026gt; Literal[True]:"},{"Type":"NodeText","Data":" "},{"Type":"NodeText","Data":"协程调用此方法尝试获取资源。如果_value大于0，减少_value并立即返回True，表示成功获取资源。如果_value为0，协程会被挂起，并将它的Future对象添加到_waiters队列中，等待其他协程释放资源。"}]}]},{"ID":"20240507160443-o4bnms4","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20240507160443-o4bnms4","updated":"20240507160826"},"Children":[{"ID":"20240507160443-kazn7v6","Type":"NodeParagraph","Properties":{"id":"20240507160443-kazn7v6","updated":"20240507160826"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"资源释放：release(self) -\u0026gt; None:"},{"Type":"NodeText","Data":" "},{"Type":"NodeText","Data":"当一个协程完成其任务后，调用此方法"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"释放资源"},{"Type":"NodeText","Data":"。增加_value的值，如果_waiters队列非空，会唤醒队列的第一个协程（即调用_wake_up_next()方法），允许该协程继续执行。"}]}]},{"ID":"20240507160456-og8zmz1","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20240507160456-og8zmz1","updated":"20240507160850"},"Children":[{"ID":"20240507160456-jb8dwro","Type":"NodeParagraph","Properties":{"id":"20240507160456-jb8dwro","updated":"20240507160850"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"唤醒协程：_wake_up_next(self) -\u0026gt; None:"},{"Type":"NodeText","Data":" 这是一个内部方法，用于唤醒_waiters队列中的下一个等待协程。它从队列中取出一个Future对象，将其标记为已完成，从而使对应的协程能够继续执行。这个方法通常在release()方法中被调用来平衡资源的分配。"}]}]}]}]},{"ID":"20240508100110-yk341qw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240508100110-yk341qw","updated":"20240508100141"},"Children":[{"Type":"NodeText","Data":"semaphore 的使用示例"}]},{"ID":"20240508100142-4u2i4uk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240508100142-4u2i4uk","updated":"20240508100204"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"import asyncio\n\n\n# async def task(id, seamphore):\n#     async with seamphore:\n#         print(f'Task {id} is running,value: {seamphore._value},waiters: {len(seamphore._waiters)}')\n#         await asyncio.sleep(id)\n#         print(f'Task {id} is done')\n\n\nasync def task(id, seamphore):\n    await seamphore.acquire()\n    waiter_count = (\n        0 if seamphore._waiters is None else len(seamphore._waiters)\n    )\n    print(f'Task {id} is running,value: {seamphore._value},waiters: {waiter_count}')\n    await asyncio.sleep(1)\n    print(f'Task {id} is done')\n    seamphore.release()\n\n\nasync def main():\n    seamphore = asyncio.Semaphore(3)\n    tasks = [task(i, seamphore) for i in range(20)]\n    await asyncio.gather(*tasks)\n\n\nasyncio.run(main())\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240508105252-lol1939","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240508105252-lol1939","updated":"20240508105307"},"Children":[{"Type":"NodeText","Data":"queue_length 的更改"}]},{"ID":"20240508105818-j6na00g","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240508105818-j6na00g","updated":"20240508112041"},"Children":[{"Type":"NodeText","Data":"controller"}]},{"ID":"20240508112042-cb2swhy","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508112042-cb2swhy","updated":"20240508112049"},"Children":[{"Type":"NodeText","Data":"get_worker_address()"}]},{"ID":"20240508112050-nw67i8e","Type":"NodeParagraph","Properties":{"id":"20240508112050-nw67i8e","updated":"20240508112422"},"Children":[{"Type":"NodeText","Data":"在使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SHORTEST_QUEUE"},{"Type":"NodeText","Data":"​调度策略时，当成功返回一个"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker_address"},{"Type":"NodeText","Data":"​时，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker_info"},{"Type":"NodeText","Data":"​中对应的"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker_name"},{"Type":"NodeText","Data":"​的"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"queue_length"},{"Type":"NodeText","Data":"​加1；"}]},{"ID":"20240508112435-xyvo2dd","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508112435-xyvo2dd","updated":"20240508112551"},"Children":[{"Type":"NodeText","Data":"Post "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/receive_heart_beat"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240508112552-9lxxzmi","Type":"NodeParagraph","Properties":{"id":"20240508112552-9lxxzmi","updated":"20240508182028"},"Children":[{"Type":"NodeText","Data":"接收 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"model_worker"},{"Type":"NodeText","Data":"​发送的心跳信号(包括 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"queue_length"},{"Type":"NodeText","Data":"​)更改其在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"controller"},{"Type":"NodeText","Data":"​中对应的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker"},{"Type":"NodeText","Data":"​的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"queue_length"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20240508182409-i48endp","Type":"NodeParagraph","Properties":{"id":"20240508182409-i48endp","updated":"20240508182449"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"send_heart_beat()"},{"Type":"NodeText","Data":"​发送"}]},{"ID":"20240508182459-kwixez9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240508182459-kwixez9","updated":"20240508182459"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"                    json={\n                        \"worker_name\": self.worker_addr,\n                        \"queue_length\": self.get_queue_length(),\n                    }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240508182029-bbznt91","Type":"NodeParagraph","Properties":{"id":"20240508182029-bbznt91","updated":"20240508182029"}},{"ID":"20240508142337-e3t3iav","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508142337-e3t3iav","updated":"20240508142349"},"Children":[{"Type":"NodeText","Data":"Post "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/register_worker"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240508142351-qqyi2wt","Type":"NodeParagraph","Properties":{"id":"20240508142351-qqyi2wt","updated":"20240508142618"},"Children":[{"Type":"NodeText","Data":"将接收到的注册信息加入到 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker_info"},{"Type":"NodeText","Data":"​字典中，包括对应的"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker_status[\u0026quot;queue_length\u0026quot;]"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20240508112451-66liwkk","Type":"NodeParagraph","Properties":{"id":"20240508112451-66liwkk","updated":"20240508142349"}},{"ID":"20240508112302-by19bsx","Type":"NodeParagraph","Properties":{"id":"20240508112302-by19bsx","updated":"20240508142349"}},{"ID":"20240508105819-qmo4coh","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240508105819-qmo4coh","updated":"20240508105828"},"Children":[{"Type":"NodeText","Data":"queue_length 的查看"}]},{"ID":"20240508105829-l5bv998","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240508105829-l5bv998","updated":"20240508110737"},"Children":[{"Type":"NodeText","Data":"base_model_worker: "}]},{"ID":"20240508105931-6614tqi","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508105931-6614tqi","updated":"20240508110737"},"Children":[{"Type":"NodeText","Data":"Post "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/worker_get_status"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240508105952-ab052lf","Type":"NodeParagraph","Properties":{"id":"20240508105952-ab052lf","updated":"20240508111047"},"Children":[{"Type":"NodeText","Data":"查询worker status;"}]},{"ID":"20240508111048-kwsi9c6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240508111048-kwsi9c6","updated":"20240508111729"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"{\n\t\"model_names\": self.model_names,\n\t\"speed\": 1,\n\t\"queue_length\": self.get_queue_length(),\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240508142756-opx96bd","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240508142756-opx96bd","updated":"20240508142807"},"Children":[{"Type":"NodeText","Data":"controller:"}]},{"ID":"20240508144206-qqwl1n0","Type":"NodeParagraph","Properties":{"id":"20240508144206-qqwl1n0","updated":"20240508144405"}},{"ID":"20240508144207-800d06b","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508144207-800d06b","updated":"20240508144224"},"Children":[{"Type":"NodeText","Data":"get_worker_status():"}]},{"ID":"20240508144225-ha457uv","Type":"NodeParagraph","Properties":{"id":"20240508144225-ha457uv","updated":"20240508144353"},"Children":[{"Type":"NodeText","Data":"调用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker_name"},{"Type":"NodeText","Data":"​对应的"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/worker_get_status"},{"Type":"NodeText","Data":"​的API，将请求成功后的内容返回"}]},{"ID":"20240508142827-n32cn44","Type":"NodeParagraph","Properties":{"id":"20240508142827-n32cn44","updated":"20240508144224"}},{"ID":"20240508142939-sfo9yq5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508142939-sfo9yq5","updated":"20240508142954"},"Children":[{"Type":"NodeText","Data":"worker_api_get_status():"}]},{"ID":"20240508142954-qso0n5h","Type":"NodeParagraph","Properties":{"id":"20240508142954-qso0n5h","updated":"20240508143604"},"Children":[{"Type":"NodeText","Data":"该方法初始化了三个变量——"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"model_names"},{"Type":"NodeText","Data":"​（用于存储所有工作者处理过的模型名称集合）、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"speed"},{"Type":"NodeText","Data":"​（累计所有工作者的处理速度）和"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"queue_length"},{"Type":"NodeText","Data":"​（累计所有工作者的对列长度）。"}]},{"ID":"20240508143613-7oosjp7","Type":"NodeParagraph","Properties":{"id":"20240508143613-7oosjp7","updated":"20240508144043"},"Children":[{"Type":"NodeText","Data":"然后遍历 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker_info"},{"Type":"NodeText","Data":"​中所有的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"w_name"},{"Type":"NodeText","Data":"​，并使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"get_worker_status"},{"Type":"NodeText","Data":"​方法获取"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"worker_status"},{"Type":"NodeText","Data":"​，如果工作者状态不为空，则将其"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"model_name"},{"Type":"NodeText","Data":"​添加到"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"model_names"},{"Type":"NodeText","Data":"​中 ，并将该工作者的速度和队列长度分别累加到总速度"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"speed"},{"Type":"NodeText","Data":"​ 和 总队列长度"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"queue_length"},{"Type":"NodeText","Data":"​上。并将返回一个字典，包括："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"model_name"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"speed"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"queue_length"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20240508144407-qqpjenh","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240508144407-qqpjenh","updated":"20240508144407"},"Children":[{"Type":"NodeText","Data":"Post "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"/worker_api_get_status"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240508144434-sxitvy1","Type":"NodeParagraph","Properties":{"id":"20240508144434-sxitvy1","updated":"20240508144540"},"Children":[{"Type":"NodeText","Data":"调用 worker_api_get_status() 方法，并返回。"}]}]}